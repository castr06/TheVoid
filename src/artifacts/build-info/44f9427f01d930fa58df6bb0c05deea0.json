{
	"id": "44f9427f01d930fa58df6bb0c05deea0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/Void.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.2;\n\nimport \"./ERC404.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract Void is ERC404 {\n    string public dataURI;\n    string public baseTokenURI;\n\n    constructor(address _owner) ERC404(\"Void\", \"VOID\", 18, 10000, _owner) {\n        balanceOf[_owner] = 10000 * 10 ** 18;\n        whitelist[_owner] = true;\n    }\n\n    function yeet(uint256 amount) public {\n        bool yeeting = transfer(address(0), amount);\n        if (yeeting == true){\n            totalSupply -= amount;\n        }\n    }\n\n    function setDataURI(string memory _dataURI) public onlyOwner {\n        dataURI = _dataURI;\n    }\n\n    function setTokenURI(string memory _tokenURI) public onlyOwner {\n        baseTokenURI = _tokenURI;\n    }\n\n    function setNameSymbol(string memory _name, string memory _symbol) public onlyOwner {\n        _setNameSymbol(_name, _symbol);\n    }\n\n    function tokenURI(uint256 id) public view override returns (string memory) {\n        if (bytes(baseTokenURI).length > 0) {\n            return string.concat(baseTokenURI, Strings.toString(id));\n        } else {\n            string memory URI;\n            uint8 seed = uint8(bytes1(keccak256(abi.encodePacked(id))));\n            if (seed <= 100) {\n                URI = string.concat(dataURI,\"1.json\");\n            } else if (seed <= 160) {\n                URI = string.concat(dataURI,\"2.json\");\n            } else if (seed <= 210) {\n                URI = string.concat(dataURI,\"3.json\");\n            } else if (seed <= 240) {\n                URI = string.concat(dataURI,\"4.json\");\n            } else if (seed <= 255) {\n                URI = string.concat(dataURI,\"5.json\"); \n            }\n        return URI;\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"src/ERC404.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nabstract contract Ownable {\n    event OwnershipTransferred(address indexed user, address indexed newOwner);\n\n    error Unauthorized();\n    error InvalidOwner();\n\n    address public owner;\n\n    modifier onlyOwner() virtual {\n        if (msg.sender != owner) revert Unauthorized();\n\n        _;\n    }\n\n    constructor(address _owner) {\n        if (_owner == address(0)) revert InvalidOwner();\n\n        owner = _owner;\n\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    function transferOwnership(address _owner) public virtual onlyOwner {\n        if (_owner == address(0)) revert InvalidOwner();\n\n        owner = _owner;\n\n        emit OwnershipTransferred(msg.sender, _owner);\n    }\n\n    function revokeOwnership() public virtual onlyOwner {\n        owner = address(0);\n\n        emit OwnershipTransferred(msg.sender, address(0));\n    }\n}\n\nabstract contract ERC721Receiver {\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes calldata\n    ) external virtual returns (bytes4) {\n        return ERC721Receiver.onERC721Received.selector;\n    }\n}\n\n/// @notice ERC404\n///         A gas-efficient, mixed ERC20 / ERC721 implementation\n///         with native liquidity and fractionalization.\n///\n///         This is an experimental standard designed to integrate\n///         with pre-existing ERC20 / ERC721 support as smoothly as\n///         possible.\n///\n/// @dev    In order to support full functionality of ERC20 and ERC721\n///         supply assumptions are made that slightly constraint usage.\n///         Ensure decimals are sufficiently large (standard 18 recommended)\n///         as ids are effectively encoded in the lowest range of amounts.\n///\n///         NFTs are spent on ERC20 functions in a FILO queue, this is by\n///         design.\n///\nabstract contract ERC404 is Ownable {\n    // Events\n    event ERC20Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 amount\n    );\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 amount\n    );\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 indexed id\n    );\n    event ERC721Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 indexed id\n    );\n    event ERC20Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 amount\n    );\n    event ApprovalForAll(\n        address indexed owner,\n        address indexed operator,\n        bool approved\n    );\n\n    // Errors\n    error NotFound();\n    error AlreadyExists();\n    error InvalidRecipient();\n    error InvalidSender();\n    error UnsafeRecipient();\n    error InvalidId();\n\n    // Metadata\n    /// @dev Token name\n    string public name;\n\n    /// @dev Token symbol\n    string public symbol;\n\n    /// @dev Decimals for fractional representation\n    uint8 public immutable decimals;\n\n    /// @dev Total supply in fractionalized representation\n    uint256 public totalSupply;\n\n    /// @dev Current mint counter, monotonically increasing to ensure accurate ownership\n    uint256 public minted;\n\n    // Mappings\n\n    /// @dev Balance of user in fractional representation\n    mapping(address => uint256) public balanceOf;\n\n    /// @dev Allowance of user in fractional representation\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    /// @dev Approval in native representaion\n    mapping(uint256 => address) public getApproved;\n\n    /// @dev Approval for all in native representation\n    mapping(address => mapping(address => bool)) public isApprovedForAll;\n\n    /// @dev Owner of id in native representation\n    mapping(uint256 => address) internal _ownerOf;\n\n    /// @dev Array of owned ids in native representation\n    mapping(address => uint256[]) internal _owned;\n\n    /// @dev Tracks indices for the _owned mapping\n    mapping(uint256 => uint256) internal _ownedIndex;\n\n    /// @dev Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)\n    mapping(address => bool) public whitelist;\n\n    // Constructor\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint8 _decimals,\n        uint256 _totalNativeSupply,\n        address _owner\n    ) Ownable(_owner) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _totalNativeSupply * (10 ** decimals);\n    }\n\n    /// @notice Initialization function to set pairs / etc\n    ///         saving gas by avoiding mint / burn on unnecessary targets\n    function setWhitelist(address target, bool state) public onlyOwner {\n        whitelist[target] = state;\n    }\n\n    /// @notice Function to find owner of a given native token\n    function ownerOf(uint256 id) public view virtual returns (address owner) {\n        owner = _ownerOf[id];\n\n        if (owner == address(0)) {\n            revert NotFound();\n        }\n    }\n\n    /// @notice tokenURI must be implemented by child contract\n    function tokenURI(uint256 id) public view virtual returns (string memory);\n\n    /// @notice Function for token approvals\n    /// @dev This function assumes id / native if amount less than or equal to current max id\n    function approve(\n        address spender,\n        uint256 amountOrId\n    ) public virtual returns (bool) {\n        if (amountOrId <= minted && amountOrId > 0) {\n            address owner = _ownerOf[amountOrId];\n\n            if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {\n                revert Unauthorized();\n            }\n\n            getApproved[amountOrId] = spender;\n\n            emit Approval(owner, spender, amountOrId);\n            emit ERC721Approval(owner, spender, amountOrId);\n        } else {\n            allowance[msg.sender][spender] = amountOrId;\n\n            emit Approval(msg.sender, spender, amountOrId);\n            emit ERC20Approval(msg.sender, spender, amountOrId);\n        }\n\n        return true;\n    }\n\n    /// @notice Function native approvals\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        isApprovedForAll[msg.sender][operator] = approved;\n\n        emit ApprovalForAll(msg.sender, operator, approved);\n    }\n\n    /// @notice Function for mixed transfers\n    /// @dev This function assumes id / native if amount less than or equal to current max id\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amountOrId\n   ) public virtual returns(bool) {\n        if (amountOrId <= minted && amountOrId > 0) {\n            if (from != _ownerOf[amountOrId]) {\n                revert InvalidSender();\n            }\n\n            if (to == address(0)) {\n                revert InvalidRecipient();\n            }\n\n            if (\n                msg.sender != from &&\n                !isApprovedForAll[from][msg.sender] &&\n                msg.sender != getApproved[amountOrId]\n            ) {\n                revert Unauthorized();\n            }\n\n            balanceOf[from] -= _getUnit();\n\n            unchecked {\n                balanceOf[to] += _getUnit();\n            }\n\n            _ownerOf[amountOrId] = to;\n            delete getApproved[amountOrId];\n\n            // update _owned for sender\n            uint256 updatedId = _owned[from][_owned[from].length - 1];\n            \n            if (updatedId != amountOrId) {\n                // replace target in owned with last token\n                _owned[from][_ownedIndex[amountOrId]] = updatedId;\n                // update index for the moved id\n                _ownedIndex[updatedId] = _ownedIndex[amountOrId];\n            }\n\n            // pop\n            _owned[from].pop();\n            // push token to to owned\n            _owned[to].push(amountOrId);\n            // update index for to owned\n            _ownedIndex[amountOrId] = _owned[to].length - 1;\n\n            emit Transfer(from, to, amountOrId);\n            emit ERC20Transfer(from, to, _getUnit());\n        } else {\n            uint256 allowed = allowance[from][msg.sender];\n\n            if (allowed != type(uint256).max)\n                allowance[from][msg.sender] = allowed - amountOrId;\n\n            return _transfer(from, to, amountOrId);\n        }\n        return true;\n    }\n\n    /// @notice Function for fractional transfers\n    function transfer(\n        address to,\n        uint256 amount\n    ) public virtual returns (bool) {\n        return _transfer(msg.sender, to, amount);\n    }\n\n    /// @notice Function for native transfers with contract support\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id\n    ) public virtual {\n        if (id > minted || id == 0) {\n            revert InvalidId();\n        }\n\n        transferFrom(from, to, id);\n\n        if (\n            to.code.length != 0 &&\n            ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") !=\n            ERC721Receiver.onERC721Received.selector\n        ) {\n            revert UnsafeRecipient();\n        }\n    }\n\n    /// @notice Function for native transfers with contract support and callback data\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        bytes calldata data\n    ) public virtual {\n         if (id > minted || id == 0) {\n            revert InvalidId();\n        }\n        \n        transferFrom(from, to, id);\n\n        if (\n            to.code.length != 0 &&\n            ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) !=\n            ERC721Receiver.onERC721Received.selector\n        ) {\n            revert UnsafeRecipient();\n        }\n    }\n\n    /// @notice Internal function for fractional transfers\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal returns (bool) {\n        uint256 unit = _getUnit();\n        uint256 balanceBeforeSender = balanceOf[from];\n        uint256 balanceBeforeReceiver = balanceOf[to];\n\n        balanceOf[from] -= amount;\n\n        unchecked {\n            balanceOf[to] += amount;\n        }\n\n        // Skip burn for certain addresses to save gas\n        if (!whitelist[from]) {\n            uint256 tokens_to_burn = (balanceBeforeSender / unit) -\n                (balanceOf[from] / unit);\n            for (uint256 i = 0; i < tokens_to_burn; i++) {\n                _burn(from);\n            }\n        }\n\n        // Skip minting for certain addresses to save gas\n        if (!whitelist[to]) {\n            uint256 tokens_to_mint = (balanceOf[to] / unit) -\n                (balanceBeforeReceiver / unit);\n            for (uint256 i = 0; i < tokens_to_mint; i++) {\n                _mint(to);\n            }\n        }\n\n        emit ERC20Transfer(from, to, amount);\n        return true;\n    }\n\n    // Internal utility logic\n    function _getUnit() internal view returns (uint256) {\n        return 10 ** decimals;\n    }\n\n    function _mint(address to) internal virtual {\n        if (to == address(0)) {\n            revert InvalidRecipient();\n        }\n\n        unchecked {\n            minted++;\n        }\n\n        uint256 id = minted;\n\n        // Prevents duplicate tokens\n        if (_ownerOf[id] != address(0)) {\n            revert AlreadyExists();\n        }\n\n        _ownerOf[id] = to;\n        _owned[to].push(id);\n        _ownedIndex[id] = _owned[to].length - 1;\n\n        emit Transfer(address(0), to, id);\n    }\n\n    function _burn(address from) internal virtual {\n        if (from == address(0)) {\n            revert InvalidSender();\n        }\n\n        uint256 id = _owned[from][_owned[from].length - 1];\n        _owned[from].pop();\n        delete _ownedIndex[id];\n        delete _ownerOf[id];\n        delete getApproved[id];\n\n        emit Transfer(from, address(0), id);\n    }\n\n    function _setNameSymbol(\n        string memory _name,\n        string memory _symbol\n    ) internal {\n        name = _name;\n        symbol = _symbol;\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0x4B 0xC5 DUP7 LOG2 PUSH11 0x6845C8000DA6C720480571 0x29 SWAP14 0xB1 0xB0 BLOCKHASH 0x4B INVALID 0x25 BYTE SWAP9 0xEB XOR PUSH3 0xF48F64 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "251:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b34bc586a26a6845c8000da6c720480571299db1b0404bfe251a98eb1862f48f64736f6c63430008160033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC404.sol",
								"src/Void.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 0xC7 0xDC 0xD3 SWAP3 PUSH17 0xDA57E7CACE3D6A8DBCA771E2BA2488DB1 SWAP8 BYTE SWAP9 PUSH17 0x36CDB107E464736F6C6343000816003300 ",
							"sourceMap": "203:14914:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209cc7dcd392700da57e7cace3d6a8dbca771e2ba2488db1971a987036cdb107e464736f6c63430008160033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC404.sol",
								"src/Void.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 SWAP13 MUL PUSH9 0x8C3858596EE64D3F8C DUP12 BALANCE PUSH22 0x51AA85E161A3892020A7B66F5636DE1D64736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "216:1047:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c39c02688c3858596ee64d3f8c8b317551aa85e161a3892020a7b66f5636de1d64736f6c63430008160033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC404.sol",
								"src/Void.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/ERC404.sol": {
				"ERC404": {
					"abi": [
						{
							"inputs": [],
							"name": "AlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ERC721Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "setWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "In order to support full functionality of ERC20 and ERC721         supply assumptions are made that slightly constraint usage.         Ensure decimals are sufficiently large (standard 18 recommended)         as ids are effectively encoded in the lowest range of amounts.         NFTs are spent on ERC20 functions in a FILO queue, this is by         design.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							},
							"transferFrom(address,address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							}
						},
						"stateVariables": {
							"_owned": {
								"details": "Array of owned ids in native representation"
							},
							"_ownedIndex": {
								"details": "Tracks indices for the _owned mapping"
							},
							"_ownerOf": {
								"details": "Owner of id in native representation"
							},
							"allowance": {
								"details": "Allowance of user in fractional representation"
							},
							"balanceOf": {
								"details": "Balance of user in fractional representation"
							},
							"decimals": {
								"details": "Decimals for fractional representation"
							},
							"getApproved": {
								"details": "Approval in native representaion"
							},
							"isApprovedForAll": {
								"details": "Approval for all in native representation"
							},
							"minted": {
								"details": "Current mint counter, monotonically increasing to ensure accurate ownership"
							},
							"name": {
								"details": "Token name"
							},
							"symbol": {
								"details": "Token symbol"
							},
							"totalSupply": {
								"details": "Total supply in fractionalized representation"
							},
							"whitelist": {
								"details": "Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minted()": "4f02c420",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"revokeOwnership()": "2b968958",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setWhitelist(address,bool)": "53d6fd59",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ERC721Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"In order to support full functionality of ERC20 and ERC721         supply assumptions are made that slightly constraint usage.         Ensure decimals are sufficiently large (standard 18 recommended)         as ids are effectively encoded in the lowest range of amounts.         NFTs are spent on ERC20 functions in a FILO queue, this is by         design.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"},\"transferFrom(address,address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"}},\"stateVariables\":{\"_owned\":{\"details\":\"Array of owned ids in native representation\"},\"_ownedIndex\":{\"details\":\"Tracks indices for the _owned mapping\"},\"_ownerOf\":{\"details\":\"Owner of id in native representation\"},\"allowance\":{\"details\":\"Allowance of user in fractional representation\"},\"balanceOf\":{\"details\":\"Balance of user in fractional representation\"},\"decimals\":{\"details\":\"Decimals for fractional representation\"},\"getApproved\":{\"details\":\"Approval in native representaion\"},\"isApprovedForAll\":{\"details\":\"Approval for all in native representation\"},\"minted\":{\"details\":\"Current mint counter, monotonically increasing to ensure accurate ownership\"},\"name\":{\"details\":\"Token name\"},\"symbol\":{\"details\":\"Token symbol\"},\"totalSupply\":{\"details\":\"Total supply in fractionalized representation\"},\"whitelist\":{\"details\":\"Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Function for token approvals\"},\"ownerOf(uint256)\":{\"notice\":\"Function to find owner of a given native token\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Function for native transfers with contract support\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Function for native transfers with contract support and callback data\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Function native approvals\"},\"setWhitelist(address,bool)\":{\"notice\":\"Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets\"},\"tokenURI(uint256)\":{\"notice\":\"tokenURI must be implemented by child contract\"},\"transfer(address,uint256)\":{\"notice\":\"Function for fractional transfers\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Function for mixed transfers\"}},\"notice\":\"ERC404         A gas-efficient, mixed ERC20 / ERC721 implementation         with native liquidity and fractionalization.         This is an experimental standard designed to integrate         with pre-existing ERC20 / ERC721 support as smoothly as         possible.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC404.sol\":\"ERC404\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC404.sol\":{\"keccak256\":\"0xf229a06127af076ca773f84de0d572a179de9ebe79ce76ee62e186671d14c497\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfdcebe5f31a9914981cd41cd66d68a19bdc46a567d502887b6f825d0b6e955\",\"dweb:/ipfs/QmbdDbUFzzYBG94qxRiQYf5Kvm4MRxyH18urriNH7K4eVo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1427,
								"contract": "src/ERC404.sol:ERC404",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1603,
								"contract": "src/ERC404.sol:ERC404",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1606,
								"contract": "src/ERC404.sol:ERC404",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1612,
								"contract": "src/ERC404.sol:ERC404",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1615,
								"contract": "src/ERC404.sol:ERC404",
								"label": "minted",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1620,
								"contract": "src/ERC404.sol:ERC404",
								"label": "balanceOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1627,
								"contract": "src/ERC404.sol:ERC404",
								"label": "allowance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1632,
								"contract": "src/ERC404.sol:ERC404",
								"label": "getApproved",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1639,
								"contract": "src/ERC404.sol:ERC404",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1644,
								"contract": "src/ERC404.sol:ERC404",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1650,
								"contract": "src/ERC404.sol:ERC404",
								"label": "_owned",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1655,
								"contract": "src/ERC404.sol:ERC404",
								"label": "_ownedIndex",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1660,
								"contract": "src/ERC404.sol:ERC404",
								"label": "whitelist",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Function for token approvals"
							},
							"ownerOf(uint256)": {
								"notice": "Function to find owner of a given native token"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Function for native transfers with contract support"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Function for native transfers with contract support and callback data"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Function native approvals"
							},
							"setWhitelist(address,bool)": {
								"notice": "Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets"
							},
							"tokenURI(uint256)": {
								"notice": "tokenURI must be implemented by child contract"
							},
							"transfer(address,uint256)": {
								"notice": "Function for fractional transfers"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Function for mixed transfers"
							}
						},
						"notice": "ERC404         A gas-efficient, mixed ERC20 / ERC721 implementation         with native liquidity and fractionalization.         This is an experimental standard designed to integrate         with pre-existing ERC20 / ERC721 support as smoothly as         possible.",
						"version": 1
					}
				},
				"ERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC404.sol\":\"ERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC404.sol\":{\"keccak256\":\"0xf229a06127af076ca773f84de0d572a179de9ebe79ce76ee62e186671d14c497\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfdcebe5f31a9914981cd41cd66d68a19bdc46a567d502887b6f825d0b6e955\",\"dweb:/ipfs/QmbdDbUFzzYBG94qxRiQYf5Kvm4MRxyH18urriNH7K4eVo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"revokeOwnership()": "2b968958",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC404.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/ERC404.sol\":{\"keccak256\":\"0xf229a06127af076ca773f84de0d572a179de9ebe79ce76ee62e186671d14c497\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfdcebe5f31a9914981cd41cd66d68a19bdc46a567d502887b6f825d0b6e955\",\"dweb:/ipfs/QmbdDbUFzzYBG94qxRiQYf5Kvm4MRxyH18urriNH7K4eVo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1427,
								"contract": "src/ERC404.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/Void.sol": {
				"Void": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRecipient",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UnsafeRecipient",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ERC20Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ERC721Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dataURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokeOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_dataURI",
									"type": "string"
								}
							],
							"name": "setDataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "setNameSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "setWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "yeet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							},
							"transferFrom(address,address,uint256)": {
								"details": "This function assumes id / native if amount less than or equal to current max id"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/Void.sol\":139:1743  contract Void is ERC404 {... */\n  mstore(0x40, 0xa0)\n    /* \"src/Void.sol\":229:386  constructor(address _owner) ERC404(\"Void\", \"VOID\", 18, 10000, _owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/ERC404.sol\":4181:4506  constructor(... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x159bda59)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x1593d251)\n  dup2\n  mstore\n  pop\n    /* \"src/Void.sol\":280:282  18 */\n  0x12\n    /* \"src/Void.sol\":284:289  10000 */\n  0x2710\n    /* \"src/Void.sol\":291:297  _owner */\n  dup5\n    /* \"src/ERC404.sol\":4352:4358  _owner */\n  dup1\n    /* \"src/ERC404.sol\":426:427  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/ERC404.sol\":408:428  _owner == address(0) */\n  and\n    /* \"src/ERC404.sol\":408:414  _owner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/ERC404.sol\":408:428  _owner == address(0) */\n  and\n  sub\n    /* \"src/ERC404.sol\":404:451  if (_owner == address(0)) revert InvalidOwner() */\n  tag_8\n  jumpi\n    /* \"src/ERC404.sol\":437:451  InvalidOwner() */\n  mload(0x40)\n  shl(0xe0, 0x49e27cff)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/ERC404.sol\":404:451  if (_owner == address(0)) revert InvalidOwner() */\ntag_8:\n    /* \"src/ERC404.sol\":462:467  owner */\n  0x00\n    /* \"src/ERC404.sol\":462:476  owner = _owner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"src/ERC404.sol\":492:532  OwnershipTransferred(address(0), _owner) */\n  mload(0x40)\n    /* \"src/ERC404.sol\":462:476  owner = _owner */\n  swap1\n  swap2\n    /* \"src/ERC404.sol\":462:467  owner */\n  swap1\n    /* \"src/ERC404.sol\":492:532  OwnershipTransferred(address(0), _owner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"src/ERC404.sol\":462:467  owner */\n  dup3\n  swap1\n    /* \"src/ERC404.sol\":492:532  OwnershipTransferred(address(0), _owner) */\n  log3\n  pop\n    /* \"src/ERC404.sol\":4370:4374  name */\n  0x01\n    /* \"src/ERC404.sol\":4370:4382  name = _name */\n  tag_10\n    /* \"src/ERC404.sol\":4377:4382  _name */\n  dup7\n    /* \"src/ERC404.sol\":4370:4374  name */\n  dup3\n    /* \"src/ERC404.sol\":4370:4382  name = _name */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"src/ERC404.sol\":4392:4398  symbol */\n  0x02\n    /* \"src/ERC404.sol\":4392:4408  symbol = _symbol */\n  tag_12\n    /* \"src/ERC404.sol\":4401:4408  _symbol */\n  dup6\n    /* \"src/ERC404.sol\":4392:4398  symbol */\n  dup3\n    /* \"src/ERC404.sol\":4392:4408  symbol = _symbol */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"src/ERC404.sol\":4418:4438  decimals = _decimals */\n  0xff\n  dup4\n  and\n  0x80\n  dup2\n  swap1\n  mstore\n    /* \"src/ERC404.sol\":4484:4498  10 ** decimals */\n  tag_13\n  swap1\n    /* \"src/ERC404.sol\":4484:4486  10 */\n  0x0a\n    /* \"src/ERC404.sol\":4484:4498  10 ** decimals */\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"src/ERC404.sol\":4462:4499  _totalNativeSupply * (10 ** decimals) */\n  tag_15\n  swap1\n    /* \"src/ERC404.sol\":4462:4480  _totalNativeSupply */\n  dup4\n    /* \"src/ERC404.sol\":4462:4499  _totalNativeSupply * (10 ** decimals) */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"src/ERC404.sol\":4448:4459  totalSupply */\n  0x03\n    /* \"src/ERC404.sol\":4448:4499  totalSupply = _totalNativeSupply * (10 ** decimals) */\n  sstore\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/Void.sol\":309:326  balanceOf[_owner] */\n  swap1\n  swap3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"src/Void.sol\":309:318  balanceOf */\n  0x05\n    /* \"src/Void.sol\":309:326  balanceOf[_owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"src/Void.sol\":329:345  10000 * 10 ** 18 */\n  0x021e19e0c9bab2400000\n    /* \"src/Void.sol\":309:345  balanceOf[_owner] = 10000 * 10 ** 18 */\n  swap1\n  sstore\n    /* \"src/Void.sol\":355:364  whitelist */\n  0x0c\n    /* \"src/Void.sol\":355:372  whitelist[_owner] */\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"src/Void.sol\":355:379  whitelist[_owner] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"src/Void.sol\":375:379  true */\n  0x01\n    /* \"src/Void.sol\":355:379  whitelist[_owner] = true */\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/Void.sol\":139:1743  contract Void is ERC404 {... */\n  tag_27\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_29:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_30:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:436   */\ntag_19:\n    /* \"#utility.yul\":370:380   */\n  0x4e487b71\n    /* \"#utility.yul\":365:368   */\n  0xe0\n    /* \"#utility.yul\":361:381   */\n  shl\n    /* \"#utility.yul\":358:359   */\n  0x00\n    /* \"#utility.yul\":351:382   */\n  mstore\n    /* \"#utility.yul\":401:405   */\n  0x41\n    /* \"#utility.yul\":398:399   */\n  0x04\n    /* \"#utility.yul\":391:406   */\n  mstore\n    /* \"#utility.yul\":425:429   */\n  0x24\n    /* \"#utility.yul\":422:423   */\n  0x00\n    /* \"#utility.yul\":415:430   */\n  revert\n    /* \"#utility.yul\":441:821   */\ntag_20:\n    /* \"#utility.yul\":520:521   */\n  0x01\n    /* \"#utility.yul\":516:528   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":563:575   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":584:645   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":638:642   */\n  0x7f\n    /* \"#utility.yul\":630:636   */\n  dup3\n    /* \"#utility.yul\":626:643   */\n  and\n    /* \"#utility.yul\":616:643   */\n  swap2\n  pop\n    /* \"#utility.yul\":584:645   */\ntag_33:\n    /* \"#utility.yul\":691:693   */\n  0x20\n    /* \"#utility.yul\":683:689   */\n  dup3\n    /* \"#utility.yul\":680:694   */\n  lt\n    /* \"#utility.yul\":660:678   */\n  dup2\n    /* \"#utility.yul\":657:695   */\n  sub\n    /* \"#utility.yul\":654:815   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":737:747   */\n  0x4e487b71\n    /* \"#utility.yul\":732:735   */\n  0xe0\n    /* \"#utility.yul\":728:748   */\n  shl\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":718:749   */\n  mstore\n    /* \"#utility.yul\":772:776   */\n  0x22\n    /* \"#utility.yul\":769:770   */\n  0x04\n    /* \"#utility.yul\":762:777   */\n  mstore\n    /* \"#utility.yul\":800:804   */\n  0x24\n    /* \"#utility.yul\":797:798   */\n  0x00\n    /* \"#utility.yul\":790:805   */\n  revert\n    /* \"#utility.yul\":654:815   */\ntag_34:\n  pop\n    /* \"#utility.yul\":441:821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":952:1470   */\ntag_22:\n    /* \"#utility.yul\":1054:1056   */\n  0x1f\n    /* \"#utility.yul\":1049:1052   */\n  dup3\n    /* \"#utility.yul\":1046:1057   */\n  gt\n    /* \"#utility.yul\":1043:1464   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1090:1095   */\n  dup1\n    /* \"#utility.yul\":1087:1088   */\n  0x00\n    /* \"#utility.yul\":1080:1096   */\n  mstore\n    /* \"#utility.yul\":1134:1138   */\n  0x20\n    /* \"#utility.yul\":1131:1132   */\n  0x00\n    /* \"#utility.yul\":1121:1139   */\n  keccak256\n    /* \"#utility.yul\":1204:1206   */\n  0x1f\n    /* \"#utility.yul\":1192:1202   */\n  dup5\n    /* \"#utility.yul\":1188:1207   */\n  add\n    /* \"#utility.yul\":1185:1186   */\n  0x05\n    /* \"#utility.yul\":1181:1208   */\n  shr\n    /* \"#utility.yul\":1175:1179   */\n  dup2\n    /* \"#utility.yul\":1171:1209   */\n  add\n    /* \"#utility.yul\":1240:1244   */\n  0x20\n    /* \"#utility.yul\":1228:1238   */\n  dup6\n    /* \"#utility.yul\":1225:1245   */\n  lt\n    /* \"#utility.yul\":1222:1269   */\n  iszero\n  tag_38\n  jumpi\n  pop\n    /* \"#utility.yul\":1263:1267   */\n  dup1\n    /* \"#utility.yul\":1222:1269   */\ntag_38:\n    /* \"#utility.yul\":1318:1320   */\n  0x1f\n    /* \"#utility.yul\":1313:1316   */\n  dup5\n    /* \"#utility.yul\":1309:1321   */\n  add\n    /* \"#utility.yul\":1306:1307   */\n  0x05\n    /* \"#utility.yul\":1302:1322   */\n  shr\n    /* \"#utility.yul\":1296:1300   */\n  dup3\n    /* \"#utility.yul\":1292:1323   */\n  add\n    /* \"#utility.yul\":1282:1323   */\n  swap2\n  pop\n    /* \"#utility.yul\":1373:1454   */\ntag_39:\n    /* \"#utility.yul\":1391:1393   */\n  dup2\n    /* \"#utility.yul\":1384:1389   */\n  dup2\n    /* \"#utility.yul\":1381:1394   */\n  lt\n    /* \"#utility.yul\":1373:1454   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1436:1452   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n    /* \"#utility.yul\":1373:1454   */\n  jump(tag_39)\ntag_41:\n    /* \"#utility.yul\":1377:1380   */\n  pop\n  pop\n    /* \"#utility.yul\":1043:1464   */\ntag_37:\n    /* \"#utility.yul\":952:1470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1646:2991   */\ntag_11:\n    /* \"#utility.yul\":1766:1776   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1788:1818   */\n  dup2\n  gt\n    /* \"#utility.yul\":1785:1841   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1821:1839   */\n  tag_45\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1850:1947   */\n  tag_46\n    /* \"#utility.yul\":1940:1946   */\n  dup2\n    /* \"#utility.yul\":1900:1938   */\n  tag_47\n    /* \"#utility.yul\":1932:1936   */\n  dup5\n    /* \"#utility.yul\":1926:1937   */\n  sload\n    /* \"#utility.yul\":1900:1938   */\n  tag_20\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1894:1898   */\n  dup5\n    /* \"#utility.yul\":1850:1947   */\n  tag_22\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2002:2006   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2059:2061   */\n  0x1f\n    /* \"#utility.yul\":2048:2062   */\n  dup4\n  gt\n    /* \"#utility.yul\":2076:2077   */\n  0x01\n    /* \"#utility.yul\":2071:2734   */\n  dup2\n  eq\n  tag_49\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2795:2801   */\n  dup5\n    /* \"#utility.yul\":2792:2881   */\n  iszero\n  tag_50\n  jumpi\n  pop\n    /* \"#utility.yul\":2847:2866   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2841:2867   */\n  mload\n    /* \"#utility.yul\":2792:2881   */\ntag_50:\n  not(0x00)\n    /* \"#utility.yul\":1603:1604   */\n  0x03\n    /* \"#utility.yul\":1599:1610   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1595:1619   */\n  shr\n    /* \"#utility.yul\":1591:1620   */\n  not\n    /* \"#utility.yul\":1581:1621   */\n  and\n    /* \"#utility.yul\":1627:1628   */\n  0x01\n    /* \"#utility.yul\":1623:1634   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1578:1635   */\n  or\n    /* \"#utility.yul\":2894:2975   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2041:2985   */\n  jump(tag_48)\n    /* \"#utility.yul\":2071:2734   */\ntag_49:\n    /* \"#utility.yul\":899:900   */\n  0x00\n    /* \"#utility.yul\":892:906   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":936:940   */\n  0x20\n    /* \"#utility.yul\":923:941   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2107:2127   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2225:2461   */\ntag_53:\n    /* \"#utility.yul\":2239:2246   */\n  dup3\n    /* \"#utility.yul\":2236:2237   */\n  dup2\n    /* \"#utility.yul\":2233:2247   */\n  lt\n    /* \"#utility.yul\":2225:2461   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2328:2347   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2322:2348   */\n  mload\n    /* \"#utility.yul\":2307:2349   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2420:2447   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2388:2389   */\n  0x01\n    /* \"#utility.yul\":2376:2390   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2255:2274   */\n  dup5\n  add\n    /* \"#utility.yul\":2225:2461   */\n  jump(tag_53)\ntag_55:\n    /* \"#utility.yul\":2229:2232   */\n  pop\n    /* \"#utility.yul\":2489:2495   */\n  dup6\n    /* \"#utility.yul\":2480:2487   */\n  dup3\n    /* \"#utility.yul\":2477:2496   */\n  lt\n    /* \"#utility.yul\":2474:2675   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":2550:2569   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2544:2570   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2633:2634   */\n  0x03\n    /* \"#utility.yul\":2629:2643   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2645:2648   */\n  0xf8\n    /* \"#utility.yul\":2625:2649   */\n  and\n    /* \"#utility.yul\":2621:2658   */\n  shr\n    /* \"#utility.yul\":2617:2659   */\n  not\n    /* \"#utility.yul\":2602:2660   */\n  and\n    /* \"#utility.yul\":2587:2661   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2474:2675   */\ntag_56:\n  pop\n  pop\n    /* \"#utility.yul\":2721:2722   */\n  0x01\n    /* \"#utility.yul\":2712:2718   */\n  dup5\n    /* \"#utility.yul\":2709:2710   */\n  0x01\n    /* \"#utility.yul\":2705:2719   */\n  shl\n    /* \"#utility.yul\":2701:2723   */\n  add\n    /* \"#utility.yul\":2695:2699   */\n  dup6\n    /* \"#utility.yul\":2688:2724   */\n  sstore\n    /* \"#utility.yul\":2041:2985   */\ntag_48:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1646:2991   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2996:3123   */\ntag_24:\n    /* \"#utility.yul\":3057:3067   */\n  0x4e487b71\n    /* \"#utility.yul\":3052:3055   */\n  0xe0\n    /* \"#utility.yul\":3048:3068   */\n  shl\n    /* \"#utility.yul\":3045:3046   */\n  0x00\n    /* \"#utility.yul\":3038:3069   */\n  mstore\n    /* \"#utility.yul\":3088:3092   */\n  0x11\n    /* \"#utility.yul\":3085:3086   */\n  0x04\n    /* \"#utility.yul\":3078:3093   */\n  mstore\n    /* \"#utility.yul\":3112:3116   */\n  0x24\n    /* \"#utility.yul\":3109:3110   */\n  0x00\n    /* \"#utility.yul\":3102:3117   */\n  revert\n    /* \"#utility.yul\":3128:3544   */\ntag_25:\n    /* \"#utility.yul\":3217:3218   */\n  0x01\n    /* \"#utility.yul\":3254:3259   */\n  dup2\n    /* \"#utility.yul\":3217:3218   */\n  dup2\n    /* \"#utility.yul\":3268:3538   */\ntag_59:\n    /* \"#utility.yul\":3289:3296   */\n  dup1\n    /* \"#utility.yul\":3279:3287   */\n  dup6\n    /* \"#utility.yul\":3276:3297   */\n  gt\n    /* \"#utility.yul\":3268:3538   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3348:3352   */\n  dup2\n    /* \"#utility.yul\":3344:3345   */\n  0x00\n    /* \"#utility.yul\":3340:3346   */\n  not\n    /* \"#utility.yul\":3336:3353   */\n  div\n    /* \"#utility.yul\":3330:3334   */\n  dup3\n    /* \"#utility.yul\":3327:3354   */\n  gt\n    /* \"#utility.yul\":3324:3377   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":3357:3375   */\n  tag_63\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":3407:3414   */\n  dup1\n    /* \"#utility.yul\":3397:3405   */\n  dup6\n    /* \"#utility.yul\":3393:3415   */\n  and\n    /* \"#utility.yul\":3390:3445   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3427:3443   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3390:3445   */\ntag_64:\n    /* \"#utility.yul\":3506:3528   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3466:3481   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3268:3538   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":3272:3275   */\n  pop\n    /* \"#utility.yul\":3128:3544   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3549:4355   */\ntag_26:\n    /* \"#utility.yul\":3598:3603   */\n  0x00\n    /* \"#utility.yul\":3628:3636   */\n  dup3\n    /* \"#utility.yul\":3618:3698   */\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":3669:3670   */\n  0x01\n    /* \"#utility.yul\":3683:3688   */\n  jump(tag_65)\n    /* \"#utility.yul\":3618:3698   */\ntag_66:\n    /* \"#utility.yul\":3717:3721   */\n  dup2\n    /* \"#utility.yul\":3707:3783   */\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":3754:3755   */\n  0x00\n    /* \"#utility.yul\":3768:3773   */\n  jump(tag_65)\n    /* \"#utility.yul\":3707:3783   */\ntag_67:\n    /* \"#utility.yul\":3799:3803   */\n  dup2\n    /* \"#utility.yul\":3817:3818   */\n  0x01\n    /* \"#utility.yul\":3812:3871   */\n  dup2\n  eq\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3885:3886   */\n  0x02\n    /* \"#utility.yul\":3880:4010   */\n  dup2\n  eq\n  tag_70\n  jumpi\n    /* \"#utility.yul\":3792:4010   */\n  jump(tag_68)\n    /* \"#utility.yul\":3812:3871   */\ntag_69:\n    /* \"#utility.yul\":3842:3843   */\n  0x01\n    /* \"#utility.yul\":3833:3843   */\n  swap2\n  pop\n    /* \"#utility.yul\":3856:3861   */\n  pop\n  jump(tag_65)\n    /* \"#utility.yul\":3880:4010   */\ntag_70:\n    /* \"#utility.yul\":3917:3920   */\n  0xff\n    /* \"#utility.yul\":3907:3915   */\n  dup5\n    /* \"#utility.yul\":3904:3921   */\n  gt\n    /* \"#utility.yul\":3901:3944   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3924:3942   */\n  tag_72\n  tag_24\n  jump\t// in\ntag_72:\n  pop\n  pop\n    /* \"#utility.yul\":3980:3981   */\n  0x01\n    /* \"#utility.yul\":3966:3982   */\n  dup3\n  shl\n    /* \"#utility.yul\":3995:4000   */\n  jump(tag_65)\n    /* \"#utility.yul\":3792:4010   */\ntag_68:\n  pop\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4084:4092   */\n  dup4\n    /* \"#utility.yul\":4081:4097   */\n  lt\n    /* \"#utility.yul\":4075:4078   */\n  0x0133\n    /* \"#utility.yul\":4069:4073   */\n  dup4\n    /* \"#utility.yul\":4066:4079   */\n  lt\n    /* \"#utility.yul\":4062:4098   */\n  and\n    /* \"#utility.yul\":4056:4058   */\n  0x4e\n    /* \"#utility.yul\":4046:4054   */\n  dup5\n    /* \"#utility.yul\":4043:4059   */\n  lt\n    /* \"#utility.yul\":4038:4040   */\n  0x0b\n    /* \"#utility.yul\":4032:4036   */\n  dup5\n    /* \"#utility.yul\":4029:4041   */\n  lt\n    /* \"#utility.yul\":4025:4060   */\n  and\n    /* \"#utility.yul\":4022:4099   */\n  or\n    /* \"#utility.yul\":4019:4178   */\n  iszero\n  tag_73\n  jumpi\n  pop\n    /* \"#utility.yul\":4131:4150   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4163:4168   */\n  jump(tag_65)\n    /* \"#utility.yul\":4019:4178   */\ntag_73:\n    /* \"#utility.yul\":4210:4244   */\n  tag_74\n    /* \"#utility.yul\":4235:4243   */\n  dup4\n    /* \"#utility.yul\":4229:4233   */\n  dup4\n    /* \"#utility.yul\":4210:4244   */\n  tag_25\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":4280:4286   */\n  dup1\n    /* \"#utility.yul\":4276:4277   */\n  0x00\n    /* \"#utility.yul\":4272:4278   */\n  not\n    /* \"#utility.yul\":4268:4287   */\n  div\n    /* \"#utility.yul\":4259:4266   */\n  dup3\n    /* \"#utility.yul\":4256:4288   */\n  gt\n    /* \"#utility.yul\":4253:4311   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4291:4309   */\n  tag_76\n  tag_24\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4329:4349   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3549:4355   */\ntag_65:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4360:4500   */\ntag_14:\n    /* \"#utility.yul\":4418:4423   */\n  0x00\n    /* \"#utility.yul\":4447:4494   */\n  tag_30\n    /* \"#utility.yul\":4488:4492   */\n  0xff\n    /* \"#utility.yul\":4478:4486   */\n  dup5\n    /* \"#utility.yul\":4474:4493   */\n  and\n    /* \"#utility.yul\":4468:4472   */\n  dup4\n    /* \"#utility.yul\":4447:4494   */\n  tag_26\n  jump\t// in\n    /* \"#utility.yul\":4505:4673   */\ntag_16:\n    /* \"#utility.yul\":4578:4587   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4609:4618   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4626:4641   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4620:4642   */\n  dup5\n  eq\n    /* \"#utility.yul\":4606:4643   */\n  or\n    /* \"#utility.yul\":4596:4667   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":4647:4665   */\n  tag_65\n  tag_24\n  jump\t// in\n    /* \"#utility.yul\":4505:4673   */\ntag_27:\n    /* \"src/Void.sol\":139:1743  contract Void is ERC404 {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9bca270d0850fcb8a3fcc18af189ab4779e3d042217bf9eb693aea2595978cd8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/Void.sol\":139:1743  contract Void is ERC404 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe0df5b6f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe0df5b6f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf28ca1dd\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc87b56dd\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd547cfb7\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x9b19251a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x504334c2\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x504334c2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x53d6fd59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x664dfa01\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f02c420\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18d217c3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2b968958\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/ERC404.sol\":2838:2856  string public name */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/ERC404.sol\":3518:3564  mapping(uint256 => address) public getApproved */\n    tag_4:\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_42:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1019:1051   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1001:1052   */\n      dup2\n      mstore\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"src/ERC404.sol\":3518:3564  mapping(uint256 => address) public getApproved */\n      tag_40\n        /* \"#utility.yul\":855:1058   */\n      jump\n        /* \"src/ERC404.sol\":5298:6045  function approve(... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1665:1679   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1658:1680   */\n      iszero\n        /* \"#utility.yul\":1640:1681   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1628:1630   */\n      0x20\n        /* \"#utility.yul\":1613:1631   */\n      add\n        /* \"src/ERC404.sol\":5298:6045  function approve(... */\n      tag_40\n        /* \"#utility.yul\":1500:1687   */\n      jump\n        /* \"src/ERC404.sol\":3065:3091  uint256 public totalSupply */\n    tag_6:\n      tag_54\n      sload(0x03)\n      dup2\n      jump\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"src/ERC404.sol\":3065:3091  uint256 public totalSupply */\n      tag_40\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"src/Void.sol\":570:666  function setDataURI(string memory _dataURI) public onlyOwner {... */\n    tag_7:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"src/ERC404.sol\":6441:8305  function transferFrom(... */\n    tag_8:\n      tag_48\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"src/ERC404.sol\":764:911  function revokeOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_58\n      tag_68\n      jump\t// in\n        /* \"src/ERC404.sol\":2968:2999  uint8 public immutable decimals */\n    tag_10:\n      tag_69\n      immutable(\"0x9bca270d0850fcb8a3fcc18af189ab4779e3d042217bf9eb693aea2595978cd8\")\n      dup2\n      jump\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":3562:3566   */\n      0xff\n        /* \"#utility.yul\":3550:3567   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3532:3568   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3520:3522   */\n      0x20\n        /* \"#utility.yul\":3505:3523   */\n      add\n        /* \"src/ERC404.sol\":2968:2999  uint8 public immutable decimals */\n      tag_40\n        /* \"#utility.yul\":3390:3574   */\n      jump\n        /* \"src/ERC404.sol\":8590:9062  function safeTransferFrom(... */\n    tag_11:\n      tag_58\n      tag_74\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"src/ERC404.sol\":3187:3208  uint256 public minted */\n    tag_12:\n      tag_54\n      sload(0x04)\n      dup2\n      jump\n        /* \"src/Void.sol\":782:913  function setNameSymbol(string memory _name, string memory _symbol) public onlyOwner {... */\n    tag_13:\n      tag_58\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"src/ERC404.sol\":4645:4754  function setWhitelist(address target, bool state) public onlyOwner {... */\n    tag_14:\n      tag_58\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"src/ERC404.sol\":4823:5010  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_15:\n      tag_42\n      tag_88\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"src/Void.sol\":392:564  function yeet(uint256 amount) public {... */\n    tag_16:\n      tag_58\n      tag_92\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"src/ERC404.sol\":3290:3334  mapping(address => uint256) public balanceOf */\n    tag_17:\n      tag_54\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"src/ERC404.sol\":229:249  address public owner */\n    tag_18:\n      sload(0x00)\n      tag_42\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/ERC404.sol\":2889:2909  string public symbol */\n    tag_19:\n      tag_38\n      tag_103\n      jump\t// in\n        /* \"src/ERC404.sol\":4114:4155  mapping(address => bool) public whitelist */\n    tag_20:\n      tag_48\n      tag_106\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_106:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/ERC404.sol\":6093:6296  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_21:\n      tag_58\n      tag_110\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"src/ERC404.sol\":8361:8516  function transfer(... */\n    tag_22:\n      tag_48\n      tag_113\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"src/ERC404.sol\":9154:9666  function safeTransferFrom(... */\n    tag_23:\n      tag_58\n      tag_117\n      calldatasize\n      0x04\n      tag_118\n      jump\t// in\n    tag_117:\n      tag_119\n      jump\t// in\n        /* \"src/Void.sol\":919:1741  function tokenURI(uint256 id) public view override returns (string memory) {... */\n    tag_24:\n      tag_38\n      tag_121\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"src/Void.sol\":196:222  string public baseTokenURI */\n    tag_25:\n      tag_38\n      tag_125\n      jump\t// in\n        /* \"src/ERC404.sol\":3401:3465  mapping(address => mapping(address => uint256)) public allowance */\n    tag_26:\n      tag_54\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"src/Void.sol\":672:776  function setTokenURI(string memory _tokenURI) public onlyOwner {... */\n    tag_27:\n      tag_58\n      tag_133\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n        /* \"src/ERC404.sol\":3626:3694  mapping(address => mapping(address => bool)) public isApprovedForAll */\n    tag_28:\n      tag_48\n      tag_136\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_136:\n      0x08\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/Void.sol\":169:190  string public dataURI */\n    tag_29:\n      tag_38\n      tag_140\n      jump\t// in\n        /* \"src/ERC404.sol\":545:758  function transferOwnership(address _owner) public virtual onlyOwner {... */\n    tag_30:\n      tag_58\n      tag_143\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"src/ERC404.sol\":2838:2856  string public name */\n    tag_39:\n      0x01\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_146\n      jump\t// in\n    tag_147:\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"src/ERC404.sol\":5298:6045  function approve(... */\n    tag_51:\n        /* \"src/ERC404.sol\":5398:5402  bool */\n      0x00\n        /* \"src/ERC404.sol\":5432:5438  minted */\n      sload(0x04)\n        /* \"src/ERC404.sol\":5418:5428  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":5418:5438  amountOrId <= minted */\n      gt\n      iszero\n        /* \"src/ERC404.sol\":5418:5456  amountOrId <= minted && amountOrId > 0 */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":5455:5456  0 */\n      0x00\n        /* \"src/ERC404.sol\":5442:5452  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":5442:5456  amountOrId > 0 */\n      gt\n        /* \"src/ERC404.sol\":5418:5456  amountOrId <= minted && amountOrId > 0 */\n    tag_152:\n        /* \"src/ERC404.sol\":5414:6017  if (amountOrId <= minted && amountOrId > 0) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"src/ERC404.sol\":5472:5485  address owner */\n      0x00\n        /* \"src/ERC404.sol\":5488:5508  _ownerOf[amountOrId] */\n      dup3\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5488:5496  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":5488:5508  _ownerOf[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ERC404.sol\":5527:5537  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":5527:5546  msg.sender != owner */\n      dup2\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC404.sol\":5527:5586  msg.sender != owner && !isApprovedForAll[owner][msg.sender] */\n      tag_154\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":5551:5574  isApprovedForAll[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5551:5567  isApprovedForAll */\n      0x08\n        /* \"src/ERC404.sol\":5551:5574  isApprovedForAll[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":5575:5585  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":5551:5586  isApprovedForAll[owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ERC404.sol\":5550:5586  !isApprovedForAll[owner][msg.sender] */\n      iszero\n        /* \"src/ERC404.sol\":5527:5586  msg.sender != owner && !isApprovedForAll[owner][msg.sender] */\n    tag_154:\n        /* \"src/ERC404.sol\":5523:5642  if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"src/ERC404.sol\":5613:5627  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":5523:5642  if (msg.sender != owner && !isApprovedForAll[owner][msg.sender]) {... */\n    tag_155:\n        /* \"src/ERC404.sol\":5656:5679  getApproved[amountOrId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5656:5667  getApproved */\n      0x07\n        /* \"src/ERC404.sol\":5656:5679  getApproved[amountOrId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":5656:5689  getApproved[amountOrId] = spender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":5709:5745  Approval(owner, spender, amountOrId) */\n      swap3\n      mload\n        /* \"#utility.yul\":1838:1863   */\n      dup7\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5709:5745  Approval(owner, spender, amountOrId) */\n      swap1\n      dup5\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"src/ERC404.sol\":5709:5745  Approval(owner, spender, amountOrId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC404.sol\":5795:5805  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":5786:5793  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":5764:5806  ERC721Approval(owner, spender, amountOrId) */\n      and\n        /* \"src/ERC404.sol\":5779:5784  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":5764:5806  ERC721Approval(owner, spender, amountOrId) */\n      and\n      0x797365dabb18fa726ccbccbe18c6f24c34e3b0653f2e99ea873bd7b84763dde6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/ERC404.sol\":5458:5817  {... */\n      pop\n        /* \"src/ERC404.sol\":5414:6017  if (amountOrId <= minted && amountOrId > 0) {... */\n      jump(tag_157)\n    tag_153:\n        /* \"src/ERC404.sol\":5847:5857  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":5837:5858  allowance[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5837:5846  allowance */\n      0x06\n        /* \"src/ERC404.sol\":5837:5858  allowance[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":5837:5867  allowance[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":5837:5880  allowance[msg.sender][spender] = amountOrId */\n      dup7\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      mload\n        /* \"#utility.yul\":1838:1863   */\n      dup6\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":5837:5867  allowance[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"src/ERC404.sol\":5847:5857  msg.sender */\n      swap2\n        /* \"src/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"src/ERC404.sol\":5900:5941  Approval(msg.sender, spender, amountOrId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC404.sol\":5960:6006  ERC20Approval(msg.sender, spender, amountOrId) */\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":5960:6006  ERC20Approval(msg.sender, spender, amountOrId) */\n      dup5\n      and\n      swap1\n        /* \"src/ERC404.sol\":5974:5984  msg.sender */\n      caller\n      swap1\n        /* \"src/ERC404.sol\":5960:6006  ERC20Approval(msg.sender, spender, amountOrId) */\n      0x1f01303a1ce9329d9963e1937c201e23c5543a9e3536e9edead087aec7dc6d83\n      swap1\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"src/ERC404.sol\":5960:6006  ERC20Approval(msg.sender, spender, amountOrId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC404.sol\":5414:6017  if (amountOrId <= minted && amountOrId > 0) {... */\n    tag_157:\n      pop\n        /* \"src/ERC404.sol\":6034:6038  true */\n      0x01\n        /* \"src/ERC404.sol\":5298:6045  function approve(... */\n    tag_151:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":570:666  function setDataURI(string memory _dataURI) public onlyOwner {... */\n    tag_61:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_161\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_161:\n        /* \"src/Void.sol\":641:648  dataURI */\n      0x0d\n        /* \"src/Void.sol\":641:659  dataURI = _dataURI */\n      tag_163\n        /* \"src/Void.sol\":651:659  _dataURI */\n      dup3\n        /* \"src/Void.sol\":641:648  dataURI */\n      dup3\n        /* \"src/Void.sol\":641:659  dataURI = _dataURI */\n      tag_164\n      jump\t// in\n    tag_163:\n      pop\n        /* \"src/Void.sol\":570:666  function setDataURI(string memory _dataURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":6441:8305  function transferFrom(... */\n    tag_65:\n        /* \"src/ERC404.sol\":6561:6565  bool */\n      0x00\n        /* \"src/ERC404.sol\":6595:6601  minted */\n      sload(0x04)\n        /* \"src/ERC404.sol\":6581:6591  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":6581:6601  amountOrId <= minted */\n      gt\n      iszero\n        /* \"src/ERC404.sol\":6581:6619  amountOrId <= minted && amountOrId > 0 */\n      dup1\n      iszero\n      tag_166\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":6618:6619  0 */\n      0x00\n        /* \"src/ERC404.sol\":6605:6615  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":6605:6619  amountOrId > 0 */\n      gt\n        /* \"src/ERC404.sol\":6581:6619  amountOrId <= minted && amountOrId > 0 */\n    tag_166:\n        /* \"src/ERC404.sol\":6577:8278  if (amountOrId <= minted && amountOrId > 0) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"src/ERC404.sol\":6647:6667  _ownerOf[amountOrId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":6647:6655  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":6647:6667  _ownerOf[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":6639:6667  from != _ownerOf[amountOrId] */\n      dup6\n      dup2\n      and\n        /* \"src/ERC404.sol\":6647:6667  _ownerOf[amountOrId] */\n      swap2\n      and\n        /* \"src/ERC404.sol\":6639:6667  from != _ownerOf[amountOrId] */\n      eq\n        /* \"src/ERC404.sol\":6635:6724  if (from != _ownerOf[amountOrId]) {... */\n      tag_168\n      jumpi\n        /* \"src/ERC404.sol\":6694:6709  InvalidSender() */\n      mload(0x40)\n      shl(0xe1, 0x6edaef2f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":6635:6724  if (from != _ownerOf[amountOrId]) {... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":6742:6758  to == address(0) */\n      dup4\n      and\n        /* \"src/ERC404.sol\":6738:6818  if (to == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"src/ERC404.sol\":6785:6803  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":6738:6818  if (to == address(0)) {... */\n    tag_169:\n        /* \"src/ERC404.sol\":6853:6863  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":6853:6871  msg.sender != from */\n      dup6\n      and\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC404.sol\":6853:6926  msg.sender != from &&... */\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":6892:6914  isApprovedForAll[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":6892:6908  isApprovedForAll */\n      0x08\n        /* \"src/ERC404.sol\":6892:6914  isApprovedForAll[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":6915:6925  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":6892:6926  isApprovedForAll[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ERC404.sol\":6891:6926  !isApprovedForAll[from][msg.sender] */\n      iszero\n        /* \"src/ERC404.sol\":6853:6926  msg.sender != from &&... */\n    tag_170:\n        /* \"src/ERC404.sol\":6853:6983  msg.sender != from &&... */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":6960:6983  getApproved[amountOrId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":6960:6971  getApproved */\n      0x07\n        /* \"src/ERC404.sol\":6960:6983  getApproved[amountOrId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ERC404.sol\":6946:6956  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":6946:6983  msg.sender != getApproved[amountOrId] */\n      eq\n      iszero\n        /* \"src/ERC404.sol\":6853:6983  msg.sender != from &&... */\n    tag_171:\n        /* \"src/ERC404.sol\":6832:7052  if (... */\n      iszero\n      tag_172\n      jumpi\n        /* \"src/ERC404.sol\":7023:7037  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":6832:7052  if (... */\n    tag_172:\n        /* \"src/ERC404.sol\":7085:7095  _getUnit() */\n      tag_173\n        /* \"src/ERC404.sol\":7085:7093  _getUnit */\n      tag_174\n        /* \"src/ERC404.sol\":7085:7095  _getUnit() */\n      jump\t// in\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7066:7081  balanceOf[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7066:7075  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":7066:7081  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/ERC404.sol\":7066:7095  balanceOf[from] -= _getUnit() */\n      dup1\n      sload\n        /* \"src/ERC404.sol\":7066:7081  balanceOf[from] */\n      swap1\n      swap2\n      swap1\n        /* \"src/ERC404.sol\":7066:7095  balanceOf[from] -= _getUnit() */\n      tag_175\n      swap1\n      dup5\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"src/ERC404.sol\":7155:7165  _getUnit() */\n      tag_177\n      swap1\n      pop\n        /* \"src/ERC404.sol\":7155:7163  _getUnit */\n      tag_174\n        /* \"src/ERC404.sol\":7155:7165  _getUnit() */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7138:7151  balanceOf[to] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7138:7147  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":7138:7151  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":7138:7165  balanceOf[to] += _getUnit() */\n      dup1\n      sload\n      swap1\n      swap7\n      add\n      swap1\n      swap6\n      sstore\n        /* \"src/ERC404.sol\":7194:7214  _ownerOf[amountOrId] */\n      dup7\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":7194:7202  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":7194:7214  _ownerOf[amountOrId] */\n      dup2\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"src/ERC404.sol\":7194:7219  _ownerOf[amountOrId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap5\n      or\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":7240:7251  getApproved */\n      0x07\n        /* \"src/ERC404.sol\":7240:7263  getApproved[amountOrId] */\n      dup2\n      mstore\n      dup5\n      dup3\n      keccak256\n        /* \"src/ERC404.sol\":7233:7263  delete getApproved[amountOrId] */\n      dup1\n      sload\n      swap1\n      swap4\n      and\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":7338:7350  _owned[from] */\n      swap2\n      dup8\n      and\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":7338:7344  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":7338:7350  _owned[from] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"src/ERC404.sol\":7351:7370  _owned[from].length */\n      dup1\n      sload\n        /* \"src/ERC404.sol\":7351:7374  _owned[from].length - 1 */\n      tag_178\n      swap1\n      0x01\n      swap1\n      tag_176\n      jump\t// in\n    tag_178:\n        /* \"src/ERC404.sol\":7338:7375  _owned[from][_owned[from].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/ERC404.sol\":7318:7375  uint256 updatedId = _owned[from][_owned[from].length - 1] */\n      swap1\n      pop\n        /* \"src/ERC404.sol\":7419:7429  amountOrId */\n      dup3\n        /* \"src/ERC404.sol\":7406:7415  updatedId */\n      dup2\n        /* \"src/ERC404.sol\":7406:7429  updatedId != amountOrId */\n      eq\n        /* \"src/ERC404.sol\":7402:7687  if (updatedId != amountOrId) {... */\n      tag_183\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7508:7520  _owned[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7508:7514  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":7508:7520  _owned[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":7521:7544  _ownedIndex[amountOrId] */\n      dup7\n      dup5\n      mstore\n        /* \"src/ERC404.sol\":7521:7532  _ownedIndex */\n      0x0b\n        /* \"src/ERC404.sol\":7521:7544  _ownedIndex[amountOrId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"src/ERC404.sol\":7508:7545  _owned[from][_ownedIndex[amountOrId]] */\n      dup2\n      sload\n        /* \"src/ERC404.sol\":7548:7557  updatedId */\n      dup4\n      swap3\n        /* \"src/ERC404.sol\":7508:7520  _owned[from] */\n      swap2\n        /* \"src/ERC404.sol\":7521:7544  _ownedIndex[amountOrId] */\n      swap1\n        /* \"src/ERC404.sol\":7508:7545  _owned[from][_ownedIndex[amountOrId]] */\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_181\n      jump\t// in\n    tag_185:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"src/ERC404.sol\":7508:7557  _owned[from][_ownedIndex[amountOrId]] = updatedId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":7649:7672  _ownedIndex[amountOrId] */\n      dup5\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7649:7660  _ownedIndex */\n      0x0b\n        /* \"src/ERC404.sol\":7649:7672  _ownedIndex[amountOrId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"src/ERC404.sol\":7624:7646  _ownedIndex[updatedId] */\n      dup4\n      dup4\n      mstore\n      swap2\n      keccak256\n        /* \"src/ERC404.sol\":7624:7672  _ownedIndex[updatedId] = _ownedIndex[amountOrId] */\n      sstore\n        /* \"src/ERC404.sol\":7402:7687  if (updatedId != amountOrId) {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7720:7732  _owned[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7720:7726  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":7720:7732  _owned[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":7720:7738  _owned[from].pop() */\n      dup1\n      sload\n      dup1\n      tag_188\n      jumpi\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7790:7800  _owned[to] */\n      dup7\n      and\n      dup1\n      dup4\n      mstore\n        /* \"src/ERC404.sol\":7790:7796  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":7790:7800  _owned[to] */\n      dup3\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":7790:7817  _owned[to].push(amountOrId) */\n      dup1\n      sload\n        /* \"src/ERC404.sol\":7720:7738  _owned[from].pop() */\n      0x01\n        /* \"src/ERC404.sol\":7790:7817  _owned[to].push(amountOrId) */\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      dup3\n      dup7\n      mstore\n      swap4\n      dup6\n      keccak256\n      add\n      dup8\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":7898:7908  _owned[to] */\n      swap3\n      mstore\n        /* \"src/ERC404.sol\":7898:7915  _owned[to].length */\n      swap1\n      sload\n        /* \"src/ERC404.sol\":7898:7919  _owned[to].length - 1 */\n      tag_192\n      swap2\n        /* \"src/ERC404.sol\":7720:7738  _owned[from].pop() */\n      swap1\n        /* \"src/ERC404.sol\":7898:7919  _owned[to].length - 1 */\n      tag_176\n      jump\t// in\n    tag_192:\n        /* \"src/ERC404.sol\":7872:7895  _ownedIndex[amountOrId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":7872:7883  _ownedIndex */\n      0x0b\n        /* \"src/ERC404.sol\":7872:7895  _ownedIndex[amountOrId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/ERC404.sol\":7872:7919  _ownedIndex[amountOrId] = _owned[to].length - 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":7939:7969  Transfer(from, to, amountOrId) */\n      swap1\n      mload\n        /* \"src/ERC404.sol\":7884:7894  amountOrId */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7939:7969  Transfer(from, to, amountOrId) */\n      dup1\n      dup9\n      and\n      swap3\n      swap1\n      dup10\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"src/ERC404.sol\":8008:8010  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7988:8023  ERC20Transfer(from, to, _getUnit()) */\n      and\n        /* \"src/ERC404.sol\":8002:8006  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":7988:8023  ERC20Transfer(from, to, _getUnit()) */\n      and\n      0xe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487\n        /* \"src/ERC404.sol\":8012:8022  _getUnit() */\n      tag_193\n        /* \"src/ERC404.sol\":8012:8020  _getUnit */\n      tag_174\n        /* \"src/ERC404.sol\":8012:8022  _getUnit() */\n      jump\t// in\n    tag_193:\n        /* \"src/ERC404.sol\":7988:8023  ERC20Transfer(from, to, _getUnit()) */\n      mload(0x40)\n        /* \"#utility.yul\":1838:1863   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n        /* \"src/ERC404.sol\":7988:8023  ERC20Transfer(from, to, _getUnit()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC404.sol\":6621:8034  {... */\n      pop\n        /* \"src/ERC404.sol\":6577:8278  if (amountOrId <= minted && amountOrId > 0) {... */\n      jump(tag_195)\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":8072:8087  allowance[from] */\n      dup5\n      and\n        /* \"src/ERC404.sol\":8054:8069  uint256 allowed */\n      0x00\n        /* \"src/ERC404.sol\":8072:8087  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":8072:8081  allowance */\n      0x06\n        /* \"src/ERC404.sol\":8072:8087  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":8088:8098  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":8072:8099  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      not(0x00)\n        /* \"src/ERC404.sol\":8118:8146  allowed != type(uint256).max */\n      dup2\n      eq\n        /* \"src/ERC404.sol\":8114:8214  if (allowed != type(uint256).max)... */\n      tag_196\n      jumpi\n        /* \"src/ERC404.sol\":8194:8214  allowed - amountOrId */\n      tag_197\n        /* \"src/ERC404.sol\":8204:8214  amountOrId */\n      dup4\n        /* \"src/ERC404.sol\":8194:8201  allowed */\n      dup3\n        /* \"src/ERC404.sol\":8194:8214  allowed - amountOrId */\n      tag_176\n      jump\t// in\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":8164:8179  allowance[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":8164:8173  allowance */\n      0x06\n        /* \"src/ERC404.sol\":8164:8179  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":8180:8190  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":8164:8191  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":8164:8214  allowance[from][msg.sender] = allowed - amountOrId */\n      sstore\n        /* \"src/ERC404.sol\":8114:8214  if (allowed != type(uint256).max)... */\n    tag_196:\n        /* \"src/ERC404.sol\":8236:8267  _transfer(from, to, amountOrId) */\n      tag_198\n        /* \"src/ERC404.sol\":8246:8250  from */\n      dup6\n        /* \"src/ERC404.sol\":8252:8254  to */\n      dup6\n        /* \"src/ERC404.sol\":8256:8266  amountOrId */\n      dup6\n        /* \"src/ERC404.sol\":8236:8245  _transfer */\n      tag_199\n        /* \"src/ERC404.sol\":8236:8267  _transfer(from, to, amountOrId) */\n      jump\t// in\n    tag_198:\n        /* \"src/ERC404.sol\":8229:8267  return _transfer(from, to, amountOrId) */\n      swap2\n      pop\n      pop\n      jump(tag_165)\n        /* \"src/ERC404.sol\":6577:8278  if (amountOrId <= minted && amountOrId > 0) {... */\n    tag_195:\n      pop\n        /* \"src/ERC404.sol\":8294:8298  true */\n      0x01\n        /* \"src/ERC404.sol\":6441:8305  function transferFrom(... */\n    tag_165:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":764:911  function revokeOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_201\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_201:\n        /* \"src/ERC404.sol\":842:843  0 */\n      0x00\n        /* \"src/ERC404.sol\":826:844  owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup2\n      sstore\n        /* \"src/ERC404.sol\":860:904  OwnershipTransferred(msg.sender, address(0)) */\n      mload(0x40)\n        /* \"src/ERC404.sol\":881:891  msg.sender */\n      caller\n      swap1\n        /* \"src/ERC404.sol\":860:904  OwnershipTransferred(msg.sender, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"src/ERC404.sol\":842:843  0 */\n      dup4\n      swap1\n        /* \"src/ERC404.sol\":860:904  OwnershipTransferred(msg.sender, address(0)) */\n      log3\n        /* \"src/ERC404.sol\":764:911  function revokeOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/ERC404.sol\":8590:9062  function safeTransferFrom(... */\n    tag_75:\n        /* \"src/ERC404.sol\":8718:8724  minted */\n      sload(0x04)\n        /* \"src/ERC404.sol\":8713:8715  id */\n      dup2\n        /* \"src/ERC404.sol\":8713:8724  id > minted */\n      gt\n        /* \"src/ERC404.sol\":8713:8735  id > minted || id == 0 */\n      dup1\n      tag_204\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":8728:8735  id == 0 */\n      dup1\n      iszero\n        /* \"src/ERC404.sol\":8713:8735  id > minted || id == 0 */\n    tag_204:\n        /* \"src/ERC404.sol\":8709:8780  if (id > minted || id == 0) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"src/ERC404.sol\":8758:8769  InvalidId() */\n      mload(0x40)\n      shl(0xe3, 0x1bf43481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":8709:8780  if (id > minted || id == 0) {... */\n    tag_205:\n        /* \"src/ERC404.sol\":8790:8816  transferFrom(from, to, id) */\n      tag_206\n        /* \"src/ERC404.sol\":8803:8807  from */\n      dup4\n        /* \"src/ERC404.sol\":8809:8811  to */\n      dup4\n        /* \"src/ERC404.sol\":8813:8815  id */\n      dup4\n        /* \"src/ERC404.sol\":8790:8802  transferFrom */\n      tag_65\n        /* \"src/ERC404.sol\":8790:8816  transferFrom(from, to, id) */\n      jump\t// in\n    tag_206:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":8844:8858  to.code.length */\n      dup3\n      and\n      extcodesize\n        /* \"src/ERC404.sol\":8844:8863  to.code.length != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC404.sol\":8844:8996  to.code.length != 0 &&... */\n      tag_207\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":8879:8940  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":8915:8925  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":8879:8940  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9137:9171   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9207:9222   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":9187:9205   */\n      0x24\n      dup5\n      add\n        /* \"#utility.yul\":9180:9223   */\n      mstore\n        /* \"#utility.yul\":9239:9257   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":9232:9266   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9302:9305   */\n      0x80\n        /* \"#utility.yul\":9282:9300   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":9275:9306   */\n      mstore\n      0x00\n        /* \"#utility.yul\":9322:9341   */\n      0x84\n      dup5\n      add\n        /* \"#utility.yul\":9315:9345   */\n      mstore\n        /* \"src/ERC404.sol\":8956:8996  ERC721Receiver.onERC721Received.selector */\n      swap1\n      swap2\n        /* \"src/ERC404.sol\":8879:8914  ERC721Receiver(to).onERC721Received */\n      swap1\n      dup5\n      and\n      swap1\n        /* \"src/ERC404.sol\":8956:8996  ERC721Receiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"#utility.yul\":9362:9381   */\n      0xa4\n      add\n        /* \"src/ERC404.sol\":8879:8940  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/ERC404.sol\":8879:8996  ERC721Receiver(to).onERC721Received(msg.sender, from, id, \"\") !=... */\n      and\n      eq\n      iszero\n        /* \"src/ERC404.sol\":8844:8996  to.code.length != 0 &&... */\n    tag_207:\n        /* \"src/ERC404.sol\":8827:9056  if (... */\n      iszero\n      tag_214\n      jumpi\n        /* \"src/ERC404.sol\":9028:9045  UnsafeRecipient() */\n      mload(0x40)\n      shl(0xe0, 0x3da63931)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":8827:9056  if (... */\n    tag_214:\n        /* \"src/ERC404.sol\":8590:9062  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":782:913  function setNameSymbol(string memory _name, string memory _symbol) public onlyOwner {... */\n    tag_82:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_216\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_216:\n        /* \"src/Void.sol\":876:906  _setNameSymbol(_name, _symbol) */\n      tag_163\n        /* \"src/Void.sol\":891:896  _name */\n      dup3\n        /* \"src/Void.sol\":898:905  _symbol */\n      dup3\n        /* \"src/Void.sol\":876:890  _setNameSymbol */\n      tag_219\n        /* \"src/Void.sol\":876:906  _setNameSymbol(_name, _symbol) */\n      jump\t// in\n        /* \"src/ERC404.sol\":4645:4754  function setWhitelist(address target, bool state) public onlyOwner {... */\n    tag_86:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_221\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":4722:4739  whitelist[target] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":4722:4731  whitelist */\n      0x0c\n        /* \"src/ERC404.sol\":4722:4739  whitelist[target] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":4722:4747  whitelist[target] = state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":4645:4754  function setWhitelist(address target, bool state) public onlyOwner {... */\n      jump\t// out\n        /* \"src/ERC404.sol\":4823:5010  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n    tag_89:\n        /* \"src/ERC404.sol\":4881:4894  address owner */\n      0x00\n        /* \"src/ERC404.sol\":4914:4926  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":4914:4922  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":4914:4926  _ownerOf[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"src/ERC404.sol\":4937:5004  if (owner == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"src/ERC404.sol\":4983:4993  NotFound() */\n      mload(0x40)\n      shl(0xe0, 0xc5723b51)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":4937:5004  if (owner == address(0)) {... */\n    tag_224:\n        /* \"src/ERC404.sol\":4823:5010  function ownerOf(uint256 id) public view virtual returns (address owner) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":392:564  function yeet(uint256 amount) public {... */\n    tag_93:\n        /* \"src/Void.sol\":439:451  bool yeeting */\n      0x00\n        /* \"src/Void.sol\":454:482  transfer(address(0), amount) */\n      tag_226\n        /* \"src/Void.sol\":471:472  0 */\n      0x00\n        /* \"src/Void.sol\":475:481  amount */\n      dup4\n        /* \"src/Void.sol\":454:462  transfer */\n      tag_114\n        /* \"src/Void.sol\":454:482  transfer(address(0), amount) */\n      jump\t// in\n    tag_226:\n        /* \"src/Void.sol\":439:482  bool yeeting = transfer(address(0), amount) */\n      swap1\n      pop\n        /* \"src/Void.sol\":496:511  yeeting == true */\n      dup1\n      iszero\n      iszero\n        /* \"src/Void.sol\":507:511  true */\n      0x01\n        /* \"src/Void.sol\":496:511  yeeting == true */\n      sub\n        /* \"src/Void.sol\":492:558  if (yeeting == true){... */\n      tag_163\n      jumpi\n        /* \"src/Void.sol\":541:547  amount */\n      dup2\n        /* \"src/Void.sol\":526:537  totalSupply */\n      0x03\n      0x00\n        /* \"src/Void.sol\":526:547  totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_228:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/Void.sol\":429:564  {... */\n      pop\n        /* \"src/Void.sol\":392:564  function yeet(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":2889:2909  string public symbol */\n    tag_103:\n      0x02\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n        /* \"src/ERC404.sol\":6093:6296  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_111:\n        /* \"src/ERC404.sol\":6195:6205  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":6178:6206  isApprovedForAll[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":6178:6194  isApprovedForAll */\n      0x08\n        /* \"src/ERC404.sol\":6178:6206  isApprovedForAll[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":6178:6216  isApprovedForAll[msg.sender][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"src/ERC404.sol\":6178:6227  isApprovedForAll[msg.sender][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/ERC404.sol\":6243:6289  ApprovalForAll(msg.sender, operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":1640:1681   */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":6178:6216  isApprovedForAll[msg.sender][operator] */\n      swap2\n      swap3\n        /* \"src/ERC404.sol\":6195:6205  msg.sender */\n      swap2\n        /* \"src/ERC404.sol\":6243:6289  ApprovalForAll(msg.sender, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1613:1631   */\n      add\n        /* \"src/ERC404.sol\":6243:6289  ApprovalForAll(msg.sender, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/ERC404.sol\":6093:6296  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":8361:8516  function transfer(... */\n    tag_114:\n        /* \"src/ERC404.sol\":8453:8457  bool */\n      0x00\n        /* \"src/ERC404.sol\":8476:8509  _transfer(msg.sender, to, amount) */\n      tag_165\n        /* \"src/ERC404.sol\":8486:8496  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":8498:8500  to */\n      dup5\n        /* \"src/ERC404.sol\":8502:8508  amount */\n      dup5\n        /* \"src/ERC404.sol\":8476:8485  _transfer */\n      tag_199\n        /* \"src/ERC404.sol\":8476:8509  _transfer(msg.sender, to, amount) */\n      jump\t// in\n        /* \"src/ERC404.sol\":9154:9666  function safeTransferFrom(... */\n    tag_119:\n        /* \"src/ERC404.sol\":9312:9318  minted */\n      sload(0x04)\n        /* \"src/ERC404.sol\":9307:9309  id */\n      dup4\n        /* \"src/ERC404.sol\":9307:9318  id > minted */\n      gt\n        /* \"src/ERC404.sol\":9307:9329  id > minted || id == 0 */\n      dup1\n      tag_239\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":9322:9329  id == 0 */\n      dup3\n      iszero\n        /* \"src/ERC404.sol\":9307:9329  id > minted || id == 0 */\n    tag_239:\n        /* \"src/ERC404.sol\":9303:9374  if (id > minted || id == 0) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"src/ERC404.sol\":9352:9363  InvalidId() */\n      mload(0x40)\n      shl(0xe3, 0x1bf43481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":9303:9374  if (id > minted || id == 0) {... */\n    tag_240:\n        /* \"src/ERC404.sol\":9392:9418  transferFrom(from, to, id) */\n      tag_241\n        /* \"src/ERC404.sol\":9405:9409  from */\n      dup6\n        /* \"src/ERC404.sol\":9411:9413  to */\n      dup6\n        /* \"src/ERC404.sol\":9415:9417  id */\n      dup6\n        /* \"src/ERC404.sol\":9392:9404  transferFrom */\n      tag_65\n        /* \"src/ERC404.sol\":9392:9418  transferFrom(from, to, id) */\n      jump\t// in\n    tag_241:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":9446:9460  to.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"src/ERC404.sol\":9446:9465  to.code.length != 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/ERC404.sol\":9446:9600  to.code.length != 0 &&... */\n      tag_242\n      jumpi\n      pop\n        /* \"src/ERC404.sol\":9481:9544  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup1\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":9560:9600  ERC721Receiver.onERC721Received.selector */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":9481:9516  ERC721Receiver(to).onERC721Received */\n      dup7\n      and\n      swap1\n        /* \"src/ERC404.sol\":9560:9600  ERC721Receiver.onERC721Received.selector */\n      0x150b7a02\n      swap1\n        /* \"src/ERC404.sol\":9481:9544  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      tag_243\n      swap1\n        /* \"src/ERC404.sol\":9517:9527  msg.sender */\n      caller\n      swap1\n        /* \"src/ERC404.sol\":9529:9533  from */\n      dup11\n      swap1\n        /* \"src/ERC404.sol\":9535:9537  id */\n      dup10\n      swap1\n        /* \"src/ERC404.sol\":9539:9543  data */\n      dup10\n      swap1\n      dup10\n      swap1\n        /* \"src/ERC404.sol\":9481:9544  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) */\n      0x04\n      add\n      tag_244\n      jump\t// in\n    tag_243:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_247:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"src/ERC404.sol\":9481:9600  ERC721Receiver(to).onERC721Received(msg.sender, from, id, data) !=... */\n      and\n      eq\n      iszero\n        /* \"src/ERC404.sol\":9446:9600  to.code.length != 0 &&... */\n    tag_242:\n        /* \"src/ERC404.sol\":9429:9660  if (... */\n      iszero\n      tag_248\n      jumpi\n        /* \"src/ERC404.sol\":9632:9649  UnsafeRecipient() */\n      mload(0x40)\n      shl(0xe0, 0x3da63931)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":9429:9660  if (... */\n    tag_248:\n        /* \"src/ERC404.sol\":9154:9666  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":919:1741  function tokenURI(uint256 id) public view override returns (string memory) {... */\n    tag_122:\n        /* \"src/Void.sol\":979:992  string memory */\n      0x60\n        /* \"src/Void.sol\":1037:1038  0 */\n      0x00\n        /* \"src/Void.sol\":1014:1026  baseTokenURI */\n      0x0e\n        /* \"src/Void.sol\":1008:1034  bytes(baseTokenURI).length */\n      dup1\n      sload\n      tag_250\n      swap1\n      tag_146\n      jump\t// in\n    tag_250:\n      swap1\n      pop\n        /* \"src/Void.sol\":1008:1038  bytes(baseTokenURI).length > 0 */\n      gt\n        /* \"src/Void.sol\":1004:1735  if (bytes(baseTokenURI).length > 0) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"src/Void.sol\":1075:1087  baseTokenURI */\n      0x0e\n        /* \"src/Void.sol\":1089:1109  Strings.toString(id) */\n      tag_252\n        /* \"src/Void.sol\":1106:1108  id */\n      dup4\n        /* \"src/Void.sol\":1089:1105  Strings.toString */\n      tag_253\n        /* \"src/Void.sol\":1089:1109  Strings.toString(id) */\n      jump\t// in\n    tag_252:\n        /* \"src/Void.sol\":1061:1110  string.concat(baseTokenURI, Strings.toString(id)) */\n      add(0x20, mload(0x40))\n      tag_254\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Void.sol\":1054:1110  return string.concat(baseTokenURI, Strings.toString(id)) */\n      swap1\n      pop\n        /* \"src/Void.sol\":919:1741  function tokenURI(uint256 id) public view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":1004:1735  if (bytes(baseTokenURI).length > 0) {... */\n    tag_251:\n        /* \"src/Void.sol\":1141:1158  string memory URI */\n      0x60\n        /* \"src/Void.sol\":1172:1182  uint8 seed */\n      0x00\n        /* \"src/Void.sol\":1225:1227  id */\n      dup4\n        /* \"src/Void.sol\":1208:1228  abi.encodePacked(id) */\n      add(0x20, mload(0x40))\n      tag_257\n      swap2\n        /* \"#utility.yul\":11605:11624   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11649:11651   */\n      0x20\n        /* \"#utility.yul\":11640:11652   */\n      add\n      swap1\n        /* \"#utility.yul\":11476:11658   */\n      jump\n        /* \"src/Void.sol\":1208:1228  abi.encodePacked(id) */\n    tag_257:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Void.sol\":1198:1229  keccak256(abi.encodePacked(id)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/Void.sol\":1185:1231  uint8(bytes1(keccak256(abi.encodePacked(id)))) */\n      0xf8\n      shr\n        /* \"src/Void.sol\":1172:1231  uint8 seed = uint8(bytes1(keccak256(abi.encodePacked(id)))) */\n      swap1\n      pop\n        /* \"src/Void.sol\":1257:1260  100 */\n      0x64\n        /* \"src/Void.sol\":1249:1253  seed */\n      dup2\n        /* \"src/Void.sol\":1249:1260  seed <= 100 */\n      0xff\n      and\n      gt\n        /* \"src/Void.sol\":1245:1705  if (seed <= 100) {... */\n      tag_259\n      jumpi\n        /* \"src/Void.sol\":1300:1307  dataURI */\n      0x0d\n        /* \"src/Void.sol\":1286:1317  string.concat(dataURI,\"1.json\") */\n      add(0x20, mload(0x40))\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Void.sol\":1280:1317  URI = string.concat(dataURI,\"1.json\") */\n      swap2\n      pop\n        /* \"src/Void.sol\":1245:1705  if (seed <= 100) {... */\n      jump(tag_275)\n    tag_259:\n        /* \"src/Void.sol\":1350:1353  160 */\n      0xa0\n        /* \"src/Void.sol\":1342:1346  seed */\n      dup2\n        /* \"src/Void.sol\":1342:1353  seed <= 160 */\n      0xff\n      and\n      gt\n        /* \"src/Void.sol\":1338:1705  if (seed <= 160) {... */\n      tag_263\n      jumpi\n        /* \"src/Void.sol\":1393:1400  dataURI */\n      0x0d\n        /* \"src/Void.sol\":1379:1410  string.concat(dataURI,\"2.json\") */\n      add(0x20, mload(0x40))\n      tag_260\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n        /* \"src/Void.sol\":1338:1705  if (seed <= 160) {... */\n    tag_263:\n        /* \"src/Void.sol\":1443:1446  210 */\n      0xd2\n        /* \"src/Void.sol\":1435:1439  seed */\n      dup2\n        /* \"src/Void.sol\":1435:1446  seed <= 210 */\n      0xff\n      and\n      gt\n        /* \"src/Void.sol\":1431:1705  if (seed <= 210) {... */\n      tag_267\n      jumpi\n        /* \"src/Void.sol\":1486:1493  dataURI */\n      0x0d\n        /* \"src/Void.sol\":1472:1503  string.concat(dataURI,\"3.json\") */\n      add(0x20, mload(0x40))\n      tag_260\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n        /* \"src/Void.sol\":1431:1705  if (seed <= 210) {... */\n    tag_267:\n        /* \"src/Void.sol\":1536:1539  240 */\n      0xf0\n        /* \"src/Void.sol\":1528:1532  seed */\n      dup2\n        /* \"src/Void.sol\":1528:1539  seed <= 240 */\n      0xff\n      and\n      gt\n        /* \"src/Void.sol\":1524:1705  if (seed <= 240) {... */\n      tag_271\n      jumpi\n        /* \"src/Void.sol\":1579:1586  dataURI */\n      0x0d\n        /* \"src/Void.sol\":1565:1596  string.concat(dataURI,\"4.json\") */\n      add(0x20, mload(0x40))\n      tag_260\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n        /* \"src/Void.sol\":1524:1705  if (seed <= 240) {... */\n    tag_271:\n        /* \"src/Void.sol\":1629:1632  255 */\n      0xff\n        /* \"src/Void.sol\":1621:1625  seed */\n      dup2\n        /* \"src/Void.sol\":1621:1632  seed <= 255 */\n      0xff\n      and\n      gt\n        /* \"src/Void.sol\":1617:1705  if (seed <= 255) {... */\n      tag_275\n      jumpi\n        /* \"src/Void.sol\":1672:1679  dataURI */\n      0x0d\n        /* \"src/Void.sol\":1658:1689  string.concat(dataURI,\"5.json\") */\n      add(0x20, mload(0x40))\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/Void.sol\":1652:1689  URI = string.concat(dataURI,\"5.json\") */\n      swap2\n      pop\n        /* \"src/Void.sol\":1617:1705  if (seed <= 255) {... */\n    tag_275:\n      pop\n        /* \"src/Void.sol\":1721:1724  URI */\n      swap3\n        /* \"src/Void.sol\":919:1741  function tokenURI(uint256 id) public view override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/Void.sol\":196:222  string public baseTokenURI */\n    tag_125:\n      0x0e\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n        /* \"src/Void.sol\":672:776  function setTokenURI(string memory _tokenURI) public onlyOwner {... */\n    tag_134:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_284\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_284:\n        /* \"src/Void.sol\":745:757  baseTokenURI */\n      0x0e\n        /* \"src/Void.sol\":745:769  baseTokenURI = _tokenURI */\n      tag_163\n        /* \"src/Void.sol\":760:769  _tokenURI */\n      dup3\n        /* \"src/Void.sol\":745:757  baseTokenURI */\n      dup3\n        /* \"src/Void.sol\":745:769  baseTokenURI = _tokenURI */\n      tag_164\n      jump\t// in\n        /* \"src/Void.sol\":169:190  string public dataURI */\n    tag_140:\n      0x0d\n      dup1\n      sload\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n        /* \"src/ERC404.sol\":545:758  function transferOwnership(address _owner) public virtual onlyOwner {... */\n    tag_144:\n        /* \"src/ERC404.sol\":313:318  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"src/ERC404.sol\":299:309  msg.sender */\n      caller\n        /* \"src/ERC404.sol\":299:318  msg.sender != owner */\n      eq\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n      tag_293\n      jumpi\n        /* \"src/ERC404.sol\":327:341  Unauthorized() */\n      mload(0x40)\n      shl(0xe8, 0x82b429)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":295:341  if (msg.sender != owner) revert Unauthorized() */\n    tag_293:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":627:647  _owner == address(0) */\n      dup2\n      and\n        /* \"src/ERC404.sol\":623:670  if (_owner == address(0)) revert InvalidOwner() */\n      tag_295\n      jumpi\n        /* \"src/ERC404.sol\":656:670  InvalidOwner() */\n      mload(0x40)\n      shl(0xe0, 0x49e27cff)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":623:670  if (_owner == address(0)) revert InvalidOwner() */\n    tag_295:\n        /* \"src/ERC404.sol\":681:686  owner */\n      0x00\n        /* \"src/ERC404.sol\":681:695  owner = _owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"src/ERC404.sol\":711:751  OwnershipTransferred(msg.sender, _owner) */\n      mload(0x40)\n        /* \"src/ERC404.sol\":681:695  owner = _owner */\n      swap1\n      swap2\n        /* \"src/ERC404.sol\":732:742  msg.sender */\n      caller\n      swap2\n        /* \"src/ERC404.sol\":711:751  OwnershipTransferred(msg.sender, _owner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"src/ERC404.sol\":681:686  owner */\n      swap1\n        /* \"src/ERC404.sol\":711:751  OwnershipTransferred(msg.sender, _owner) */\n      log3\n        /* \"src/ERC404.sol\":545:758  function transferOwnership(address _owner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":10825:10915  function _getUnit() internal view returns (uint256) {... */\n    tag_174:\n        /* \"src/ERC404.sol\":10868:10875  uint256 */\n      0x00\n        /* \"src/ERC404.sol\":10894:10908  10 ** decimals */\n      tag_297\n        /* \"src/ERC404.sol\":10900:10908  decimals */\n      immutable(\"0x9bca270d0850fcb8a3fcc18af189ab4779e3d042217bf9eb693aea2595978cd8\")\n        /* \"src/ERC404.sol\":10894:10896  10 */\n      0x0a\n        /* \"src/ERC404.sol\":10894:10908  10 ** decimals */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"src/ERC404.sol\":10887:10908  return 10 ** decimals */\n      swap1\n      pop\n        /* \"src/ERC404.sol\":10825:10915  function _getUnit() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/ERC404.sol\":9731:10789  function _transfer(... */\n    tag_199:\n        /* \"src/ERC404.sol\":9840:9844  bool */\n      0x00\n        /* \"src/ERC404.sol\":9856:9868  uint256 unit */\n      dup1\n        /* \"src/ERC404.sol\":9871:9881  _getUnit() */\n      tag_300\n        /* \"src/ERC404.sol\":9871:9879  _getUnit */\n      tag_174\n        /* \"src/ERC404.sol\":9871:9881  _getUnit() */\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      dup1\n      dup8\n      and\n        /* \"src/ERC404.sol\":9891:9918  uint256 balanceBeforeSender */\n      0x00\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":9921:9930  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      dup1\n      sload\n        /* \"src/ERC404.sol\":9978:9991  balanceOf[to] */\n      swap5\n      dup11\n      and\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n      sload\n        /* \"src/ERC404.sol\":10002:10017  balanceOf[from] */\n      swap3\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":9856:9881  uint256 unit = _getUnit() */\n      swap4\n      swap5\n      pop\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      swap2\n      swap3\n        /* \"src/ERC404.sol\":9978:9991  balanceOf[to] */\n      swap1\n      swap2\n        /* \"src/ERC404.sol\":10021:10027  amount */\n      dup7\n      swap2\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      swap1\n        /* \"src/ERC404.sol\":10002:10027  balanceOf[from] -= amount */\n      tag_301\n        /* \"src/ERC404.sol\":10021:10027  amount */\n      dup4\n        /* \"src/ERC404.sol\":9921:9936  balanceOf[from] */\n      dup7\n        /* \"src/ERC404.sol\":10002:10027  balanceOf[from] -= amount */\n      tag_176\n      jump\t// in\n    tag_301:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10062:10075  balanceOf[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":10062:10071  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":10062:10075  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":10062:10085  balanceOf[to] += amount */\n      dup1\n      sload\n      dup11\n      add\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":10166:10181  whitelist[from] */\n      swap3\n      dup11\n      and\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":10166:10175  whitelist */\n      0x0c\n        /* \"src/ERC404.sol\":10166:10181  whitelist[from] */\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ERC404.sol\":10161:10406  if (!whitelist[from]) {... */\n      tag_302\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10270:10285  balanceOf[from] */\n      dup8\n      and\n        /* \"src/ERC404.sol\":10197:10219  uint256 tokens_to_burn */\n      0x00\n        /* \"src/ERC404.sol\":10270:10285  balanceOf[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":10270:10279  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":10270:10285  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"src/ERC404.sol\":10270:10292  balanceOf[from] / unit */\n      tag_303\n      swap1\n        /* \"src/ERC404.sol\":10288:10292  unit */\n      dup6\n      swap1\n        /* \"src/ERC404.sol\":10270:10292  balanceOf[from] / unit */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"src/ERC404.sol\":10223:10249  balanceBeforeSender / unit */\n      tag_305\n        /* \"src/ERC404.sol\":10245:10249  unit */\n      dup6\n        /* \"src/ERC404.sol\":10223:10242  balanceBeforeSender */\n      dup6\n        /* \"src/ERC404.sol\":10223:10249  balanceBeforeSender / unit */\n      tag_304\n      jump\t// in\n    tag_305:\n        /* \"src/ERC404.sol\":10222:10293  (balanceBeforeSender / unit) -... */\n      tag_306\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_306:\n        /* \"src/ERC404.sol\":10197:10293  uint256 tokens_to_burn = (balanceBeforeSender / unit) -... */\n      swap1\n      pop\n        /* \"src/ERC404.sol\":10312:10321  uint256 i */\n      0x00\n        /* \"src/ERC404.sol\":10307:10396  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n    tag_307:\n        /* \"src/ERC404.sol\":10331:10345  tokens_to_burn */\n      dup2\n        /* \"src/ERC404.sol\":10327:10328  i */\n      dup2\n        /* \"src/ERC404.sol\":10327:10345  i < tokens_to_burn */\n      lt\n        /* \"src/ERC404.sol\":10307:10396  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"src/ERC404.sol\":10370:10381  _burn(from) */\n      tag_310\n        /* \"src/ERC404.sol\":10376:10380  from */\n      dup10\n        /* \"src/ERC404.sol\":10370:10375  _burn */\n      tag_311\n        /* \"src/ERC404.sol\":10370:10381  _burn(from) */\n      jump\t// in\n    tag_310:\n        /* \"src/ERC404.sol\":10347:10350  i++ */\n      0x01\n      add\n        /* \"src/ERC404.sol\":10307:10396  for (uint256 i = 0; i < tokens_to_burn; i++) {... */\n      jump(tag_307)\n    tag_308:\n      pop\n        /* \"src/ERC404.sol\":10183:10406  {... */\n      pop\n        /* \"src/ERC404.sol\":10161:10406  if (!whitelist[from]) {... */\n    tag_302:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10479:10492  whitelist[to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":10479:10488  whitelist */\n      0x0c\n        /* \"src/ERC404.sol\":10479:10492  whitelist[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"src/ERC404.sol\":10474:10715  if (!whitelist[to]) {... */\n      tag_312\n      jumpi\n        /* \"src/ERC404.sol\":10508:10530  uint256 tokens_to_mint */\n      0x00\n        /* \"src/ERC404.sol\":10575:10603  balanceBeforeReceiver / unit */\n      tag_313\n        /* \"src/ERC404.sol\":10599:10603  unit */\n      dup5\n        /* \"src/ERC404.sol\":10575:10596  balanceBeforeReceiver */\n      dup4\n        /* \"src/ERC404.sol\":10575:10603  balanceBeforeReceiver / unit */\n      tag_304\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10534:10547  balanceOf[to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":10534:10543  balanceOf */\n      0x05\n        /* \"src/ERC404.sol\":10534:10547  balanceOf[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"src/ERC404.sol\":10534:10554  balanceOf[to] / unit */\n      tag_314\n      swap1\n        /* \"src/ERC404.sol\":10550:10554  unit */\n      dup7\n      swap1\n        /* \"src/ERC404.sol\":10534:10554  balanceOf[to] / unit */\n      tag_304\n      jump\t// in\n    tag_314:\n        /* \"src/ERC404.sol\":10533:10604  (balanceOf[to] / unit) -... */\n      tag_315\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_315:\n        /* \"src/ERC404.sol\":10508:10604  uint256 tokens_to_mint = (balanceOf[to] / unit) -... */\n      swap1\n      pop\n        /* \"src/ERC404.sol\":10623:10632  uint256 i */\n      0x00\n        /* \"src/ERC404.sol\":10618:10705  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n    tag_316:\n        /* \"src/ERC404.sol\":10642:10656  tokens_to_mint */\n      dup2\n        /* \"src/ERC404.sol\":10638:10639  i */\n      dup2\n        /* \"src/ERC404.sol\":10638:10656  i < tokens_to_mint */\n      lt\n        /* \"src/ERC404.sol\":10618:10705  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"src/ERC404.sol\":10681:10690  _mint(to) */\n      tag_319\n        /* \"src/ERC404.sol\":10687:10689  to */\n      dup9\n        /* \"src/ERC404.sol\":10681:10686  _mint */\n      tag_320\n        /* \"src/ERC404.sol\":10681:10690  _mint(to) */\n      jump\t// in\n    tag_319:\n        /* \"src/ERC404.sol\":10658:10661  i++ */\n      0x01\n      add\n        /* \"src/ERC404.sol\":10618:10705  for (uint256 i = 0; i < tokens_to_mint; i++) {... */\n      jump(tag_316)\n    tag_317:\n      pop\n        /* \"src/ERC404.sol\":10494:10715  {... */\n      pop\n        /* \"src/ERC404.sol\":10474:10715  if (!whitelist[to]) {... */\n    tag_312:\n        /* \"src/ERC404.sol\":10750:10752  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10730:10761  ERC20Transfer(from, to, amount) */\n      and\n        /* \"src/ERC404.sol\":10744:10748  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10730:10761  ERC20Transfer(from, to, amount) */\n      and\n      0xe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487\n        /* \"src/ERC404.sol\":10754:10760  amount */\n      dup8\n        /* \"src/ERC404.sol\":10730:10761  ERC20Transfer(from, to, amount) */\n      mload(0x40)\n      tag_321\n      swap2\n        /* \"#utility.yul\":1838:1863   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1826:1828   */\n      0x20\n        /* \"#utility.yul\":1811:1829   */\n      add\n      swap1\n        /* \"#utility.yul\":1692:1869   */\n      jump\n        /* \"src/ERC404.sol\":10730:10761  ERC20Transfer(from, to, amount) */\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"src/ERC404.sol\":10778:10782  true */\n      0x01\n      swap7\n        /* \"src/ERC404.sol\":9731:10789  function _transfer(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":11785:11939  function _setNameSymbol(... */\n    tag_219:\n        /* \"src/ERC404.sol\":11894:11898  name */\n      0x01\n        /* \"src/ERC404.sol\":11894:11906  name = _name */\n      tag_323\n        /* \"src/ERC404.sol\":11901:11906  _name */\n      dup4\n        /* \"src/ERC404.sol\":11894:11898  name */\n      dup3\n        /* \"src/ERC404.sol\":11894:11906  name = _name */\n      tag_164\n      jump\t// in\n    tag_323:\n      pop\n        /* \"src/ERC404.sol\":11916:11922  symbol */\n      0x02\n        /* \"src/ERC404.sol\":11916:11932  symbol = _symbol */\n      tag_214\n        /* \"src/ERC404.sol\":11925:11932  _symbol */\n      dup3\n        /* \"src/ERC404.sol\":11916:11922  symbol */\n      dup3\n        /* \"src/ERC404.sol\":11916:11932  symbol = _symbol */\n      tag_164\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_329\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_331\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_331:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_332:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_332\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":11418:11779  function _burn(address from) internal virtual {... */\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":11478:11496  from == address(0) */\n      dup2\n      and\n        /* \"src/ERC404.sol\":11474:11545  if (from == address(0)) {... */\n      tag_339\n      jumpi\n        /* \"src/ERC404.sol\":11519:11534  InvalidSender() */\n      mload(0x40)\n      shl(0xe1, 0x6edaef2f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":11474:11545  if (from == address(0)) {... */\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":11568:11580  _owned[from] */\n      dup2\n      and\n        /* \"src/ERC404.sol\":11555:11565  uint256 id */\n      0x00\n        /* \"src/ERC404.sol\":11568:11580  _owned[from] */\n      swap1\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":11568:11574  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":11568:11580  _owned[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/ERC404.sol\":11581:11600  _owned[from].length */\n      dup1\n      sload\n        /* \"src/ERC404.sol\":11581:11604  _owned[from].length - 1 */\n      tag_340\n      swap1\n        /* \"src/ERC404.sol\":11603:11604  1 */\n      0x01\n      swap1\n        /* \"src/ERC404.sol\":11581:11604  _owned[from].length - 1 */\n      tag_176\n      jump\t// in\n    tag_340:\n        /* \"src/ERC404.sol\":11568:11605  _owned[from][_owned[from].length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_342\n      jumpi\n      tag_342\n      tag_181\n      jump\t// in\n    tag_342:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/ERC404.sol\":11555:11605  uint256 id = _owned[from][_owned[from].length - 1] */\n      swap1\n      pop\n        /* \"src/ERC404.sol\":11615:11621  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":11615:11627  _owned[from] */\n      0x00\n        /* \"src/ERC404.sol\":11622:11626  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":11615:11627  _owned[from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/ERC404.sol\":11615:11633  _owned[from].pop() */\n      dup1\n      sload\n      dup1\n      tag_345\n      jumpi\n      tag_345\n      tag_189\n      jump\t// in\n    tag_345:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      dup4\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup4\n      swap1\n      sstore\n      swap1\n      swap3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":11650:11665  _ownedIndex[id] */\n      dup3\n      dup3\n      mstore\n        /* \"src/ERC404.sol\":11650:11661  _ownedIndex */\n      0x0b\n        /* \"src/ERC404.sol\":11650:11665  _ownedIndex[id] */\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":11643:11665  delete _ownedIndex[id] */\n      dup4\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":11682:11690  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":11682:11694  _ownerOf[id] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":11675:11694  delete _ownerOf[id] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"src/ERC404.sol\":11711:11722  getApproved */\n      0x07\n        /* \"src/ERC404.sol\":11711:11726  getApproved[id] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":11704:11726  delete getApproved[id] */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap1\n      swap2\n      sstore\n        /* \"src/ERC404.sol\":11742:11772  Transfer(from, address(0), id) */\n      mload\n        /* \"src/ERC404.sol\":11662:11664  id */\n      dup3\n      swap2\n        /* \"src/ERC404.sol\":11615:11633  _owned[from].pop() */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":11742:11772  Transfer(from, address(0), id) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"src/ERC404.sol\":11615:11633  _owned[from].pop() */\n      dup4\n      swap1\n        /* \"src/ERC404.sol\":11742:11772  Transfer(from, address(0), id) */\n      log4\n        /* \"src/ERC404.sol\":11464:11779  {... */\n      pop\n        /* \"src/ERC404.sol\":11418:11779  function _burn(address from) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"src/ERC404.sol\":10921:11412  function _mint(address to) internal virtual {... */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":10979:10995  to == address(0) */\n      dup2\n      and\n        /* \"src/ERC404.sol\":10975:11047  if (to == address(0)) {... */\n      tag_348\n      jumpi\n        /* \"src/ERC404.sol\":11018:11036  InvalidRecipient() */\n      mload(0x40)\n      shl(0xe1, 0x4e469669)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":10975:11047  if (to == address(0)) {... */\n    tag_348:\n        /* \"src/ERC404.sol\":11081:11087  minted */\n      0x04\n        /* \"src/ERC404.sol\":11081:11089  minted++ */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":11081:11087  minted */\n      0x00\n        /* \"src/ERC404.sol\":11181:11193  _ownerOf[id] */\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":11181:11189  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":11181:11193  _ownerOf[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/ERC404.sol\":11181:11207  _ownerOf[id] != address(0) */\n      iszero\n        /* \"src/ERC404.sol\":11177:11256  if (_ownerOf[id] != address(0)) {... */\n      tag_349\n      jumpi\n        /* \"src/ERC404.sol\":11230:11245  AlreadyExists() */\n      mload(0x40)\n      shl(0xe1, 0x119b4fd3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/ERC404.sol\":11177:11256  if (_ownerOf[id] != address(0)) {... */\n    tag_349:\n        /* \"src/ERC404.sol\":11266:11278  _ownerOf[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":11266:11274  _ownerOf */\n      0x09\n        /* \"src/ERC404.sol\":11266:11278  _ownerOf[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":11266:11283  _ownerOf[id] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/ERC404.sol\":11293:11303  _owned[to] */\n      dup1\n      dup5\n      mstore\n        /* \"src/ERC404.sol\":11293:11299  _owned */\n      0x0a\n        /* \"src/ERC404.sol\":11293:11303  _owned[to] */\n      dup4\n      mstore\n      swap1\n      dup4\n      keccak256\n        /* \"src/ERC404.sol\":11293:11312  _owned[to].push(id) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      dup3\n      dup7\n      mstore\n      swap4\n      dup6\n      keccak256\n      add\n      dup6\n      swap1\n      sstore\n        /* \"src/ERC404.sol\":11340:11350  _owned[to] */\n      swap3\n      mstore\n        /* \"src/ERC404.sol\":11340:11357  _owned[to].length */\n      swap1\n      sload\n        /* \"src/ERC404.sol\":11340:11361  _owned[to].length - 1 */\n      tag_351\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_351:\n        /* \"src/ERC404.sol\":11322:11337  _ownedIndex[id] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"src/ERC404.sol\":11322:11333  _ownedIndex */\n      0x0b\n        /* \"src/ERC404.sol\":11322:11337  _ownedIndex[id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"src/ERC404.sol\":11322:11361  _ownedIndex[id] = _owned[to].length - 1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/ERC404.sol\":11377:11405  Transfer(address(0), to, id) */\n      swap1\n      mload\n        /* \"src/ERC404.sol\":11334:11336  id */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/ERC404.sol\":11377:11405  Transfer(address(0), to, id) */\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"src/ERC404.sol\":11322:11337  _ownedIndex[id] */\n      dup3\n      swap1\n        /* \"src/ERC404.sol\":11377:11405  Transfer(address(0), to, id) */\n      log4\n        /* \"src/ERC404.sol\":10965:11412  {... */\n      pop\n        /* \"src/ERC404.sol\":10921:11412  function _mint(address to) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_353\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:264   */\n    tag_372:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_384:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_384)\n    tag_386:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:665   */\n    tag_41:\n        /* \"#utility.yul\":418:420   */\n      0x20\n        /* \"#utility.yul\":407:416   */\n      dup2\n        /* \"#utility.yul\":400:421   */\n      mstore\n        /* \"#utility.yul\":381:385   */\n      0x00\n        /* \"#utility.yul\":450:456   */\n      dup3\n        /* \"#utility.yul\":444:457   */\n      mload\n        /* \"#utility.yul\":493:499   */\n      dup1\n        /* \"#utility.yul\":488:490   */\n      0x20\n        /* \"#utility.yul\":477:486   */\n      dup5\n        /* \"#utility.yul\":473:491   */\n      add\n        /* \"#utility.yul\":466:500   */\n      mstore\n        /* \"#utility.yul\":509:588   */\n      tag_388\n        /* \"#utility.yul\":581:587   */\n      dup2\n        /* \"#utility.yul\":576:578   */\n      0x40\n        /* \"#utility.yul\":565:574   */\n      dup6\n        /* \"#utility.yul\":561:579   */\n      add\n        /* \"#utility.yul\":556:558   */\n      0x20\n        /* \"#utility.yul\":548:554   */\n      dup8\n        /* \"#utility.yul\":544:559   */\n      add\n        /* \"#utility.yul\":509:588   */\n      tag_372\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":649:651   */\n      0x1f\n        /* \"#utility.yul\":628:643   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":624:653   */\n      and\n        /* \"#utility.yul\":609:654   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":656:658   */\n      0x40\n        /* \"#utility.yul\":605:659   */\n      add\n      swap3\n        /* \"#utility.yul\":269:665   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:850   */\n    tag_44:\n        /* \"#utility.yul\":729:735   */\n      0x00\n        /* \"#utility.yul\":782:784   */\n      0x20\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":761:768   */\n      dup5\n        /* \"#utility.yul\":757:780   */\n      sub\n        /* \"#utility.yul\":753:785   */\n      slt\n        /* \"#utility.yul\":750:802   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":798:799   */\n      0x00\n        /* \"#utility.yul\":795:796   */\n      dup1\n        /* \"#utility.yul\":788:800   */\n      revert\n        /* \"#utility.yul\":750:802   */\n    tag_390:\n      pop\n        /* \"#utility.yul\":821:844   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":670:850   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1063:1236   */\n    tag_373:\n        /* \"#utility.yul\":1131:1151   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1180:1211   */\n      dup2\n      and\n        /* \"#utility.yul\":1170:1212   */\n      dup2\n      eq\n        /* \"#utility.yul\":1160:1230   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":1226:1227   */\n      0x00\n        /* \"#utility.yul\":1223:1224   */\n      dup1\n        /* \"#utility.yul\":1216:1228   */\n      revert\n        /* \"#utility.yul\":1241:1495   */\n    tag_50:\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1317:1323   */\n      dup1\n        /* \"#utility.yul\":1370:1372   */\n      0x40\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1349:1356   */\n      dup6\n        /* \"#utility.yul\":1345:1368   */\n      sub\n        /* \"#utility.yul\":1341:1373   */\n      slt\n        /* \"#utility.yul\":1338:1390   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1383:1384   */\n      dup1\n        /* \"#utility.yul\":1376:1388   */\n      revert\n        /* \"#utility.yul\":1338:1390   */\n    tag_395:\n        /* \"#utility.yul\":1409:1438   */\n      tag_396\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1409:1438   */\n      tag_373\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1399:1438   */\n      swap5\n        /* \"#utility.yul\":1485:1487   */\n      0x20\n        /* \"#utility.yul\":1470:1488   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1457:1489   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1241:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1874:2001   */\n    tag_330:\n        /* \"#utility.yul\":1935:1945   */\n      0x4e487b71\n        /* \"#utility.yul\":1930:1933   */\n      0xe0\n        /* \"#utility.yul\":1926:1946   */\n      shl\n        /* \"#utility.yul\":1923:1924   */\n      0x00\n        /* \"#utility.yul\":1916:1947   */\n      mstore\n        /* \"#utility.yul\":1966:1970   */\n      0x41\n        /* \"#utility.yul\":1963:1964   */\n      0x04\n        /* \"#utility.yul\":1956:1971   */\n      mstore\n        /* \"#utility.yul\":1990:1994   */\n      0x24\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1995   */\n      revert\n        /* \"#utility.yul\":2006:2725   */\n    tag_374:\n        /* \"#utility.yul\":2049:2054   */\n      0x00\n        /* \"#utility.yul\":2102:2105   */\n      dup3\n        /* \"#utility.yul\":2095:2099   */\n      0x1f\n        /* \"#utility.yul\":2087:2093   */\n      dup4\n        /* \"#utility.yul\":2083:2100   */\n      add\n        /* \"#utility.yul\":2079:2106   */\n      slt\n        /* \"#utility.yul\":2069:2124   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":2120:2121   */\n      0x00\n        /* \"#utility.yul\":2117:2118   */\n      dup1\n        /* \"#utility.yul\":2110:2122   */\n      revert\n        /* \"#utility.yul\":2069:2124   */\n    tag_401:\n        /* \"#utility.yul\":2156:2162   */\n      dup2\n        /* \"#utility.yul\":2143:2163   */\n      calldataload\n        /* \"#utility.yul\":2182:2200   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2219:2221   */\n      dup1\n        /* \"#utility.yul\":2215:2217   */\n      dup3\n        /* \"#utility.yul\":2212:2222   */\n      gt\n        /* \"#utility.yul\":2209:2245   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":2225:2243   */\n      tag_403\n      tag_330\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2300:2302   */\n      0x40\n        /* \"#utility.yul\":2294:2303   */\n      mload\n        /* \"#utility.yul\":2268:2270   */\n      0x1f\n        /* \"#utility.yul\":2354:2367   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2350:2372   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2374:2376   */\n      0x3f\n        /* \"#utility.yul\":2346:2377   */\n      add\n        /* \"#utility.yul\":2342:2382   */\n      and\n        /* \"#utility.yul\":2330:2383   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2398:2416   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2418:2440   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2395:2441   */\n      or\n        /* \"#utility.yul\":2392:2464   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2444:2462   */\n      tag_405\n      tag_330\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2484:2494   */\n      dup2\n        /* \"#utility.yul\":2480:2482   */\n      0x40\n        /* \"#utility.yul\":2473:2495   */\n      mstore\n        /* \"#utility.yul\":2519:2521   */\n      dup4\n        /* \"#utility.yul\":2511:2517   */\n      dup2\n        /* \"#utility.yul\":2504:2522   */\n      mstore\n        /* \"#utility.yul\":2565:2568   */\n      dup7\n        /* \"#utility.yul\":2558:2562   */\n      0x20\n        /* \"#utility.yul\":2553:2555   */\n      dup6\n        /* \"#utility.yul\":2545:2551   */\n      dup9\n        /* \"#utility.yul\":2541:2556   */\n      add\n        /* \"#utility.yul\":2537:2563   */\n      add\n        /* \"#utility.yul\":2534:2569   */\n      gt\n        /* \"#utility.yul\":2531:2586   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":2582:2583   */\n      0x00\n        /* \"#utility.yul\":2579:2580   */\n      dup1\n        /* \"#utility.yul\":2572:2584   */\n      revert\n        /* \"#utility.yul\":2531:2586   */\n    tag_406:\n        /* \"#utility.yul\":2646:2648   */\n      dup4\n        /* \"#utility.yul\":2639:2643   */\n      0x20\n        /* \"#utility.yul\":2631:2637   */\n      dup8\n        /* \"#utility.yul\":2627:2644   */\n      add\n        /* \"#utility.yul\":2620:2624   */\n      0x20\n        /* \"#utility.yul\":2612:2618   */\n      dup4\n        /* \"#utility.yul\":2608:2625   */\n      add\n        /* \"#utility.yul\":2595:2649   */\n      calldatacopy\n        /* \"#utility.yul\":2693:2694   */\n      0x00\n        /* \"#utility.yul\":2686:2690   */\n      0x20\n        /* \"#utility.yul\":2681:2683   */\n      dup6\n        /* \"#utility.yul\":2673:2679   */\n      dup4\n        /* \"#utility.yul\":2669:2684   */\n      add\n        /* \"#utility.yul\":2665:2691   */\n      add\n        /* \"#utility.yul\":2658:2695   */\n      mstore\n        /* \"#utility.yul\":2713:2719   */\n      dup1\n        /* \"#utility.yul\":2704:2719   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2006:2725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:3052   */\n    tag_60:\n        /* \"#utility.yul\":2799:2805   */\n      0x00\n        /* \"#utility.yul\":2852:2854   */\n      0x20\n        /* \"#utility.yul\":2840:2849   */\n      dup3\n        /* \"#utility.yul\":2831:2838   */\n      dup5\n        /* \"#utility.yul\":2827:2850   */\n      sub\n        /* \"#utility.yul\":2823:2855   */\n      slt\n        /* \"#utility.yul\":2820:2872   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":2868:2869   */\n      0x00\n        /* \"#utility.yul\":2865:2866   */\n      dup1\n        /* \"#utility.yul\":2858:2870   */\n      revert\n        /* \"#utility.yul\":2820:2872   */\n    tag_408:\n        /* \"#utility.yul\":2908:2917   */\n      dup2\n        /* \"#utility.yul\":2895:2918   */\n      calldataload\n        /* \"#utility.yul\":2941:2959   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2933:2939   */\n      dup2\n        /* \"#utility.yul\":2930:2960   */\n      gt\n        /* \"#utility.yul\":2927:2977   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":2973:2974   */\n      0x00\n        /* \"#utility.yul\":2970:2971   */\n      dup1\n        /* \"#utility.yul\":2963:2975   */\n      revert\n        /* \"#utility.yul\":2927:2977   */\n    tag_409:\n        /* \"#utility.yul\":2996:3046   */\n      tag_410\n        /* \"#utility.yul\":3038:3045   */\n      dup5\n        /* \"#utility.yul\":3029:3035   */\n      dup3\n        /* \"#utility.yul\":3018:3027   */\n      dup6\n        /* \"#utility.yul\":3014:3036   */\n      add\n        /* \"#utility.yul\":2996:3046   */\n      tag_374\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2986:3046   */\n      swap5\n        /* \"#utility.yul\":2730:3052   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3057:3385   */\n    tag_64:\n        /* \"#utility.yul\":3134:3140   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup1\n        /* \"#utility.yul\":3150:3156   */\n      0x00\n        /* \"#utility.yul\":3203:3205   */\n      0x60\n        /* \"#utility.yul\":3191:3200   */\n      dup5\n        /* \"#utility.yul\":3182:3189   */\n      dup7\n        /* \"#utility.yul\":3178:3201   */\n      sub\n        /* \"#utility.yul\":3174:3206   */\n      slt\n        /* \"#utility.yul\":3171:3223   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3216:3217   */\n      dup1\n        /* \"#utility.yul\":3209:3221   */\n      revert\n        /* \"#utility.yul\":3171:3223   */\n    tag_412:\n        /* \"#utility.yul\":3242:3271   */\n      tag_413\n        /* \"#utility.yul\":3261:3270   */\n      dup5\n        /* \"#utility.yul\":3242:3271   */\n      tag_373\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3232:3271   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3328   */\n      tag_414\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3313:3322   */\n      dup6\n        /* \"#utility.yul\":3309:3327   */\n      add\n        /* \"#utility.yul\":3290:3328   */\n      tag_373\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":3280:3328   */\n      swap2\n      pop\n        /* \"#utility.yul\":3375:3377   */\n      0x40\n        /* \"#utility.yul\":3364:3373   */\n      dup5\n        /* \"#utility.yul\":3360:3378   */\n      add\n        /* \"#utility.yul\":3347:3379   */\n      calldataload\n        /* \"#utility.yul\":3337:3379   */\n      swap1\n      pop\n        /* \"#utility.yul\":3057:3385   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3579:4122   */\n    tag_81:\n        /* \"#utility.yul\":3667:3673   */\n      0x00\n        /* \"#utility.yul\":3675:3681   */\n      dup1\n        /* \"#utility.yul\":3728:3730   */\n      0x40\n        /* \"#utility.yul\":3716:3725   */\n      dup4\n        /* \"#utility.yul\":3707:3714   */\n      dup6\n        /* \"#utility.yul\":3703:3726   */\n      sub\n        /* \"#utility.yul\":3699:3731   */\n      slt\n        /* \"#utility.yul\":3696:3748   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3744:3745   */\n      0x00\n        /* \"#utility.yul\":3741:3742   */\n      dup1\n        /* \"#utility.yul\":3734:3746   */\n      revert\n        /* \"#utility.yul\":3696:3748   */\n    tag_417:\n        /* \"#utility.yul\":3784:3793   */\n      dup3\n        /* \"#utility.yul\":3771:3794   */\n      calldataload\n        /* \"#utility.yul\":3813:3831   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3854:3856   */\n      dup1\n        /* \"#utility.yul\":3846:3852   */\n      dup3\n        /* \"#utility.yul\":3843:3857   */\n      gt\n        /* \"#utility.yul\":3840:3874   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":3870:3871   */\n      0x00\n        /* \"#utility.yul\":3867:3868   */\n      dup1\n        /* \"#utility.yul\":3860:3872   */\n      revert\n        /* \"#utility.yul\":3840:3874   */\n    tag_418:\n        /* \"#utility.yul\":3893:3943   */\n      tag_419\n        /* \"#utility.yul\":3935:3942   */\n      dup7\n        /* \"#utility.yul\":3926:3932   */\n      dup4\n        /* \"#utility.yul\":3915:3924   */\n      dup8\n        /* \"#utility.yul\":3911:3933   */\n      add\n        /* \"#utility.yul\":3893:3943   */\n      tag_374\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3883:3943   */\n      swap4\n      pop\n        /* \"#utility.yul\":3996:3998   */\n      0x20\n        /* \"#utility.yul\":3985:3994   */\n      dup6\n        /* \"#utility.yul\":3981:3999   */\n      add\n        /* \"#utility.yul\":3968:4000   */\n      calldataload\n        /* \"#utility.yul\":3952:4000   */\n      swap2\n      pop\n        /* \"#utility.yul\":4025:4027   */\n      dup1\n        /* \"#utility.yul\":4015:4023   */\n      dup3\n        /* \"#utility.yul\":4012:4028   */\n      gt\n        /* \"#utility.yul\":4009:4045   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4041:4042   */\n      0x00\n        /* \"#utility.yul\":4038:4039   */\n      dup1\n        /* \"#utility.yul\":4031:4043   */\n      revert\n        /* \"#utility.yul\":4009:4045   */\n    tag_420:\n      pop\n        /* \"#utility.yul\":4064:4116   */\n      tag_421\n        /* \"#utility.yul\":4108:4115   */\n      dup6\n        /* \"#utility.yul\":4097:4105   */\n      dup3\n        /* \"#utility.yul\":4086:4095   */\n      dup7\n        /* \"#utility.yul\":4082:4106   */\n      add\n        /* \"#utility.yul\":4064:4116   */\n      tag_374\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4054:4116   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3579:4122   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4127:4474   */\n    tag_85:\n        /* \"#utility.yul\":4192:4198   */\n      0x00\n        /* \"#utility.yul\":4200:4206   */\n      dup1\n        /* \"#utility.yul\":4253:4255   */\n      0x40\n        /* \"#utility.yul\":4241:4250   */\n      dup4\n        /* \"#utility.yul\":4232:4239   */\n      dup6\n        /* \"#utility.yul\":4228:4251   */\n      sub\n        /* \"#utility.yul\":4224:4256   */\n      slt\n        /* \"#utility.yul\":4221:4273   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":4269:4270   */\n      0x00\n        /* \"#utility.yul\":4266:4267   */\n      dup1\n        /* \"#utility.yul\":4259:4271   */\n      revert\n        /* \"#utility.yul\":4221:4273   */\n    tag_423:\n        /* \"#utility.yul\":4292:4321   */\n      tag_424\n        /* \"#utility.yul\":4311:4320   */\n      dup4\n        /* \"#utility.yul\":4292:4321   */\n      tag_373\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4282:4321   */\n      swap2\n      pop\n        /* \"#utility.yul\":4371:4373   */\n      0x20\n        /* \"#utility.yul\":4360:4369   */\n      dup4\n        /* \"#utility.yul\":4356:4374   */\n      add\n        /* \"#utility.yul\":4343:4375   */\n      calldataload\n        /* \"#utility.yul\":4418:4423   */\n      dup1\n        /* \"#utility.yul\":4411:4424   */\n      iszero\n        /* \"#utility.yul\":4404:4425   */\n      iszero\n        /* \"#utility.yul\":4397:4402   */\n      dup2\n        /* \"#utility.yul\":4394:4426   */\n      eq\n        /* \"#utility.yul\":4384:4444   */\n      tag_425\n      jumpi\n        /* \"#utility.yul\":4440:4441   */\n      0x00\n        /* \"#utility.yul\":4437:4438   */\n      dup1\n        /* \"#utility.yul\":4430:4442   */\n      revert\n        /* \"#utility.yul\":4384:4444   */\n    tag_425:\n        /* \"#utility.yul\":4463:4468   */\n      dup1\n        /* \"#utility.yul\":4453:4468   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4127:4474   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4479:4665   */\n    tag_96:\n        /* \"#utility.yul\":4538:4544   */\n      0x00\n        /* \"#utility.yul\":4591:4593   */\n      0x20\n        /* \"#utility.yul\":4579:4588   */\n      dup3\n        /* \"#utility.yul\":4570:4577   */\n      dup5\n        /* \"#utility.yul\":4566:4589   */\n      sub\n        /* \"#utility.yul\":4562:4594   */\n      slt\n        /* \"#utility.yul\":4559:4611   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":4607:4608   */\n      0x00\n        /* \"#utility.yul\":4604:4605   */\n      dup1\n        /* \"#utility.yul\":4597:4609   */\n      revert\n        /* \"#utility.yul\":4559:4611   */\n    tag_427:\n        /* \"#utility.yul\":4630:4659   */\n      tag_165\n        /* \"#utility.yul\":4649:4658   */\n      dup3\n        /* \"#utility.yul\":4630:4659   */\n      tag_373\n      jump\t// in\n        /* \"#utility.yul\":4670:5478   */\n    tag_118:\n        /* \"#utility.yul\":4767:4773   */\n      0x00\n        /* \"#utility.yul\":4775:4781   */\n      dup1\n        /* \"#utility.yul\":4783:4789   */\n      0x00\n        /* \"#utility.yul\":4791:4797   */\n      dup1\n        /* \"#utility.yul\":4799:4805   */\n      0x00\n        /* \"#utility.yul\":4852:4855   */\n      0x80\n        /* \"#utility.yul\":4840:4849   */\n      dup7\n        /* \"#utility.yul\":4831:4838   */\n      dup9\n        /* \"#utility.yul\":4827:4850   */\n      sub\n        /* \"#utility.yul\":4823:4856   */\n      slt\n        /* \"#utility.yul\":4820:4873   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":4869:4870   */\n      0x00\n        /* \"#utility.yul\":4866:4867   */\n      dup1\n        /* \"#utility.yul\":4859:4871   */\n      revert\n        /* \"#utility.yul\":4820:4873   */\n    tag_430:\n        /* \"#utility.yul\":4892:4921   */\n      tag_431\n        /* \"#utility.yul\":4911:4920   */\n      dup7\n        /* \"#utility.yul\":4892:4921   */\n      tag_373\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4882:4921   */\n      swap5\n      pop\n        /* \"#utility.yul\":4940:4978   */\n      tag_432\n        /* \"#utility.yul\":4974:4976   */\n      0x20\n        /* \"#utility.yul\":4963:4972   */\n      dup8\n        /* \"#utility.yul\":4959:4977   */\n      add\n        /* \"#utility.yul\":4940:4978   */\n      tag_373\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4930:4978   */\n      swap4\n      pop\n        /* \"#utility.yul\":5025:5027   */\n      0x40\n        /* \"#utility.yul\":5014:5023   */\n      dup7\n        /* \"#utility.yul\":5010:5028   */\n      add\n        /* \"#utility.yul\":4997:5029   */\n      calldataload\n        /* \"#utility.yul\":4987:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":5080:5082   */\n      0x60\n        /* \"#utility.yul\":5069:5078   */\n      dup7\n        /* \"#utility.yul\":5065:5083   */\n      add\n        /* \"#utility.yul\":5052:5084   */\n      calldataload\n        /* \"#utility.yul\":5103:5121   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5144:5146   */\n      dup1\n        /* \"#utility.yul\":5136:5142   */\n      dup3\n        /* \"#utility.yul\":5133:5147   */\n      gt\n        /* \"#utility.yul\":5130:5164   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":5160:5161   */\n      0x00\n        /* \"#utility.yul\":5157:5158   */\n      dup1\n        /* \"#utility.yul\":5150:5162   */\n      revert\n        /* \"#utility.yul\":5130:5164   */\n    tag_433:\n        /* \"#utility.yul\":5198:5204   */\n      dup2\n        /* \"#utility.yul\":5187:5196   */\n      dup9\n        /* \"#utility.yul\":5183:5205   */\n      add\n        /* \"#utility.yul\":5173:5205   */\n      swap2\n      pop\n        /* \"#utility.yul\":5243:5250   */\n      dup9\n        /* \"#utility.yul\":5236:5240   */\n      0x1f\n        /* \"#utility.yul\":5232:5234   */\n      dup4\n        /* \"#utility.yul\":5228:5241   */\n      add\n        /* \"#utility.yul\":5224:5251   */\n      slt\n        /* \"#utility.yul\":5214:5269   */\n      tag_434\n      jumpi\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5262:5263   */\n      dup1\n        /* \"#utility.yul\":5255:5267   */\n      revert\n        /* \"#utility.yul\":5214:5269   */\n    tag_434:\n        /* \"#utility.yul\":5305:5307   */\n      dup2\n        /* \"#utility.yul\":5292:5308   */\n      calldataload\n        /* \"#utility.yul\":5331:5333   */\n      dup2\n        /* \"#utility.yul\":5323:5329   */\n      dup2\n        /* \"#utility.yul\":5320:5334   */\n      gt\n        /* \"#utility.yul\":5317:5351   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5344:5345   */\n      dup1\n        /* \"#utility.yul\":5337:5349   */\n      revert\n        /* \"#utility.yul\":5317:5351   */\n    tag_435:\n        /* \"#utility.yul\":5392:5399   */\n      dup10\n        /* \"#utility.yul\":5387:5389   */\n      0x20\n        /* \"#utility.yul\":5378:5384   */\n      dup3\n        /* \"#utility.yul\":5374:5376   */\n      dup6\n        /* \"#utility.yul\":5370:5385   */\n      add\n        /* \"#utility.yul\":5366:5390   */\n      add\n        /* \"#utility.yul\":5363:5400   */\n      gt\n        /* \"#utility.yul\":5360:5417   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":5413:5414   */\n      0x00\n        /* \"#utility.yul\":5410:5411   */\n      dup1\n        /* \"#utility.yul\":5403:5415   */\n      revert\n        /* \"#utility.yul\":5360:5417   */\n    tag_436:\n        /* \"#utility.yul\":4670:5478   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"#utility.yul\":5436:5447   */\n      add\n      swap5\n        /* \"#utility.yul\":5466:5472   */\n      swap4\n        /* \"#utility.yul\":4670:5478   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:5743   */\n    tag_129:\n        /* \"#utility.yul\":5551:5557   */\n      0x00\n        /* \"#utility.yul\":5559:5565   */\n      dup1\n        /* \"#utility.yul\":5612:5614   */\n      0x40\n        /* \"#utility.yul\":5600:5609   */\n      dup4\n        /* \"#utility.yul\":5591:5598   */\n      dup6\n        /* \"#utility.yul\":5587:5610   */\n      sub\n        /* \"#utility.yul\":5583:5615   */\n      slt\n        /* \"#utility.yul\":5580:5632   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5628:5629   */\n      0x00\n        /* \"#utility.yul\":5625:5626   */\n      dup1\n        /* \"#utility.yul\":5618:5630   */\n      revert\n        /* \"#utility.yul\":5580:5632   */\n    tag_438:\n        /* \"#utility.yul\":5651:5680   */\n      tag_439\n        /* \"#utility.yul\":5670:5679   */\n      dup4\n        /* \"#utility.yul\":5651:5680   */\n      tag_373\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5641:5680   */\n      swap2\n      pop\n        /* \"#utility.yul\":5699:5737   */\n      tag_440\n        /* \"#utility.yul\":5733:5735   */\n      0x20\n        /* \"#utility.yul\":5722:5731   */\n      dup5\n        /* \"#utility.yul\":5718:5736   */\n      add\n        /* \"#utility.yul\":5699:5737   */\n      tag_373\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5689:5737   */\n      swap1\n      pop\n        /* \"#utility.yul\":5483:5743   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5748:6128   */\n    tag_146:\n        /* \"#utility.yul\":5827:5828   */\n      0x01\n        /* \"#utility.yul\":5823:5835   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5870:5882   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5891:5952   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5945:5949   */\n      0x7f\n        /* \"#utility.yul\":5937:5943   */\n      dup3\n        /* \"#utility.yul\":5933:5950   */\n      and\n        /* \"#utility.yul\":5923:5950   */\n      swap2\n      pop\n        /* \"#utility.yul\":5891:5952   */\n    tag_442:\n        /* \"#utility.yul\":5998:6000   */\n      0x20\n        /* \"#utility.yul\":5990:5996   */\n      dup3\n        /* \"#utility.yul\":5987:6001   */\n      lt\n        /* \"#utility.yul\":5967:5985   */\n      dup2\n        /* \"#utility.yul\":5964:6002   */\n      sub\n        /* \"#utility.yul\":5961:6122   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":6044:6054   */\n      0x4e487b71\n        /* \"#utility.yul\":6039:6042   */\n      0xe0\n        /* \"#utility.yul\":6035:6055   */\n      shl\n        /* \"#utility.yul\":6032:6033   */\n      0x00\n        /* \"#utility.yul\":6025:6056   */\n      mstore\n        /* \"#utility.yul\":6079:6083   */\n      0x22\n        /* \"#utility.yul\":6076:6077   */\n      0x04\n        /* \"#utility.yul\":6069:6084   */\n      mstore\n        /* \"#utility.yul\":6107:6111   */\n      0x24\n        /* \"#utility.yul\":6104:6105   */\n      0x00\n        /* \"#utility.yul\":6097:6112   */\n      revert\n        /* \"#utility.yul\":5961:6122   */\n    tag_443:\n      pop\n        /* \"#utility.yul\":5748:6128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6777   */\n    tag_376:\n        /* \"#utility.yul\":6361:6363   */\n      0x1f\n        /* \"#utility.yul\":6356:6359   */\n      dup3\n        /* \"#utility.yul\":6353:6364   */\n      gt\n        /* \"#utility.yul\":6350:6771   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":6397:6402   */\n      dup1\n        /* \"#utility.yul\":6394:6395   */\n      0x00\n        /* \"#utility.yul\":6387:6403   */\n      mstore\n        /* \"#utility.yul\":6441:6445   */\n      0x20\n        /* \"#utility.yul\":6438:6439   */\n      0x00\n        /* \"#utility.yul\":6428:6446   */\n      keccak256\n        /* \"#utility.yul\":6511:6513   */\n      0x1f\n        /* \"#utility.yul\":6499:6509   */\n      dup5\n        /* \"#utility.yul\":6495:6514   */\n      add\n        /* \"#utility.yul\":6492:6493   */\n      0x05\n        /* \"#utility.yul\":6488:6515   */\n      shr\n        /* \"#utility.yul\":6482:6486   */\n      dup2\n        /* \"#utility.yul\":6478:6516   */\n      add\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6535:6545   */\n      dup6\n        /* \"#utility.yul\":6532:6552   */\n      lt\n        /* \"#utility.yul\":6529:6576   */\n      iszero\n      tag_447\n      jumpi\n      pop\n        /* \"#utility.yul\":6570:6574   */\n      dup1\n        /* \"#utility.yul\":6529:6576   */\n    tag_447:\n        /* \"#utility.yul\":6625:6627   */\n      0x1f\n        /* \"#utility.yul\":6620:6623   */\n      dup5\n        /* \"#utility.yul\":6616:6628   */\n      add\n        /* \"#utility.yul\":6613:6614   */\n      0x05\n        /* \"#utility.yul\":6609:6629   */\n      shr\n        /* \"#utility.yul\":6603:6607   */\n      dup3\n        /* \"#utility.yul\":6599:6630   */\n      add\n        /* \"#utility.yul\":6589:6630   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_448:\n        /* \"#utility.yul\":6698:6700   */\n      dup2\n        /* \"#utility.yul\":6691:6696   */\n      dup2\n        /* \"#utility.yul\":6688:6701   */\n      lt\n        /* \"#utility.yul\":6680:6761   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":6757:6758   */\n      0x00\n        /* \"#utility.yul\":6743:6759   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6724:6725   */\n      0x01\n        /* \"#utility.yul\":6713:6726   */\n      add\n        /* \"#utility.yul\":6680:6761   */\n      jump(tag_448)\n        /* \"#utility.yul\":6953:8298   */\n    tag_164:\n        /* \"#utility.yul\":7079:7082   */\n      dup2\n        /* \"#utility.yul\":7073:7083   */\n      mload\n        /* \"#utility.yul\":7106:7124   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7098:7104   */\n      dup2\n        /* \"#utility.yul\":7095:7125   */\n      gt\n        /* \"#utility.yul\":7092:7148   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":7128:7146   */\n      tag_454\n      tag_330\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7157:7254   */\n      tag_455\n        /* \"#utility.yul\":7247:7253   */\n      dup2\n        /* \"#utility.yul\":7207:7245   */\n      tag_456\n        /* \"#utility.yul\":7239:7243   */\n      dup5\n        /* \"#utility.yul\":7233:7244   */\n      sload\n        /* \"#utility.yul\":7207:7245   */\n      tag_146\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":7201:7205   */\n      dup5\n        /* \"#utility.yul\":7157:7254   */\n      tag_376\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":7309:7313   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7366:7368   */\n      0x1f\n        /* \"#utility.yul\":7355:7369   */\n      dup4\n      gt\n        /* \"#utility.yul\":7383:7384   */\n      0x01\n        /* \"#utility.yul\":7378:8041   */\n      dup2\n      eq\n      tag_458\n      jumpi\n        /* \"#utility.yul\":8085:8086   */\n      0x00\n        /* \"#utility.yul\":8102:8108   */\n      dup5\n        /* \"#utility.yul\":8099:8188   */\n      iszero\n      tag_459\n      jumpi\n      pop\n        /* \"#utility.yul\":8154:8173   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8148:8174   */\n      mload\n        /* \"#utility.yul\":8099:8188   */\n    tag_459:\n      not(0x00)\n        /* \"#utility.yul\":6910:6911   */\n      0x03\n        /* \"#utility.yul\":6906:6917   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6902:6926   */\n      shr\n        /* \"#utility.yul\":6898:6927   */\n      not\n        /* \"#utility.yul\":6888:6928   */\n      and\n        /* \"#utility.yul\":6934:6935   */\n      0x01\n        /* \"#utility.yul\":6930:6941   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6885:6942   */\n      or\n        /* \"#utility.yul\":8201:8282   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7348:8292   */\n      jump(tag_457)\n        /* \"#utility.yul\":7378:8041   */\n    tag_458:\n        /* \"#utility.yul\":6206:6207   */\n      0x00\n        /* \"#utility.yul\":6199:6213   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6243:6247   */\n      0x20\n        /* \"#utility.yul\":6230:6248   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7414:7434   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":7532:7768   */\n    tag_462:\n        /* \"#utility.yul\":7546:7553   */\n      dup3\n        /* \"#utility.yul\":7543:7544   */\n      dup2\n        /* \"#utility.yul\":7540:7554   */\n      lt\n        /* \"#utility.yul\":7532:7768   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":7635:7654   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":7629:7655   */\n      mload\n        /* \"#utility.yul\":7614:7656   */\n      dup3\n      sstore\n        /* \"#utility.yul\":7727:7754   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":7695:7696   */\n      0x01\n        /* \"#utility.yul\":7683:7697   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7562:7581   */\n      dup5\n      add\n        /* \"#utility.yul\":7532:7768   */\n      jump(tag_462)\n    tag_464:\n        /* \"#utility.yul\":7536:7539   */\n      pop\n        /* \"#utility.yul\":7796:7802   */\n      dup6\n        /* \"#utility.yul\":7787:7794   */\n      dup3\n        /* \"#utility.yul\":7784:7803   */\n      lt\n        /* \"#utility.yul\":7781:7982   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":7857:7876   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":7851:7877   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7940:7941   */\n      0x03\n        /* \"#utility.yul\":7936:7950   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7952:7955   */\n      0xf8\n        /* \"#utility.yul\":7932:7956   */\n      and\n        /* \"#utility.yul\":7928:7965   */\n      shr\n        /* \"#utility.yul\":7924:7966   */\n      not\n        /* \"#utility.yul\":7909:7967   */\n      and\n        /* \"#utility.yul\":7894:7968   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7781:7982   */\n    tag_465:\n      pop\n      pop\n        /* \"#utility.yul\":8028:8029   */\n      0x01\n        /* \"#utility.yul\":8019:8025   */\n      dup5\n        /* \"#utility.yul\":8016:8017   */\n      0x01\n        /* \"#utility.yul\":8012:8026   */\n      shl\n        /* \"#utility.yul\":8008:8030   */\n      add\n        /* \"#utility.yul\":8002:8006   */\n      dup6\n        /* \"#utility.yul\":7995:8031   */\n      sstore\n        /* \"#utility.yul\":7348:8292   */\n    tag_457:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6953:8298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8303:8430   */\n    tag_378:\n        /* \"#utility.yul\":8364:8374   */\n      0x4e487b71\n        /* \"#utility.yul\":8359:8362   */\n      0xe0\n        /* \"#utility.yul\":8355:8375   */\n      shl\n        /* \"#utility.yul\":8352:8353   */\n      0x00\n        /* \"#utility.yul\":8345:8376   */\n      mstore\n        /* \"#utility.yul\":8395:8399   */\n      0x11\n        /* \"#utility.yul\":8392:8393   */\n      0x04\n        /* \"#utility.yul\":8385:8400   */\n      mstore\n        /* \"#utility.yul\":8419:8423   */\n      0x24\n        /* \"#utility.yul\":8416:8417   */\n      0x00\n        /* \"#utility.yul\":8409:8424   */\n      revert\n        /* \"#utility.yul\":8435:8563   */\n    tag_176:\n        /* \"#utility.yul\":8502:8511   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8523:8534   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8520:8557   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":8537:8555   */\n      tag_151\n      tag_378\n      jump\t// in\n        /* \"#utility.yul\":8568:8695   */\n    tag_181:\n        /* \"#utility.yul\":8629:8639   */\n      0x4e487b71\n        /* \"#utility.yul\":8624:8627   */\n      0xe0\n        /* \"#utility.yul\":8620:8640   */\n      shl\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8610:8641   */\n      mstore\n        /* \"#utility.yul\":8660:8664   */\n      0x32\n        /* \"#utility.yul\":8657:8658   */\n      0x04\n        /* \"#utility.yul\":8650:8665   */\n      mstore\n        /* \"#utility.yul\":8684:8688   */\n      0x24\n        /* \"#utility.yul\":8681:8682   */\n      0x00\n        /* \"#utility.yul\":8674:8689   */\n      revert\n        /* \"#utility.yul\":8700:8827   */\n    tag_189:\n        /* \"#utility.yul\":8761:8771   */\n      0x4e487b71\n        /* \"#utility.yul\":8756:8759   */\n      0xe0\n        /* \"#utility.yul\":8752:8772   */\n      shl\n        /* \"#utility.yul\":8749:8750   */\n      0x00\n        /* \"#utility.yul\":8742:8773   */\n      mstore\n        /* \"#utility.yul\":8792:8796   */\n      0x31\n        /* \"#utility.yul\":8789:8790   */\n      0x04\n        /* \"#utility.yul\":8782:8797   */\n      mstore\n        /* \"#utility.yul\":8816:8820   */\n      0x24\n        /* \"#utility.yul\":8813:8814   */\n      0x00\n        /* \"#utility.yul\":8806:8821   */\n      revert\n        /* \"#utility.yul\":9392:9682   */\n    tag_213:\n        /* \"#utility.yul\":9461:9467   */\n      0x00\n        /* \"#utility.yul\":9514:9516   */\n      0x20\n        /* \"#utility.yul\":9502:9511   */\n      dup3\n        /* \"#utility.yul\":9493:9500   */\n      dup5\n        /* \"#utility.yul\":9489:9512   */\n      sub\n        /* \"#utility.yul\":9485:9517   */\n      slt\n        /* \"#utility.yul\":9482:9534   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":9530:9531   */\n      0x00\n        /* \"#utility.yul\":9527:9528   */\n      dup1\n        /* \"#utility.yul\":9520:9532   */\n      revert\n        /* \"#utility.yul\":9482:9534   */\n    tag_474:\n        /* \"#utility.yul\":9556:9572   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":9601:9633   */\n      dup2\n      and\n        /* \"#utility.yul\":9591:9634   */\n      dup2\n      eq\n        /* \"#utility.yul\":9581:9652   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":9648:9649   */\n      0x00\n        /* \"#utility.yul\":9645:9646   */\n      dup1\n        /* \"#utility.yul\":9638:9650   */\n      revert\n        /* \"#utility.yul\":9687:10349   */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9966:9981   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":9948:9982   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10018:10033   */\n      dup6\n      and\n        /* \"#utility.yul\":10013:10015   */\n      0x20\n        /* \"#utility.yul\":9998:10016   */\n      dup3\n      add\n        /* \"#utility.yul\":9991:10034   */\n      mstore\n        /* \"#utility.yul\":10065:10067   */\n      0x40\n        /* \"#utility.yul\":10050:10068   */\n      dup2\n      add\n        /* \"#utility.yul\":10043:10077   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10113:10116   */\n      0x80\n        /* \"#utility.yul\":10108:10110   */\n      0x60\n        /* \"#utility.yul\":10093:10111   */\n      dup3\n      add\n        /* \"#utility.yul\":10086:10117   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10133:10152   */\n      dup2\n      add\n        /* \"#utility.yul\":10126:10161   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":9891:9895   */\n      0x00\n        /* \"#utility.yul\":10154:10160   */\n      dup3\n        /* \"#utility.yul\":10204:10210   */\n      dup5\n        /* \"#utility.yul\":9928:9931   */\n      0xa0\n        /* \"#utility.yul\":10183:10202   */\n      dup5\n      add\n        /* \"#utility.yul\":10170:10219   */\n      calldatacopy\n        /* \"#utility.yul\":10269:10270   */\n      0x00\n        /* \"#utility.yul\":10263:10266   */\n      0xa0\n        /* \"#utility.yul\":10254:10260   */\n      dup5\n        /* \"#utility.yul\":10243:10252   */\n      dup5\n        /* \"#utility.yul\":10239:10261   */\n      add\n        /* \"#utility.yul\":10235:10267   */\n      add\n        /* \"#utility.yul\":10228:10271   */\n      mstore\n        /* \"#utility.yul\":10339:10342   */\n      0xa0\n        /* \"#utility.yul\":10332:10334   */\n      0x1f\n        /* \"#utility.yul\":10328:10335   */\n      not\n        /* \"#utility.yul\":10323:10325   */\n      0x1f\n        /* \"#utility.yul\":10315:10321   */\n      dup6\n        /* \"#utility.yul\":10311:10326   */\n      add\n        /* \"#utility.yul\":10307:10336   */\n      and\n        /* \"#utility.yul\":10296:10305   */\n      dup4\n        /* \"#utility.yul\":10292:10337   */\n      add\n        /* \"#utility.yul\":10288:10343   */\n      add\n        /* \"#utility.yul\":10280:10343   */\n      swap1\n      pop\n        /* \"#utility.yul\":9687:10349   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10354:11077   */\n    tag_379:\n        /* \"#utility.yul\":10404:10407   */\n      0x00\n        /* \"#utility.yul\":10445:10450   */\n      dup2\n        /* \"#utility.yul\":10439:10451   */\n      sload\n        /* \"#utility.yul\":10474:10510   */\n      tag_478\n        /* \"#utility.yul\":10500:10509   */\n      dup2\n        /* \"#utility.yul\":10474:10510   */\n      tag_146\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10529:10530   */\n      0x01\n        /* \"#utility.yul\":10546:10563   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":10572:10705   */\n      dup1\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":10719:10720   */\n      0x01\n        /* \"#utility.yul\":10714:11071   */\n      dup2\n      eq\n      tag_481\n      jumpi\n        /* \"#utility.yul\":10539:11071   */\n      jump(tag_479)\n        /* \"#utility.yul\":10572:10705   */\n    tag_480:\n      not(0xff)\n        /* \"#utility.yul\":10605:10629   */\n      dup5\n      and\n        /* \"#utility.yul\":10593:10630   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10678:10692   */\n      dup3\n      iszero\n        /* \"#utility.yul\":10671:10693   */\n      iszero\n        /* \"#utility.yul\":10659:10694   */\n      dup4\n      mul\n        /* \"#utility.yul\":10650:10695   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":10572:10705   */\n      jump(tag_479)\n        /* \"#utility.yul\":10714:11071   */\n    tag_481:\n        /* \"#utility.yul\":10745:10750   */\n      dup6\n        /* \"#utility.yul\":10742:10743   */\n      0x00\n        /* \"#utility.yul\":10735:10751   */\n      mstore\n        /* \"#utility.yul\":10774:10778   */\n      0x20\n        /* \"#utility.yul\":10819:10823   */\n      dup1\n        /* \"#utility.yul\":10816:10817   */\n      0x00\n        /* \"#utility.yul\":10806:10824   */\n      keccak256\n        /* \"#utility.yul\":10846:10847   */\n      0x00\n        /* \"#utility.yul\":10860:11025   */\n    tag_482:\n        /* \"#utility.yul\":10874:10880   */\n      dup6\n        /* \"#utility.yul\":10871:10872   */\n      dup2\n        /* \"#utility.yul\":10868:10881   */\n      lt\n        /* \"#utility.yul\":10860:11025   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":10952:10966   */\n      dup2\n      sload\n        /* \"#utility.yul\":10939:10950   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":10932:10967   */\n      mstore\n        /* \"#utility.yul\":10995:11011   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":10889:10899   */\n      dup3\n      add\n        /* \"#utility.yul\":10860:11025   */\n      jump(tag_482)\n    tag_484:\n        /* \"#utility.yul\":10864:10867   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11054:11060   */\n      dup3\n        /* \"#utility.yul\":11049:11052   */\n      dup8\n        /* \"#utility.yul\":11045:11061   */\n      add\n        /* \"#utility.yul\":11038:11061   */\n      swap5\n      pop\n        /* \"#utility.yul\":10539:11071   */\n    tag_479:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":10354:11077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11082:11471   */\n    tag_255:\n        /* \"#utility.yul\":11258:11261   */\n      0x00\n        /* \"#utility.yul\":11286:11324   */\n      tag_486\n        /* \"#utility.yul\":11320:11323   */\n      dup3\n        /* \"#utility.yul\":11312:11318   */\n      dup6\n        /* \"#utility.yul\":11286:11324   */\n      tag_379\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11353:11359   */\n      dup4\n        /* \"#utility.yul\":11347:11360   */\n      mload\n        /* \"#utility.yul\":11369:11434   */\n      tag_487\n        /* \"#utility.yul\":11427:11433   */\n      dup2\n        /* \"#utility.yul\":11423:11425   */\n      dup4\n        /* \"#utility.yul\":11416:11420   */\n      0x20\n        /* \"#utility.yul\":11408:11414   */\n      dup9\n        /* \"#utility.yul\":11404:11421   */\n      add\n        /* \"#utility.yul\":11369:11434   */\n      tag_372\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11450:11465   */\n      add\n      swap5\n        /* \"#utility.yul\":11082:11471   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11663:12017   */\n    tag_261:\n        /* \"#utility.yul\":11881:11884   */\n      0x00\n        /* \"#utility.yul\":11912:11950   */\n      tag_490\n        /* \"#utility.yul\":11946:11949   */\n      dup3\n        /* \"#utility.yul\":11938:11944   */\n      dup5\n        /* \"#utility.yul\":11912:11950   */\n      tag_379\n      jump\t// in\n    tag_490:\n      shl(0xd1, 0x18973539b7b7)\n        /* \"#utility.yul\":11959:11982   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12009:12010   */\n      0x06\n        /* \"#utility.yul\":11998:12011   */\n      add\n      swap4\n        /* \"#utility.yul\":11663:12017   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12022:12376   */\n    tag_265:\n        /* \"#utility.yul\":12240:12243   */\n      0x00\n        /* \"#utility.yul\":12271:12309   */\n      tag_492\n        /* \"#utility.yul\":12305:12308   */\n      dup3\n        /* \"#utility.yul\":12297:12303   */\n      dup5\n        /* \"#utility.yul\":12271:12309   */\n      tag_379\n      jump\t// in\n    tag_492:\n      shl(0xd1, 0x19173539b7b7)\n        /* \"#utility.yul\":12318:12341   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12368:12369   */\n      0x06\n        /* \"#utility.yul\":12357:12370   */\n      add\n      swap4\n        /* \"#utility.yul\":12022:12376   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12381:12735   */\n    tag_269:\n        /* \"#utility.yul\":12599:12602   */\n      0x00\n        /* \"#utility.yul\":12630:12668   */\n      tag_494\n        /* \"#utility.yul\":12664:12667   */\n      dup3\n        /* \"#utility.yul\":12656:12662   */\n      dup5\n        /* \"#utility.yul\":12630:12668   */\n      tag_379\n      jump\t// in\n    tag_494:\n      shl(0xd1, 0x19973539b7b7)\n        /* \"#utility.yul\":12677:12700   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12727:12728   */\n      0x06\n        /* \"#utility.yul\":12716:12729   */\n      add\n      swap4\n        /* \"#utility.yul\":12381:12735   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12740:13094   */\n    tag_273:\n        /* \"#utility.yul\":12958:12961   */\n      0x00\n        /* \"#utility.yul\":12989:13027   */\n      tag_496\n        /* \"#utility.yul\":13023:13026   */\n      dup3\n        /* \"#utility.yul\":13015:13021   */\n      dup5\n        /* \"#utility.yul\":12989:13027   */\n      tag_379\n      jump\t// in\n    tag_496:\n      shl(0xd1, 0x1a173539b7b7)\n        /* \"#utility.yul\":13036:13059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13086:13087   */\n      0x06\n        /* \"#utility.yul\":13075:13088   */\n      add\n      swap4\n        /* \"#utility.yul\":12740:13094   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13099:13453   */\n    tag_277:\n        /* \"#utility.yul\":13317:13320   */\n      0x00\n        /* \"#utility.yul\":13348:13386   */\n      tag_498\n        /* \"#utility.yul\":13382:13385   */\n      dup3\n        /* \"#utility.yul\":13374:13380   */\n      dup5\n        /* \"#utility.yul\":13348:13386   */\n      tag_379\n      jump\t// in\n    tag_498:\n      shl(0xd1, 0x1a973539b7b7)\n        /* \"#utility.yul\":13395:13418   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13445:13446   */\n      0x06\n        /* \"#utility.yul\":13434:13447   */\n      add\n      swap4\n        /* \"#utility.yul\":13099:13453   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13458:13874   */\n    tag_380:\n        /* \"#utility.yul\":13547:13548   */\n      0x01\n        /* \"#utility.yul\":13584:13589   */\n      dup2\n        /* \"#utility.yul\":13547:13548   */\n      dup2\n        /* \"#utility.yul\":13598:13868   */\n    tag_500:\n        /* \"#utility.yul\":13619:13626   */\n      dup1\n        /* \"#utility.yul\":13609:13617   */\n      dup6\n        /* \"#utility.yul\":13606:13627   */\n      gt\n        /* \"#utility.yul\":13598:13868   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":13678:13682   */\n      dup2\n        /* \"#utility.yul\":13674:13675   */\n      0x00\n        /* \"#utility.yul\":13670:13676   */\n      not\n        /* \"#utility.yul\":13666:13683   */\n      div\n        /* \"#utility.yul\":13660:13664   */\n      dup3\n        /* \"#utility.yul\":13657:13684   */\n      gt\n        /* \"#utility.yul\":13654:13707   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":13687:13705   */\n      tag_504\n      tag_378\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13737:13744   */\n      dup1\n        /* \"#utility.yul\":13727:13735   */\n      dup6\n        /* \"#utility.yul\":13723:13745   */\n      and\n        /* \"#utility.yul\":13720:13775   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":13757:13773   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":13720:13775   */\n    tag_505:\n        /* \"#utility.yul\":13836:13858   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":13796:13811   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":13598:13868   */\n      jump(tag_500)\n    tag_502:\n        /* \"#utility.yul\":13602:13605   */\n      pop\n        /* \"#utility.yul\":13458:13874   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13879:14685   */\n    tag_381:\n        /* \"#utility.yul\":13928:13933   */\n      0x00\n        /* \"#utility.yul\":13958:13966   */\n      dup3\n        /* \"#utility.yul\":13948:14028   */\n      tag_507\n      jumpi\n      pop\n        /* \"#utility.yul\":13999:14000   */\n      0x01\n        /* \"#utility.yul\":14013:14018   */\n      jump(tag_151)\n        /* \"#utility.yul\":13948:14028   */\n    tag_507:\n        /* \"#utility.yul\":14047:14051   */\n      dup2\n        /* \"#utility.yul\":14037:14113   */\n      tag_508\n      jumpi\n      pop\n        /* \"#utility.yul\":14084:14085   */\n      0x00\n        /* \"#utility.yul\":14098:14103   */\n      jump(tag_151)\n        /* \"#utility.yul\":14037:14113   */\n    tag_508:\n        /* \"#utility.yul\":14129:14133   */\n      dup2\n        /* \"#utility.yul\":14147:14148   */\n      0x01\n        /* \"#utility.yul\":14142:14201   */\n      dup2\n      eq\n      tag_510\n      jumpi\n        /* \"#utility.yul\":14215:14216   */\n      0x02\n        /* \"#utility.yul\":14210:14340   */\n      dup2\n      eq\n      tag_511\n      jumpi\n        /* \"#utility.yul\":14122:14340   */\n      jump(tag_509)\n        /* \"#utility.yul\":14142:14201   */\n    tag_510:\n        /* \"#utility.yul\":14172:14173   */\n      0x01\n        /* \"#utility.yul\":14163:14173   */\n      swap2\n      pop\n        /* \"#utility.yul\":14186:14191   */\n      pop\n      jump(tag_151)\n        /* \"#utility.yul\":14210:14340   */\n    tag_511:\n        /* \"#utility.yul\":14247:14250   */\n      0xff\n        /* \"#utility.yul\":14237:14245   */\n      dup5\n        /* \"#utility.yul\":14234:14251   */\n      gt\n        /* \"#utility.yul\":14231:14274   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":14254:14272   */\n      tag_513\n      tag_378\n      jump\t// in\n    tag_513:\n      pop\n      pop\n        /* \"#utility.yul\":14310:14311   */\n      0x01\n        /* \"#utility.yul\":14296:14312   */\n      dup3\n      shl\n        /* \"#utility.yul\":14325:14330   */\n      jump(tag_151)\n        /* \"#utility.yul\":14122:14340   */\n    tag_509:\n      pop\n        /* \"#utility.yul\":14424:14426   */\n      0x20\n        /* \"#utility.yul\":14414:14422   */\n      dup4\n        /* \"#utility.yul\":14411:14427   */\n      lt\n        /* \"#utility.yul\":14405:14408   */\n      0x0133\n        /* \"#utility.yul\":14399:14403   */\n      dup4\n        /* \"#utility.yul\":14396:14409   */\n      lt\n        /* \"#utility.yul\":14392:14428   */\n      and\n        /* \"#utility.yul\":14386:14388   */\n      0x4e\n        /* \"#utility.yul\":14376:14384   */\n      dup5\n        /* \"#utility.yul\":14373:14389   */\n      lt\n        /* \"#utility.yul\":14368:14370   */\n      0x0b\n        /* \"#utility.yul\":14362:14366   */\n      dup5\n        /* \"#utility.yul\":14359:14371   */\n      lt\n        /* \"#utility.yul\":14355:14390   */\n      and\n        /* \"#utility.yul\":14352:14429   */\n      or\n        /* \"#utility.yul\":14349:14508   */\n      iszero\n      tag_514\n      jumpi\n      pop\n        /* \"#utility.yul\":14461:14480   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":14493:14498   */\n      jump(tag_151)\n        /* \"#utility.yul\":14349:14508   */\n    tag_514:\n        /* \"#utility.yul\":14540:14574   */\n      tag_515\n        /* \"#utility.yul\":14565:14573   */\n      dup4\n        /* \"#utility.yul\":14559:14563   */\n      dup4\n        /* \"#utility.yul\":14540:14574   */\n      tag_380\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14610:14616   */\n      dup1\n        /* \"#utility.yul\":14606:14607   */\n      0x00\n        /* \"#utility.yul\":14602:14608   */\n      not\n        /* \"#utility.yul\":14598:14617   */\n      div\n        /* \"#utility.yul\":14589:14596   */\n      dup3\n        /* \"#utility.yul\":14586:14618   */\n      gt\n        /* \"#utility.yul\":14583:14641   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":14621:14639   */\n      tag_517\n      tag_378\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":14659:14679   */\n      mul\n      swap4\n        /* \"#utility.yul\":13879:14685   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14690:14830   */\n    tag_298:\n        /* \"#utility.yul\":14748:14753   */\n      0x00\n        /* \"#utility.yul\":14777:14824   */\n      tag_165\n        /* \"#utility.yul\":14818:14822   */\n      0xff\n        /* \"#utility.yul\":14808:14816   */\n      dup5\n        /* \"#utility.yul\":14804:14823   */\n      and\n        /* \"#utility.yul\":14798:14802   */\n      dup4\n        /* \"#utility.yul\":14777:14824   */\n      tag_381\n      jump\t// in\n        /* \"#utility.yul\":14967:15184   */\n    tag_304:\n        /* \"#utility.yul\":15007:15008   */\n      0x00\n        /* \"#utility.yul\":15033:15034   */\n      dup3\n        /* \"#utility.yul\":15023:15155   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":15077:15087   */\n      0x4e487b71\n        /* \"#utility.yul\":15072:15075   */\n      0xe0\n        /* \"#utility.yul\":15068:15088   */\n      shl\n        /* \"#utility.yul\":15065:15066   */\n      0x00\n        /* \"#utility.yul\":15058:15089   */\n      mstore\n        /* \"#utility.yul\":15112:15116   */\n      0x12\n        /* \"#utility.yul\":15109:15110   */\n      0x04\n        /* \"#utility.yul\":15102:15117   */\n      mstore\n        /* \"#utility.yul\":15140:15144   */\n      0x24\n        /* \"#utility.yul\":15137:15138   */\n      0x00\n        /* \"#utility.yul\":15130:15145   */\n      revert\n        /* \"#utility.yul\":15023:15155   */\n    tag_522:\n      pop\n        /* \"#utility.yul\":15169:15178   */\n      div\n      swap1\n        /* \"#utility.yul\":14967:15184   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122004590b12c2c1197e74bd5954694bfe46a8ec288c2a1d66e9f9afada6930b3ac964736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1467": {
									"entryPoint": null,
									"id": 1467,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1698": {
									"entryPoint": null,
									"id": 1698,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_2512": {
									"entryPoint": null,
									"id": 2512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4675:5",
										"nodeType": "YulBlock",
										"src": "0:4675:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:5",
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:5",
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:5",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:5",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nativeSrc": "143:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nativeSrc": "143:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nativeSrc": "112:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:5",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nativeSrc": "108:32:5",
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nativeSrc": "105:52:5",
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nativeSrc": "166:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nativeSrc": "179:16:5",
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:5",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:5",
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:5",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:5",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nativeSrc": "260:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nativeSrc": "260:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:5",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:5",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nativeSrc": "239:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:5",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nativeSrc": "235:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nativeSrc": "224:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nativeSrc": "214:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nativeSrc": "207:50:5",
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nativeSrc": "204:70:5",
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nativeSrc": "283:15:5",
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:5",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:5",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:5",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:5",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											},
											{
												"body": {
													"nativeSrc": "341:95:5",
													"nodeType": "YulBlock",
													"src": "341:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "358:1:5",
																		"nodeType": "YulLiteral",
																		"src": "358:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "365:3:5",
																				"nodeType": "YulLiteral",
																				"src": "365:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:10:5",
																				"nodeType": "YulLiteral",
																				"src": "370:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "361:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "361:3:5"
																		},
																		"nativeSrc": "361:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "361:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:5"
																},
																"nativeSrc": "351:31:5",
																"nodeType": "YulFunctionCall",
																"src": "351:31:5"
															},
															"nativeSrc": "351:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "351:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "398:1:5",
																		"nodeType": "YulLiteral",
																		"src": "398:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "401:4:5",
																		"nodeType": "YulLiteral",
																		"src": "401:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "391:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "391:6:5"
																},
																"nativeSrc": "391:15:5",
																"nodeType": "YulFunctionCall",
																"src": "391:15:5"
															},
															"nativeSrc": "391:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "391:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "422:1:5",
																		"nodeType": "YulLiteral",
																		"src": "422:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "425:4:5",
																		"nodeType": "YulLiteral",
																		"src": "425:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "415:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:5"
																},
																"nativeSrc": "415:15:5",
																"nodeType": "YulFunctionCall",
																"src": "415:15:5"
															},
															"nativeSrc": "415:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "415:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "309:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "309:127:5"
											},
											{
												"body": {
													"nativeSrc": "496:325:5",
													"nodeType": "YulBlock",
													"src": "496:325:5",
													"statements": [
														{
															"nativeSrc": "506:22:5",
															"nodeType": "YulAssignment",
															"src": "506:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "520:1:5",
																		"nodeType": "YulLiteral",
																		"src": "520:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "523:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "523:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "516:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:5"
																},
																"nativeSrc": "516:12:5",
																"nodeType": "YulFunctionCall",
																"src": "516:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "506:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:5"
																}
															]
														},
														{
															"nativeSrc": "537:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "537:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "567:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "567:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "573:1:5",
																		"nodeType": "YulLiteral",
																		"src": "573:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "563:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:5"
																},
																"nativeSrc": "563:12:5",
																"nodeType": "YulFunctionCall",
																"src": "563:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "541:18:5",
																	"nodeType": "YulTypedName",
																	"src": "541:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "614:31:5",
																"nodeType": "YulBlock",
																"src": "614:31:5",
																"statements": [
																	{
																		"nativeSrc": "616:27:5",
																		"nodeType": "YulAssignment",
																		"src": "616:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "630:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "630:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "638:4:5",
																					"nodeType": "YulLiteral",
																					"src": "638:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "626:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "626:3:5"
																			},
																			"nativeSrc": "626:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "626:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "616:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "616:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "594:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "594:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "587:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "587:6:5"
																},
																"nativeSrc": "587:26:5",
																"nodeType": "YulFunctionCall",
																"src": "587:26:5"
															},
															"nativeSrc": "584:61:5",
															"nodeType": "YulIf",
															"src": "584:61:5"
														},
														{
															"body": {
																"nativeSrc": "704:111:5",
																"nodeType": "YulBlock",
																"src": "704:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "732:3:5",
																							"nodeType": "YulLiteral",
																							"src": "732:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "737:10:5",
																							"nodeType": "YulLiteral",
																							"src": "737:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "728:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "728:3:5"
																					},
																					"nativeSrc": "728:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "728:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "718:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "718:6:5"
																			},
																			"nativeSrc": "718:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "718:31:5"
																		},
																		"nativeSrc": "718:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "718:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "769:1:5",
																					"nodeType": "YulLiteral",
																					"src": "769:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "772:4:5",
																					"nodeType": "YulLiteral",
																					"src": "772:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "762:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "762:6:5"
																			},
																			"nativeSrc": "762:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "762:15:5"
																		},
																		"nativeSrc": "762:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "762:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "797:1:5",
																					"nodeType": "YulLiteral",
																					"src": "797:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "800:4:5",
																					"nodeType": "YulLiteral",
																					"src": "800:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "790:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:5"
																			},
																			"nativeSrc": "790:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "790:15:5"
																		},
																		"nativeSrc": "790:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "790:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "660:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "660:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "683:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "683:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "691:2:5",
																				"nodeType": "YulLiteral",
																				"src": "691:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "680:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "680:2:5"
																		},
																		"nativeSrc": "680:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "680:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "657:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "657:2:5"
																},
																"nativeSrc": "657:38:5",
																"nodeType": "YulFunctionCall",
																"src": "657:38:5"
															},
															"nativeSrc": "654:161:5",
															"nodeType": "YulIf",
															"src": "654:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "441:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "476:4:5",
														"nodeType": "YulTypedName",
														"src": "476:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "485:6:5",
														"nodeType": "YulTypedName",
														"src": "485:6:5",
														"type": ""
													}
												],
												"src": "441:380:5"
											},
											{
												"body": {
													"nativeSrc": "882:65:5",
													"nodeType": "YulBlock",
													"src": "882:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "899:1:5",
																		"nodeType": "YulLiteral",
																		"src": "899:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "902:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "902:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "892:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:5"
																},
																"nativeSrc": "892:14:5",
																"nodeType": "YulFunctionCall",
																"src": "892:14:5"
															},
															"nativeSrc": "892:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "892:14:5"
														},
														{
															"nativeSrc": "915:26:5",
															"nodeType": "YulAssignment",
															"src": "915:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:5",
																		"nodeType": "YulLiteral",
																		"src": "933:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "936:4:5",
																		"nodeType": "YulLiteral",
																		"src": "936:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "923:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "923:9:5"
																},
																"nativeSrc": "923:18:5",
																"nodeType": "YulFunctionCall",
																"src": "923:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "915:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "826:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "865:3:5",
														"nodeType": "YulTypedName",
														"src": "865:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "873:4:5",
														"nodeType": "YulTypedName",
														"src": "873:4:5",
														"type": ""
													}
												],
												"src": "826:121:5"
											},
											{
												"body": {
													"nativeSrc": "1033:437:5",
													"nodeType": "YulBlock",
													"src": "1033:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1066:398:5",
																"nodeType": "YulBlock",
																"src": "1066:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1087:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1087:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1090:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1090:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1080:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1080:6:5"
																			},
																			"nativeSrc": "1080:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1080:16:5"
																		},
																		"nativeSrc": "1080:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1080:16:5"
																	},
																	{
																		"nativeSrc": "1109:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1109:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1134:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1121:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:5"
																			},
																			"nativeSrc": "1121:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1121:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1113:4:5",
																				"nodeType": "YulTypedName",
																				"src": "1113:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1152:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1152:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1175:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1175:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1185:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1185:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1192:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "1192:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1204:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1204:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1188:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1188:3:5"
																							},
																							"nativeSrc": "1188:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1188:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1181:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1181:3:5"
																					},
																					"nativeSrc": "1181:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1181:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1171:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:5"
																			},
																			"nativeSrc": "1171:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1171:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1156:11:5",
																				"nodeType": "YulTypedName",
																				"src": "1156:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1246:23:5",
																			"nodeType": "YulBlock",
																			"src": "1246:23:5",
																			"statements": [
																				{
																					"nativeSrc": "1248:19:5",
																					"nodeType": "YulAssignment",
																					"src": "1248:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1263:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1263:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1248:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "1248:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1228:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "1228:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1240:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1240:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1225:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1225:2:5"
																			},
																			"nativeSrc": "1225:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:20:5"
																		},
																		"nativeSrc": "1222:47:5",
																		"nodeType": "YulIf",
																		"src": "1222:47:5"
																	},
																	{
																		"nativeSrc": "1282:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1282:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1296:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "1296:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1306:1:5",
																							"nodeType": "YulLiteral",
																							"src": "1306:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1313:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1313:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1318:2:5",
																									"nodeType": "YulLiteral",
																									"src": "1318:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1309:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "1309:3:5"
																							},
																							"nativeSrc": "1309:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1309:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1302:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1302:3:5"
																					},
																					"nativeSrc": "1302:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1302:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1292:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1292:3:5"
																			},
																			"nativeSrc": "1292:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1292:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1286:2:5",
																				"nodeType": "YulTypedName",
																				"src": "1286:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1336:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1336:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1349:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "1349:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1340:5:5",
																				"nodeType": "YulTypedName",
																				"src": "1340:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1434:20:5",
																			"nodeType": "YulBlock",
																			"src": "1434:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1443:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1443:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1450:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1450:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1436:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "1436:6:5"
																						},
																						"nativeSrc": "1436:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1436:16:5"
																					},
																					"nativeSrc": "1436:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "1436:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1384:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1384:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1391:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "1391:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1381:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "1381:2:5"
																			},
																			"nativeSrc": "1381:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1381:13:5"
																		},
																		"nativeSrc": "1373:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1395:26:5",
																			"nodeType": "YulBlock",
																			"src": "1395:26:5",
																			"statements": [
																				{
																					"nativeSrc": "1397:22:5",
																					"nodeType": "YulAssignment",
																					"src": "1397:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1410:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "1410:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1417:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1417:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1406:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1406:3:5"
																						},
																						"nativeSrc": "1406:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1406:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1397:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "1397:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1377:3:5",
																			"nodeType": "YulBlock",
																			"src": "1377:3:5",
																			"statements": []
																		},
																		"src": "1373:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1049:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1049:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1054:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1054:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1046:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:5"
																},
																"nativeSrc": "1046:11:5",
																"nodeType": "YulFunctionCall",
																"src": "1046:11:5"
															},
															"nativeSrc": "1043:421:5",
															"nodeType": "YulIf",
															"src": "1043:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "952:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1005:5:5",
														"nodeType": "YulTypedName",
														"src": "1005:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1012:3:5",
														"nodeType": "YulTypedName",
														"src": "1012:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1017:10:5",
														"nodeType": "YulTypedName",
														"src": "1017:10:5",
														"type": ""
													}
												],
												"src": "952:518:5"
											},
											{
												"body": {
													"nativeSrc": "1560:81:5",
													"nodeType": "YulBlock",
													"src": "1560:81:5",
													"statements": [
														{
															"nativeSrc": "1570:65:5",
															"nodeType": "YulAssignment",
															"src": "1570:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1585:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "1585:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1603:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1603:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1606:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1606:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1599:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1599:3:5"
																								},
																								"nativeSrc": "1599:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1599:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1616:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1616:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1612:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1612:3:5"
																								},
																								"nativeSrc": "1612:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1612:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1595:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1595:3:5"
																						},
																						"nativeSrc": "1595:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1595:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1591:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1591:3:5"
																				},
																				"nativeSrc": "1591:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1591:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:5"
																		},
																		"nativeSrc": "1581:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1627:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1627:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1630:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1630:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1623:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:5"
																		},
																		"nativeSrc": "1623:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1578:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1578:2:5"
																},
																"nativeSrc": "1578:57:5",
																"nodeType": "YulFunctionCall",
																"src": "1578:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1570:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1570:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1475:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1537:4:5",
														"nodeType": "YulTypedName",
														"src": "1537:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1543:3:5",
														"nodeType": "YulTypedName",
														"src": "1543:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1551:4:5",
														"nodeType": "YulTypedName",
														"src": "1551:4:5",
														"type": ""
													}
												],
												"src": "1475:166:5"
											},
											{
												"body": {
													"nativeSrc": "1742:1249:5",
													"nodeType": "YulBlock",
													"src": "1742:1249:5",
													"statements": [
														{
															"nativeSrc": "1752:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1752:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1772:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1772:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1766:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1766:5:5"
																},
																"nativeSrc": "1766:10:5",
																"nodeType": "YulFunctionCall",
																"src": "1766:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1756:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1756:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1819:22:5",
																"nodeType": "YulBlock",
																"src": "1819:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1821:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "1821:16:5"
																			},
																			"nativeSrc": "1821:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1821:18:5"
																		},
																		"nativeSrc": "1821:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1821:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1791:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1807:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1807:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1811:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1811:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1803:3:5"
																				},
																				"nativeSrc": "1803:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1803:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1815:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1815:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1799:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:5"
																		},
																		"nativeSrc": "1799:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1788:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:5"
																},
																"nativeSrc": "1788:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1788:30:5"
															},
															"nativeSrc": "1785:56:5",
															"nodeType": "YulIf",
															"src": "1785:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1894:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1894:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1932:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "1932:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1926:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "1926:5:5"
																				},
																				"nativeSrc": "1926:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1926:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1900:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "1900:25:5"
																		},
																		"nativeSrc": "1900:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1940:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1940:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1850:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1850:43:5"
																},
																"nativeSrc": "1850:97:5",
																"nodeType": "YulFunctionCall",
																"src": "1850:97:5"
															},
															"nativeSrc": "1850:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "1850:97:5"
														},
														{
															"nativeSrc": "1956:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1956:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1973:1:5",
																"nodeType": "YulLiteral",
																"src": "1973:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1960:9:5",
																	"nodeType": "YulTypedName",
																	"src": "1960:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1983:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1983:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2002:4:5",
																"nodeType": "YulLiteral",
																"src": "2002:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1987:11:5",
																	"nodeType": "YulTypedName",
																	"src": "1987:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2015:17:5",
															"nodeType": "YulAssignment",
															"src": "2015:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2028:4:5",
																"nodeType": "YulLiteral",
																"src": "2028:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2015:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2015:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2078:656:5",
																		"nodeType": "YulBlock",
																		"src": "2078:656:5",
																		"statements": [
																			{
																				"nativeSrc": "2092:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2092:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2111:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2111:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2123:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2123:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2119:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2119:3:5"
																							},
																							"nativeSrc": "2119:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2119:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2107:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2107:3:5"
																					},
																					"nativeSrc": "2107:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2107:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2096:7:5",
																						"nodeType": "YulTypedName",
																						"src": "2096:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2140:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2140:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2184:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2184:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2154:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "2154:29:5"
																					},
																					"nativeSrc": "2154:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2154:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2144:6:5",
																						"nodeType": "YulTypedName",
																						"src": "2144:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2202:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2202:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2211:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2211:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2206:1:5",
																						"nodeType": "YulTypedName",
																						"src": "2206:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2289:172:5",
																					"nodeType": "YulBlock",
																					"src": "2289:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2314:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2314:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2332:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "2332:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2337:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "2337:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2328:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2328:3:5"
																												},
																												"nativeSrc": "2328:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2328:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2322:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "2322:5:5"
																										},
																										"nativeSrc": "2322:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2322:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2307:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2307:6:5"
																								},
																								"nativeSrc": "2307:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2307:42:5"
																							},
																							"nativeSrc": "2307:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2307:42:5"
																						},
																						{
																							"nativeSrc": "2366:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2366:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2380:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2380:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2388:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2388:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2376:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2376:3:5"
																								},
																								"nativeSrc": "2376:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2376:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2366:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2366:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2407:40:5",
																							"nodeType": "YulAssignment",
																							"src": "2407:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2424:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "2424:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2435:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2435:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2420:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2420:3:5"
																								},
																								"nativeSrc": "2420:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2420:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2407:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "2407:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2236:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "2236:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2239:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2239:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2233:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2233:2:5"
																					},
																					"nativeSrc": "2233:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2233:14:5"
																				},
																				"nativeSrc": "2225:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2248:28:5",
																					"nodeType": "YulBlock",
																					"src": "2248:28:5",
																					"statements": [
																						{
																							"nativeSrc": "2250:24:5",
																							"nodeType": "YulAssignment",
																							"src": "2250:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2259:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "2259:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2262:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "2262:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2255:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2255:3:5"
																								},
																								"nativeSrc": "2255:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2255:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2250:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "2250:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2229:3:5",
																					"nodeType": "YulBlock",
																					"src": "2229:3:5",
																					"statements": []
																				},
																				"src": "2225:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "2509:166:5",
																					"nodeType": "YulBlock",
																					"src": "2509:166:5",
																					"statements": [
																						{
																							"nativeSrc": "2527:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2527:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2554:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2554:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2559:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2559:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2550:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2550:3:5"
																										},
																										"nativeSrc": "2550:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2550:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2544:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2544:5:5"
																								},
																								"nativeSrc": "2544:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2544:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2531:9:5",
																									"nodeType": "YulTypedName",
																									"src": "2531:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2594:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "2594:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2606:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2606:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2633:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "2633:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2636:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "2636:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2629:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "2629:3:5"
																																		},
																																		"nativeSrc": "2629:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2629:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2645:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2645:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2625:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2625:3:5"
																																},
																																"nativeSrc": "2625:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2625:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2655:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "2655:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2651:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "2651:3:5"
																																},
																																"nativeSrc": "2651:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "2651:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2621:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "2621:3:5"
																														},
																														"nativeSrc": "2621:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "2621:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2617:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "2617:3:5"
																												},
																												"nativeSrc": "2617:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "2617:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2602:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2602:3:5"
																										},
																										"nativeSrc": "2602:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2602:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2587:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2587:6:5"
																								},
																								"nativeSrc": "2587:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2587:74:5"
																							},
																							"nativeSrc": "2587:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "2587:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2480:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "2480:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2489:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2489:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2477:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2477:2:5"
																					},
																					"nativeSrc": "2477:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2477:19:5"
																				},
																				"nativeSrc": "2474:201:5",
																				"nodeType": "YulIf",
																				"src": "2474:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2695:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2695:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2709:1:5",
																											"nodeType": "YulLiteral",
																											"src": "2709:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2712:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "2712:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2705:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2705:3:5"
																									},
																									"nativeSrc": "2705:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "2705:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2721:1:5",
																									"nodeType": "YulLiteral",
																									"src": "2721:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2701:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2701:3:5"
																							},
																							"nativeSrc": "2701:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2701:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2688:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2688:6:5"
																					},
																					"nativeSrc": "2688:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2688:36:5"
																				},
																				"nativeSrc": "2688:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2688:36:5"
																			}
																		]
																	},
																	"nativeSrc": "2071:663:5",
																	"nodeType": "YulCase",
																	"src": "2071:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2076:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2751:234:5",
																		"nodeType": "YulBlock",
																		"src": "2751:234:5",
																		"statements": [
																			{
																				"nativeSrc": "2765:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2765:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2778:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2778:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2769:5:5",
																						"nodeType": "YulTypedName",
																						"src": "2769:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2814:67:5",
																					"nodeType": "YulBlock",
																					"src": "2814:67:5",
																					"statements": [
																						{
																							"nativeSrc": "2832:35:5",
																							"nodeType": "YulAssignment",
																							"src": "2832:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2851:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "2851:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2856:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "2856:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2847:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "2847:3:5"
																										},
																										"nativeSrc": "2847:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "2847:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2841:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2841:5:5"
																								},
																								"nativeSrc": "2841:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2841:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2832:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2832:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2795:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2795:6:5"
																				},
																				"nativeSrc": "2792:89:5",
																				"nodeType": "YulIf",
																				"src": "2792:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2901:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "2901:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2960:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "2960:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2967:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "2967:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2907:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "2907:52:5"
																							},
																							"nativeSrc": "2907:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2907:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2894:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2894:6:5"
																					},
																					"nativeSrc": "2894:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2894:81:5"
																				},
																				"nativeSrc": "2894:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "2894:81:5"
																			}
																		]
																	},
																	"nativeSrc": "2743:242:5",
																	"nodeType": "YulCase",
																	"src": "2743:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2051:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2051:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2059:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2048:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:5"
																},
																"nativeSrc": "2048:14:5",
																"nodeType": "YulFunctionCall",
																"src": "2048:14:5"
															},
															"nativeSrc": "2041:944:5",
															"nodeType": "YulSwitch",
															"src": "2041:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1646:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1727:4:5",
														"nodeType": "YulTypedName",
														"src": "1727:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1733:3:5",
														"nodeType": "YulTypedName",
														"src": "1733:3:5",
														"type": ""
													}
												],
												"src": "1646:1345:5"
											},
											{
												"body": {
													"nativeSrc": "3028:95:5",
													"nodeType": "YulBlock",
													"src": "3028:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3045:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3052:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3052:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3057:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3057:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3048:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3048:3:5"
																		},
																		"nativeSrc": "3048:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3048:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3038:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3038:6:5"
																},
																"nativeSrc": "3038:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3038:31:5"
															},
															"nativeSrc": "3038:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3038:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3085:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3085:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3088:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3088:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3078:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:5"
																},
																"nativeSrc": "3078:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3078:15:5"
															},
															"nativeSrc": "3078:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3078:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3109:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3109:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3112:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3112:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3102:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3102:6:5"
																},
																"nativeSrc": "3102:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3102:15:5"
															},
															"nativeSrc": "3102:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3102:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2996:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "2996:127:5"
											},
											{
												"body": {
													"nativeSrc": "3192:352:5",
													"nodeType": "YulBlock",
													"src": "3192:352:5",
													"statements": [
														{
															"nativeSrc": "3202:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3202:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3217:1:5",
																"nodeType": "YulLiteral",
																"src": "3217:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3206:7:5",
																	"nodeType": "YulTypedName",
																	"src": "3206:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3227:10:5",
															"nodeType": "YulAssignment",
															"src": "3227:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3236:1:5",
																"nodeType": "YulLiteral",
																"src": "3236:1:5",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3227:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "3227:5:5"
																}
															]
														},
														{
															"nativeSrc": "3246:13:5",
															"nodeType": "YulAssignment",
															"src": "3246:13:5",
															"value": {
																"name": "_base",
																"nativeSrc": "3254:5:5",
																"nodeType": "YulIdentifier",
																"src": "3254:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3246:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3246:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3310:228:5",
																"nodeType": "YulBlock",
																"src": "3310:228:5",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3355:22:5",
																			"nodeType": "YulBlock",
																			"src": "3355:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3357:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "3357:16:5"
																						},
																						"nativeSrc": "3357:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3357:18:5"
																					},
																					"nativeSrc": "3357:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "3357:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3330:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3330:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3344:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3344:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3340:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3340:3:5"
																							},
																							"nativeSrc": "3340:6:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3340:6:5"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3348:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3348:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3336:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3336:3:5"
																					},
																					"nativeSrc": "3336:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3336:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3327:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "3327:2:5"
																			},
																			"nativeSrc": "3327:27:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:27:5"
																		},
																		"nativeSrc": "3324:53:5",
																		"nodeType": "YulIf",
																		"src": "3324:53:5"
																	},
																	{
																		"body": {
																			"nativeSrc": "3416:29:5",
																			"nodeType": "YulBlock",
																			"src": "3416:29:5",
																			"statements": [
																				{
																					"nativeSrc": "3418:25:5",
																					"nodeType": "YulAssignment",
																					"src": "3418:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3431:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "3431:5:5"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3438:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "3438:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3427:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "3427:3:5"
																						},
																						"nativeSrc": "3427:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "3427:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3418:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "3418:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3397:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "3397:8:5"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3407:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "3407:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3393:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3393:3:5"
																			},
																			"nativeSrc": "3393:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3393:22:5"
																		},
																		"nativeSrc": "3390:55:5",
																		"nodeType": "YulIf",
																		"src": "3390:55:5"
																	},
																	{
																		"nativeSrc": "3458:23:5",
																		"nodeType": "YulAssignment",
																		"src": "3458:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3470:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3470:4:5"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3476:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "3476:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3466:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:5"
																			},
																			"nativeSrc": "3466:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3466:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3458:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "3458:4:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3494:34:5",
																		"nodeType": "YulAssignment",
																		"src": "3494:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3510:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "3510:7:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3519:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "3519:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3506:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "3506:3:5"
																			},
																			"nativeSrc": "3506:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3494:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "3494:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3279:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3279:8:5"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3289:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3289:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3276:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3276:2:5"
																},
																"nativeSrc": "3276:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3276:21:5"
															},
															"nativeSrc": "3268:270:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3298:3:5",
																"nodeType": "YulBlock",
																"src": "3298:3:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3272:3:5",
																"nodeType": "YulBlock",
																"src": "3272:3:5",
																"statements": []
															},
															"src": "3268:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3128:416:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3156:5:5",
														"nodeType": "YulTypedName",
														"src": "3156:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3163:8:5",
														"nodeType": "YulTypedName",
														"src": "3163:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3176:5:5",
														"nodeType": "YulTypedName",
														"src": "3176:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3183:4:5",
														"nodeType": "YulTypedName",
														"src": "3183:4:5",
														"type": ""
													}
												],
												"src": "3128:416:5"
											},
											{
												"body": {
													"nativeSrc": "3608:747:5",
													"nodeType": "YulBlock",
													"src": "3608:747:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3646:52:5",
																"nodeType": "YulBlock",
																"src": "3646:52:5",
																"statements": [
																	{
																		"nativeSrc": "3660:10:5",
																		"nodeType": "YulAssignment",
																		"src": "3660:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3669:1:5",
																			"nodeType": "YulLiteral",
																			"src": "3669:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3660:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3660:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3683:5:5",
																		"nodeType": "YulLeave",
																		"src": "3683:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3628:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "3628:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3621:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:5"
																},
																"nativeSrc": "3621:16:5",
																"nodeType": "YulFunctionCall",
																"src": "3621:16:5"
															},
															"nativeSrc": "3618:80:5",
															"nodeType": "YulIf",
															"src": "3618:80:5"
														},
														{
															"body": {
																"nativeSrc": "3731:52:5",
																"nodeType": "YulBlock",
																"src": "3731:52:5",
																"statements": [
																	{
																		"nativeSrc": "3745:10:5",
																		"nodeType": "YulAssignment",
																		"src": "3745:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3754:1:5",
																			"nodeType": "YulLiteral",
																			"src": "3754:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3745:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3745:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3768:5:5",
																		"nodeType": "YulLeave",
																		"src": "3768:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3717:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3717:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3710:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:5"
																},
																"nativeSrc": "3710:12:5",
																"nodeType": "YulFunctionCall",
																"src": "3710:12:5"
															},
															"nativeSrc": "3707:76:5",
															"nodeType": "YulIf",
															"src": "3707:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3819:52:5",
																		"nodeType": "YulBlock",
																		"src": "3819:52:5",
																		"statements": [
																			{
																				"nativeSrc": "3833:10:5",
																				"nodeType": "YulAssignment",
																				"src": "3833:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3842:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3842:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3833:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3833:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3856:5:5",
																				"nodeType": "YulLeave",
																				"src": "3856:5:5"
																			}
																		]
																	},
																	"nativeSrc": "3812:59:5",
																	"nodeType": "YulCase",
																	"src": "3812:59:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3817:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3817:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3887:123:5",
																		"nodeType": "YulBlock",
																		"src": "3887:123:5",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3922:22:5",
																					"nodeType": "YulBlock",
																					"src": "3922:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3924:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "3924:16:5"
																								},
																								"nativeSrc": "3924:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3924:18:5"
																							},
																							"nativeSrc": "3924:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3924:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3907:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "3907:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3917:3:5",
																							"nodeType": "YulLiteral",
																							"src": "3917:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3904:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3904:2:5"
																					},
																					"nativeSrc": "3904:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3904:17:5"
																				},
																				"nativeSrc": "3901:43:5",
																				"nodeType": "YulIf",
																				"src": "3901:43:5"
																			},
																			{
																				"nativeSrc": "3957:25:5",
																				"nodeType": "YulAssignment",
																				"src": "3957:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3970:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "3970:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3980:1:5",
																							"nodeType": "YulLiteral",
																							"src": "3980:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3966:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3966:3:5"
																					},
																					"nativeSrc": "3966:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3966:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3957:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3957:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3995:5:5",
																				"nodeType": "YulLeave",
																				"src": "3995:5:5"
																			}
																		]
																	},
																	"nativeSrc": "3880:130:5",
																	"nodeType": "YulCase",
																	"src": "3880:130:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3885:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3885:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3799:4:5",
																"nodeType": "YulIdentifier",
																"src": "3799:4:5"
															},
															"nativeSrc": "3792:218:5",
															"nodeType": "YulSwitch",
															"src": "3792:218:5"
														},
														{
															"body": {
																"nativeSrc": "4108:70:5",
																"nodeType": "YulBlock",
																"src": "4108:70:5",
																"statements": [
																	{
																		"nativeSrc": "4122:28:5",
																		"nodeType": "YulAssignment",
																		"src": "4122:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4135:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "4135:4:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4141:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "4141:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4131:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "4131:3:5"
																			},
																			"nativeSrc": "4131:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4131:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4122:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4122:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4163:5:5",
																		"nodeType": "YulLeave",
																		"src": "4163:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4032:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "4032:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4038:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4038:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4029:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4029:2:5"
																				},
																				"nativeSrc": "4029:12:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4029:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4046:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "4046:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4056:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4056:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4043:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4043:2:5"
																				},
																				"nativeSrc": "4043:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4043:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4025:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4025:3:5"
																		},
																		"nativeSrc": "4025:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4025:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4069:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "4069:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4075:3:5",
																						"nodeType": "YulLiteral",
																						"src": "4075:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4066:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4066:2:5"
																				},
																				"nativeSrc": "4066:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4066:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4084:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "4084:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4094:2:5",
																						"nodeType": "YulLiteral",
																						"src": "4094:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4081:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4081:2:5"
																				},
																				"nativeSrc": "4081:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4081:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4062:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:5"
																		},
																		"nativeSrc": "4062:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4062:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4022:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4022:2:5"
																},
																"nativeSrc": "4022:77:5",
																"nodeType": "YulFunctionCall",
																"src": "4022:77:5"
															},
															"nativeSrc": "4019:159:5",
															"nodeType": "YulIf",
															"src": "4019:159:5"
														},
														{
															"nativeSrc": "4187:57:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4187:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4229:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4229:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4235:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "4235:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4210:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4210:18:5"
																},
																"nativeSrc": "4210:34:5",
																"nodeType": "YulFunctionCall",
																"src": "4210:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4191:7:5",
																	"nodeType": "YulTypedName",
																	"src": "4191:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "4200:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4289:22:5",
																"nodeType": "YulBlock",
																"src": "4289:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4291:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4291:16:5"
																			},
																			"nativeSrc": "4291:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4291:18:5"
																		},
																		"nativeSrc": "4291:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4291:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4259:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4259:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4276:1:5",
																						"nodeType": "YulLiteral",
																						"src": "4276:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4272:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4272:3:5"
																				},
																				"nativeSrc": "4272:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4272:6:5"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4280:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4280:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4268:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:5"
																		},
																		"nativeSrc": "4268:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4256:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4256:2:5"
																},
																"nativeSrc": "4256:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4256:32:5"
															},
															"nativeSrc": "4253:58:5",
															"nodeType": "YulIf",
															"src": "4253:58:5"
														},
														{
															"nativeSrc": "4320:29:5",
															"nodeType": "YulAssignment",
															"src": "4320:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4333:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4333:7:5"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4342:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4342:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4329:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4329:3:5"
																},
																"nativeSrc": "4329:20:5",
																"nodeType": "YulFunctionCall",
																"src": "4329:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4320:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4320:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3549:806:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3579:4:5",
														"nodeType": "YulTypedName",
														"src": "3579:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3585:8:5",
														"nodeType": "YulTypedName",
														"src": "3585:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3598:5:5",
														"nodeType": "YulTypedName",
														"src": "3598:5:5",
														"type": ""
													}
												],
												"src": "3549:806:5"
											},
											{
												"body": {
													"nativeSrc": "4428:72:5",
													"nodeType": "YulBlock",
													"src": "4428:72:5",
													"statements": [
														{
															"nativeSrc": "4438:56:5",
															"nodeType": "YulAssignment",
															"src": "4438:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4468:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "4468:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4478:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "4478:8:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4488:4:5",
																				"nodeType": "YulLiteral",
																				"src": "4488:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4474:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:5"
																		},
																		"nativeSrc": "4474:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4447:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "4447:20:5"
																},
																"nativeSrc": "4447:47:5",
																"nodeType": "YulFunctionCall",
																"src": "4447:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4438:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "4438:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4360:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4399:4:5",
														"nodeType": "YulTypedName",
														"src": "4399:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4405:8:5",
														"nodeType": "YulTypedName",
														"src": "4405:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4418:5:5",
														"nodeType": "YulTypedName",
														"src": "4418:5:5",
														"type": ""
													}
												],
												"src": "4360:140:5"
											},
											{
												"body": {
													"nativeSrc": "4557:116:5",
													"nodeType": "YulBlock",
													"src": "4557:116:5",
													"statements": [
														{
															"nativeSrc": "4567:20:5",
															"nodeType": "YulAssignment",
															"src": "4567:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4582:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4582:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4585:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4585:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4578:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4578:3:5"
																},
																"nativeSrc": "4578:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4578:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4567:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "4567:7:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4645:22:5",
																"nodeType": "YulBlock",
																"src": "4645:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4647:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "4647:16:5"
																			},
																			"nativeSrc": "4647:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4647:18:5"
																		},
																		"nativeSrc": "4647:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4647:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4616:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4616:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4609:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4609:6:5"
																				},
																				"nativeSrc": "4609:9:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4609:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4623:1:5",
																						"nodeType": "YulIdentifier",
																						"src": "4623:1:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4630:7:5",
																								"nodeType": "YulIdentifier",
																								"src": "4630:7:5"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4639:1:5",
																								"nodeType": "YulIdentifier",
																								"src": "4639:1:5"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4626:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "4626:3:5"
																						},
																						"nativeSrc": "4626:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4626:15:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4620:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "4620:2:5"
																				},
																				"nativeSrc": "4620:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4620:22:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4606:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4606:2:5"
																		},
																		"nativeSrc": "4606:37:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4606:37:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4599:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:5"
																},
																"nativeSrc": "4599:45:5",
																"nodeType": "YulFunctionCall",
																"src": "4599:45:5"
															},
															"nativeSrc": "4596:71:5",
															"nodeType": "YulIf",
															"src": "4596:71:5"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4505:168:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4536:1:5",
														"nodeType": "YulTypedName",
														"src": "4536:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4539:1:5",
														"nodeType": "YulTypedName",
														"src": "4539:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4545:7:5",
														"nodeType": "YulTypedName",
														"src": "4545:7:5",
														"type": ""
													}
												],
												"src": "4505:168:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b506040516200221a3803806200221a833981016040819052620000339162000178565b60405180604001604052806004815260200163159bda5960e21b815250604051806040016040528060048152602001631593d25160e21b815250601261271084805f6001600160a01b0316816001600160a01b031603620000a7576040516349e27cff60e01b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b03831690811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001620000fd868262000245565b5060026200010c858262000245565b5060ff831660808190526200012390600a62000420565b6200012f908362000430565b6003555050506001600160a01b039092165f90815260056020908152604080832069021e19e0c9bab24000009055600c9091529020805460ff19166001179055506200044a9050565b5f6020828403121562000189575f80fd5b81516001600160a01b0381168114620001a0575f80fd5b9392505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c90821680620001d057607f821691505b602082108103620001ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200024057805f5260205f20601f840160051c810160208510156200021c5750805b601f840160051c820191505b818110156200023d575f815560010162000228565b50505b505050565b81516001600160401b03811115620002615762000261620001a7565b6200027981620002728454620001bb565b84620001f5565b602080601f831160018114620002af575f8415620002975750858301515b5f19600386901b1c1916600185901b17855562000309565b5f85815260208120601f198616915b82811015620002df57888601518255948401946001909101908401620002be565b5085821015620002fd57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b808511156200036557815f190482111562000349576200034962000311565b808516156200035757918102915b93841c93908002906200032a565b509250929050565b5f826200037d575060016200041a565b816200038b57505f6200041a565b8160018114620003a45760028114620003af57620003cf565b60019150506200041a565b60ff841115620003c357620003c362000311565b50506001821b6200041a565b5060208310610133831016604e8410600b8410161715620003f4575081810a6200041a565b62000400838362000325565b805f190482111562000416576200041662000311565b0290505b92915050565b5f620001a060ff8416836200036d565b80820281158282048414176200041a576200041a62000311565b608051611db06200046a5f395f818161028c01526110890152611db05ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c806370a08231116100f3578063c87b56dd11610093578063e0df5b6f1161006e578063e0df5b6f14610401578063e985e9c514610414578063f28ca1dd14610441578063f2fde38b14610449575f80fd5b8063c87b56dd146103bc578063d547cfb7146103cf578063dd62ed3e146103d7575f80fd5b80639b19251a116100ce5780639b19251a14610361578063a22cb46514610383578063a9059cbb14610396578063b88d4fde146103a9575f80fd5b806370a08231146103285780638da5cb5b1461034757806395d89b4114610359575f80fd5b8063313ce5671161015e578063504334c211610139578063504334c2146102dc57806353d6fd59146102ef5780636352211e14610302578063664dfa0114610315575f80fd5b8063313ce5671461028757806342842e0e146102c05780634f02c420146102d3575f80fd5b806318160ddd1161019957806318160ddd1461024057806318d217c31461025757806323b872dd1461026c5780632b9689581461027f575f80fd5b806306fdde03146101bf578063081812fc146101dd578063095ea7b31461021d575b5f80fd5b6101c761045c565b6040516101d49190611624565b60405180910390f35b6102056101eb366004611656565b60076020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b61023061022b366004611683565b6104e8565b60405190151581526020016101d4565b61024960035481565b6040519081526020016101d4565b61026a610265366004611748565b6106b4565b005b61023061027a366004611782565b6106ed565b61026a610a8f565b6102ae7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b61026a6102ce366004611782565b610af3565b61024960045481565b61026a6102ea3660046117bb565b610bf6565b61026a6102fd36600461181b565b610c29565b610205610310366004611656565b610c7c565b61026a610323366004611656565b610cb6565b610249610336366004611854565b60056020525f908152604090205481565b5f54610205906001600160a01b031681565b6101c7610ce7565b61023061036f366004611854565b600c6020525f908152604090205460ff1681565b61026a61039136600461181b565b610cf4565b6102306103a4366004611683565b610d5f565b61026a6103b736600461186d565b610d6b565b6101c76103ca366004611656565b610e5f565b6101c7610f9a565b6102496103e5366004611900565b600660209081525f928352604080842090915290825290205481565b61026a61040f366004611748565b610fa7565b610230610422366004611900565b600860209081525f928352604080842090915290825290205460ff1681565b6101c7610fdc565b61026a610457366004611854565b610fe9565b6001805461046990611931565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611931565b80156104e05780601f106104b7576101008083540402835291602001916104e0565b820191905f5260205f20905b8154815290600101906020018083116104c357829003601f168201915b505050505081565b5f60045482111580156104fa57505f82115b1561060f575f828152600960205260409020546001600160a01b031633811480159061054957506001600160a01b0381165f90815260086020908152604080832033845290915290205460ff16155b15610566576040516282b42960e81b815260040160405180910390fd5b5f8381526007602090815260409182902080546001600160a01b0319166001600160a01b038881169182179092559251868152908416917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a382846001600160a01b0316826001600160a01b03167f797365dabb18fa726ccbccbe18c6f24c34e3b0653f2e99ea873bd7b84763dde660405160405180910390a4506106aa565b335f8181526006602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a36040518281526001600160a01b0384169033907f1f01303a1ce9329d9963e1937c201e23c5543a9e3536e9edead087aec7dc6d839060200160405180910390a35b5060015b92915050565b5f546001600160a01b031633146106dd576040516282b42960e81b815260040160405180910390fd5b600d6106e982826119ad565b5050565b5f60045482111580156106ff57505f82115b15610a18575f828152600960205260409020546001600160a01b0385811691161461073d57604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b03831661076457604051634e46966960e11b815260040160405180910390fd5b336001600160a01b038516148015906107a057506001600160a01b0384165f90815260086020908152604080832033845290915290205460ff16155b80156107c257505f828152600760205260409020546001600160a01b03163314155b156107df576040516282b42960e81b815260040160405180910390fd5b6107e7611083565b6001600160a01b0385165f908152600560205260408120805490919061080e908490611a81565b9091555061081c9050611083565b6001600160a01b038085165f81815260056020908152604080832080549096019095558682526009815284822080546001600160a01b031990811690941790556007815284822080549093169092559187168252600a9052908120805461088590600190611a81565b8154811061089557610895611a94565b905f5260205f2001549050828114610906576001600160a01b0385165f908152600a60209081526040808320868452600b9092529091205481548392919081106108e1576108e1611a94565b5f918252602080832090910192909255848152600b9091526040808220548383529120555b6001600160a01b0385165f908152600a6020526040902080548061092c5761092c611aa8565b5f828152602080822083015f199081018390559092019092556001600160a01b038616808352600a825260408320805460018181018355828652938520018790559252905461097b9190611a81565b5f848152600b602052604080822092909255905184916001600160a01b0380881692908916917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4836001600160a01b0316856001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487610a01611083565b60405190815260200160405180910390a350610a84565b6001600160a01b0384165f9081526006602090815260408083203384529091529020545f198114610a7157610a4d8382611a81565b6001600160a01b0386165f9081526006602090815260408083203384529091529020555b610a7c8585856110b4565b915050610a88565b5060015b9392505050565b5f546001600160a01b03163314610ab8576040516282b42960e81b815260040160405180910390fd5b5f80546001600160a01b031916815560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b600454811180610b01575080155b15610b1f57604051631bf4348160e31b815260040160405180910390fd5b610b2a8383836106ed565b506001600160a01b0382163b15801590610bd35750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401525f608484015290919084169063150b7a029060a4016020604051808303815f875af1158015610ba2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc69190611abc565b6001600160e01b03191614155b15610bf157604051633da6393160e01b815260040160405180910390fd5b505050565b5f546001600160a01b03163314610c1f576040516282b42960e81b815260040160405180910390fd5b6106e98282611259565b5f546001600160a01b03163314610c52576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03919091165f908152600c60205260409020805460ff1916911515919091179055565b5f818152600960205260409020546001600160a01b031680610cb15760405163c5723b5160e01b815260040160405180910390fd5b919050565b5f610cc15f83610d5f565b90508015156001036106e9578160035f828254610cde9190611a81565b90915550505050565b6002805461046990611931565b335f8181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b5f610a883384846110b4565b600454831180610d79575082155b15610d9757604051631bf4348160e31b815260040160405180910390fd5b610da28585856106ed565b506001600160a01b0384163b15801590610e3a5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610ded9033908a90899089908990600401611ae3565b6020604051808303815f875af1158015610e09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611abc565b6001600160e01b03191614155b15610e5857604051633da6393160e01b815260040160405180910390fd5b5050505050565b60605f600e8054610e6f90611931565b90501115610ea957600e610e8283611272565b604051602001610e93929190611ba4565b6040516020818303038152906040529050919050565b60605f83604051602001610ebf91815260200190565b6040516020818303038152906040528051906020012060f81c905060648160ff1611610f0d57600d604051602001610ef79190611bc8565b6040516020818303038152906040529150610f93565b60a08160ff1611610f2a57600d604051602001610ef79190611be9565b60d28160ff1611610f4757600d604051602001610ef79190611c0a565b60f08160ff1611610f6457600d604051602001610ef79190611c2b565b60ff8160ff1611610f9357600d604051602001610f819190611c4c565b60405160208183030381529060405291505b5092915050565b600e805461046990611931565b5f546001600160a01b03163314610fd0576040516282b42960e81b815260040160405180910390fd5b600e6106e982826119ad565b600d805461046990611931565b5f546001600160a01b03163314611012576040516282b42960e81b815260040160405180910390fd5b6001600160a01b038116611039576040516349e27cff60e01b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f6110af7f0000000000000000000000000000000000000000000000000000000000000000600a611d4d565b905090565b5f806110be611083565b6001600160a01b038087165f818152600560205260408082208054948a16835290822054928252939450919290918691906110f98386611a81565b90915550506001600160a01b038087165f90815260056020908152604080832080548a019055928a168252600c9052205460ff16611188576001600160a01b0387165f90815260056020526040812054611154908590611d5b565b61115e8585611d5b565b6111689190611a81565b90505f5b818110156111855761117d89611302565b60010161116c565b50505b6001600160a01b0386165f908152600c602052604090205460ff166111ff575f6111b28483611d5b565b6001600160a01b0388165f908152600560205260409020546111d5908690611d5b565b6111df9190611a81565b90505f5b818110156111fc576111f488611423565b6001016111e3565b50505b856001600160a01b0316876001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e0314878760405161124491815260200190565b60405180910390a35060019695505050505050565b600161126583826119ad565b506002610bf182826119ad565b60605f61127e8361152b565b60010190505f8167ffffffffffffffff81111561129d5761129d6116ab565b6040519080825280601f01601f1916602001820160405280156112c7576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112d157509392505050565b6001600160a01b03811661132957604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b0381165f908152600a60205260408120805461134e90600190611a81565b8154811061135e5761135e611a94565b905f5260205f2001549050600a5f836001600160a01b03166001600160a01b031681526020019081526020015f2080548061139b5761139b611aa8565b5f828152602080822083015f19908101839055909201909255828252600b815260408083208390556009825280832080546001600160a01b031990811690915560079092528083208054909216909155518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b03811661144a57604051634e46966960e11b815260040160405180910390fd5b60048054600101908190555f818152600960205260409020546001600160a01b03161561148a5760405163119b4fd360e11b815260040160405180910390fd5b5f81815260096020908152604080832080546001600160a01b0319166001600160a01b038716908117909155808452600a835290832080546001818101835582865293852001859055925290546114e19190611a81565b5f828152600b602052604080822092909255905182916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115695772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611595576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b357662386f26fc10000830492506010015b6305f5e10083106115cb576305f5e100830492506008015b61271083106115df57612710830492506004015b606483106115f1576064830492506002015b600a83106106ae5760010192915050565b5f5b8381101561161c578181015183820152602001611604565b50505f910152565b602081525f8251806020840152611642816040850160208701611602565b601f01601f19169190910160400192915050565b5f60208284031215611666575f80fd5b5035919050565b80356001600160a01b0381168114610cb1575f80fd5b5f8060408385031215611694575f80fd5b61169d8361166d565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126116ce575f80fd5b813567ffffffffffffffff808211156116e9576116e96116ab565b604051601f8301601f19908116603f01168101908282118183101715611711576117116116ab565b81604052838152866020858801011115611729575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f60208284031215611758575f80fd5b813567ffffffffffffffff81111561176e575f80fd5b61177a848285016116bf565b949350505050565b5f805f60608486031215611794575f80fd5b61179d8461166d565b92506117ab6020850161166d565b9150604084013590509250925092565b5f80604083850312156117cc575f80fd5b823567ffffffffffffffff808211156117e3575f80fd5b6117ef868387016116bf565b93506020850135915080821115611804575f80fd5b50611811858286016116bf565b9150509250929050565b5f806040838503121561182c575f80fd5b6118358361166d565b915060208301358015158114611849575f80fd5b809150509250929050565b5f60208284031215611864575f80fd5b610a888261166d565b5f805f805f60808688031215611881575f80fd5b61188a8661166d565b94506118986020870161166d565b935060408601359250606086013567ffffffffffffffff808211156118bb575f80fd5b818801915088601f8301126118ce575f80fd5b8135818111156118dc575f80fd5b8960208285010111156118ed575f80fd5b9699959850939650602001949392505050565b5f8060408385031215611911575f80fd5b61191a8361166d565b91506119286020840161166d565b90509250929050565b600181811c9082168061194557607f821691505b60208210810361196357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610bf157805f5260205f20601f840160051c8101602085101561198e5750805b601f840160051c820191505b81811015610e58575f815560010161199a565b815167ffffffffffffffff8111156119c7576119c76116ab565b6119db816119d58454611931565b84611969565b602080601f831160018114611a0e575f84156119f75750858301515b5f19600386901b1c1916600185901b178555611a65565b5f85815260208120601f198616915b82811015611a3c57888601518255948401946001909101908401611a1d565b5085821015611a5957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106ae576106ae611a6d565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215611acc575f80fd5b81516001600160e01b031981168114610a88575f80fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290525f828460a08401375f60a0848401015260a0601f19601f85011683010190509695505050505050565b5f8154611b4181611931565b60018281168015611b595760018114611b6e57611b9a565b60ff1984168752821515830287019450611b9a565b855f526020805f205f5b85811015611b915781548a820152908401908201611b78565b50505082870194505b5050505092915050565b5f611baf8285611b35565b8351611bbf818360208801611602565b01949350505050565b5f611bd38284611b35565b6518973539b7b760d11b81526006019392505050565b5f611bf48284611b35565b6519173539b7b760d11b81526006019392505050565b5f611c158284611b35565b6519973539b7b760d11b81526006019392505050565b5f611c368284611b35565b651a173539b7b760d11b81526006019392505050565b5f611c578284611b35565b651a973539b7b760d11b81526006019392505050565b600181815b80851115611ca757815f1904821115611c8d57611c8d611a6d565b80851615611c9a57918102915b93841c9390800290611c72565b509250929050565b5f82611cbd575060016106ae565b81611cc957505f6106ae565b8160018114611cdf5760028114611ce957611d05565b60019150506106ae565b60ff841115611cfa57611cfa611a6d565b50506001821b6106ae565b5060208310610133831016604e8410600b8410161715611d28575081810a6106ae565b611d328383611c6d565b805f1904821115611d4557611d45611a6d565b029392505050565b5f610a8860ff841683611caf565b5f82611d7557634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122004590b12c2c1197e74bd5954694bfe46a8ec288c2a1d66e9f9afada6930b3ac964736f6c63430008160033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x221A CODESIZE SUB DUP1 PUSH3 0x221A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x159BDA59 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1593D251 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH1 0x12 PUSH2 0x2710 DUP5 DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0xA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH3 0xFD DUP7 DUP3 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0x2 PUSH3 0x10C DUP6 DUP3 PUSH3 0x245 JUMP JUMPDEST POP PUSH1 0xFF DUP4 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH3 0x123 SWAP1 PUSH1 0xA PUSH3 0x420 JUMP JUMPDEST PUSH3 0x12F SWAP1 DUP4 PUSH3 0x430 JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH10 0x21E19E0C9BAB2400000 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH3 0x44A SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1D0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x240 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x21C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x23D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x228 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x261 PUSH3 0x1A7 JUMP JUMPDEST PUSH3 0x279 DUP2 PUSH3 0x272 DUP5 SLOAD PUSH3 0x1BB JUMP JUMPDEST DUP5 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2AF JUMPI PUSH0 DUP5 ISZERO PUSH3 0x297 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x309 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2DF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2BE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2FD JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x365 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x349 JUMPI PUSH3 0x349 PUSH3 0x311 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x357 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x32A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x37D JUMPI POP PUSH1 0x1 PUSH3 0x41A JUMP JUMPDEST DUP2 PUSH3 0x38B JUMPI POP PUSH0 PUSH3 0x41A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x3A4 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x3AF JUMPI PUSH3 0x3CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x41A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x3C3 JUMPI PUSH3 0x3C3 PUSH3 0x311 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x41A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x3F4 JUMPI POP DUP2 DUP2 EXP PUSH3 0x41A JUMP JUMPDEST PUSH3 0x400 DUP4 DUP4 PUSH3 0x325 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x416 JUMPI PUSH3 0x416 PUSH3 0x311 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x1A0 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x36D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x41A JUMPI PUSH3 0x41A PUSH3 0x311 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1DB0 PUSH3 0x46A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x28C ADD MSTORE PUSH2 0x1089 ADD MSTORE PUSH2 0x1DB0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF28CA1DD EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x504334C2 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x504334C2 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x664DFA01 EQ PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x18D217C3 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2B968958 EQ PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x26A PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x2AE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x205 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x26A PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x249 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x26A PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1931 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0x60F JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x549 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP5 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x797365DABB18FA726CCBCCBE18C6F24C34E3B0653F2E99EA873BD7B84763DDE6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x6AA JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x1F01303A1CE9329D9963E1937C201E23C5543A9E3536E9EDEAD087AEC7DC6D83 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0xA18 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7C2 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E7 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x80E SWAP1 DUP5 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x81C SWAP1 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 ADD SWAP1 SWAP6 SSTORE DUP7 DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0x7 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SWAP2 DUP8 AND DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x885 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0x1A94 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP3 DUP2 EQ PUSH2 0x906 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0x1A94 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 DUP4 MSTORE SWAP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x1AA8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP8 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 SWAP1 DUP10 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 PUSH2 0xA01 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xA71 JUMPI PUSH2 0xA4D DUP4 DUP3 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xA7C DUP6 DUP6 DUP6 PUSH2 0x10B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA88 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT DUP1 PUSH2 0xB01 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF43481 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2A DUP4 DUP4 DUP4 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBD3 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC5723B51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC1 PUSH0 DUP4 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x6E9 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 CALLER DUP5 DUP5 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 GT DUP1 PUSH2 0xD79 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF43481 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA2 DUP6 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE3A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xDED SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2D SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xE DUP1 SLOAD PUSH2 0xE6F SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0xE PUSH2 0xE82 DUP4 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE93 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEBF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0xFF AND GT PUSH2 0xF0D JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH2 0xF93 JUMP JUMPDEST PUSH1 0xA0 DUP2 PUSH1 0xFF AND GT PUSH2 0xF2A JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0xD2 DUP2 PUSH1 0xFF AND GT PUSH2 0xF47 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0xF0 DUP2 PUSH1 0xFF AND GT PUSH2 0xF64 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND GT PUSH2 0xF93 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AF PUSH32 0x0 PUSH1 0xA PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10BE PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP11 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SLOAD SWAP3 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x10F9 DUP4 DUP7 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP3 DUP11 AND DUP3 MSTORE PUSH1 0xC SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1188 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1154 SWAP1 DUP6 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x115E DUP6 DUP6 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x117D DUP10 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x116C JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11FF JUMPI PUSH0 PUSH2 0x11B2 DUP5 DUP4 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 DUP7 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11F4 DUP9 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11E3 JUMP JUMPDEST POP POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1265 DUP4 DUP3 PUSH2 0x19AD JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0xBF1 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x127E DUP4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x12D1 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x134E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1A94 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0xA PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x1AA8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP3 DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP6 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1569 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1595 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15B3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x15CB JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x15DF JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x15F1 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6AE JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1604 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1642 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169D DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E9 PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1711 JUMPI PUSH2 0x1711 PUSH2 0x16AB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1729 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177A DUP5 DUP3 DUP6 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1794 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x179D DUP5 PUSH2 0x166D JUMP JUMPDEST SWAP3 POP PUSH2 0x17AB PUSH1 0x20 DUP6 ADD PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17EF DUP7 DUP4 DUP8 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1804 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1835 DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1849 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP3 PUSH2 0x166D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x188A DUP7 PUSH2 0x166D JUMP JUMPDEST SWAP5 POP PUSH2 0x1898 PUSH1 0x20 DUP8 ADD PUSH2 0x166D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18ED JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x191A DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 PUSH1 0x20 DUP5 ADD PUSH2 0x166D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1945 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1963 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBF1 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x198E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x199A JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C7 JUMPI PUSH2 0x19C7 PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x19D5 DUP5 SLOAD PUSH2 0x1931 JUMP JUMPDEST DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A0E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x19F7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A65 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A3C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A1D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1A59 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x6AE PUSH2 0x1A6D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1B41 DUP2 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1B59 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B6E JUMPI PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1B9A JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B91 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1B78 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAF DUP3 DUP6 PUSH2 0x1B35 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1BBF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1602 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD3 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x18973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF4 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x19173539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C15 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x19973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x1A173539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C57 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x1A973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1CA7 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C8D JUMPI PUSH2 0x1C8D PUSH2 0x1A6D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1C9A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1C72 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CBD JUMPI POP PUSH1 0x1 PUSH2 0x6AE JUMP JUMPDEST DUP2 PUSH2 0x1CC9 JUMPI POP PUSH0 PUSH2 0x6AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1CDF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1CE9 JUMPI PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CFA PUSH2 0x1A6D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D28 JUMPI POP DUP2 DUP2 EXP PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x1D32 DUP4 DUP4 PUSH2 0x1C6D JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D45 PUSH2 0x1A6D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1CAF JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MSIZE SIGNEXTEND SLT 0xC2 0xC1 NOT PUSH31 0x74BD5954694BFE46A8EC288C2A1D66E9F9AFADA6930B3AC964736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "139:1604:4:-:0;;;229:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4181:325:3;;;;;;;;;;;;;-1:-1:-1;;;4181:325:3;;;;;;;;;;;;;;;;-1:-1:-1;;;4181:325:3;;;280:2:4;284:5;291:6;4352::3;426:1;-1:-1:-1;;;;;408:20:3;:6;-1:-1:-1;;;;;408:20:3;;404:47;;437:14;;-1:-1:-1;;;437:14:3;;;;;;;;;;;404:47;462:5;:14;;-1:-1:-1;;;;;;462:14:3;-1:-1:-1;;;;;462:14:3;;;;;;;492:40;;462:14;;:5;492:40;;462:5;;492:40;-1:-1:-1;4370:4:3::1;:12;4377:5:::0;4370:4;:12:::1;:::i;:::-;-1:-1:-1::0;4392:6:3::1;:16;4401:7:::0;4392:6;:16:::1;:::i;:::-;-1:-1:-1::0;4418:20:3::1;::::0;::::1;;::::0;;;4484:14:::1;::::0;:2:::1;:14;:::i;:::-;4462:37;::::0;:18;:37:::1;:::i;:::-;4448:11;:51:::0;-1:-1:-1;;;;;;;;309:17:4;;::::1;;::::0;;;:9:::1;:17;::::0;;;;;;;329:16:::1;309:36:::0;;355:9:::1;:17:::0;;;;;:24;;-1:-1:-1;;355:24:4::1;375:4;355:24;::::0;;-1:-1:-1;139:1604:4;;-1:-1:-1;139:1604:4;14:290:5;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:518::-;1054:2;1049:3;1046:11;1043:421;;;1090:5;1087:1;1080:16;1134:4;1131:1;1121:18;1204:2;1192:10;1188:19;1185:1;1181:27;1175:4;1171:38;1240:4;1228:10;1225:20;1222:47;;;-1:-1:-1;1263:4:5;1222:47;1318:2;1313:3;1309:12;1306:1;1302:20;1296:4;1292:31;1282:41;;1373:81;1391:2;1384:5;1381:13;1373:81;;;1450:1;1436:16;;1417:1;1406:13;1373:81;;;1377:3;;1043:421;952:518;;;:::o;1646:1345::-;1766:10;;-1:-1:-1;;;;;1788:30:5;;1785:56;;;1821:18;;:::i;:::-;1850:97;1940:6;1900:38;1932:4;1926:11;1900:38;:::i;:::-;1894:4;1850:97;:::i;:::-;2002:4;;2059:2;2048:14;;2076:1;2071:663;;;;2778:1;2795:6;2792:89;;;-1:-1:-1;2847:19:5;;;2841:26;2792:89;-1:-1:-1;;1603:1:5;1599:11;;;1595:24;1591:29;1581:40;1627:1;1623:11;;;1578:57;2894:81;;2041:944;;2071:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2107:20:5;;;2225:236;2239:7;2236:1;2233:14;2225:236;;;2328:19;;;2322:26;2307:42;;2420:27;;;;2388:1;2376:14;;;;2255:19;;2225:236;;;2229:3;2489:6;2480:7;2477:19;2474:201;;;2550:19;;;2544:26;-1:-1:-1;;2633:1:5;2629:14;;;2645:3;2625:24;2621:37;2617:42;2602:58;2587:74;;2474:201;;;2721:1;2712:6;2709:1;2705:14;2701:22;2695:4;2688:36;2041:944;;;;;1646:1345;;:::o;2996:127::-;3057:10;3052:3;3048:20;3045:1;3038:31;3088:4;3085:1;3078:15;3112:4;3109:1;3102:15;3128:416;3217:1;3254:5;3217:1;3268:270;3289:7;3279:8;3276:21;3268:270;;;3348:4;3344:1;3340:6;3336:17;3330:4;3327:27;3324:53;;;3357:18;;:::i;:::-;3407:7;3397:8;3393:22;3390:55;;;3427:16;;;;3390:55;3506:22;;;;3466:15;;;;3268:270;;;3272:3;3128:416;;;;;:::o;3549:806::-;3598:5;3628:8;3618:80;;-1:-1:-1;3669:1:5;3683:5;;3618:80;3717:4;3707:76;;-1:-1:-1;3754:1:5;3768:5;;3707:76;3799:4;3817:1;3812:59;;;;3885:1;3880:130;;;;3792:218;;3812:59;3842:1;3833:10;;3856:5;;;3880:130;3917:3;3907:8;3904:17;3901:43;;;3924:18;;:::i;:::-;-1:-1:-1;;3980:1:5;3966:16;;3995:5;;3792:218;;4094:2;4084:8;4081:16;4075:3;4069:4;4066:13;4062:36;4056:2;4046:8;4043:16;4038:2;4032:4;4029:12;4025:35;4022:77;4019:159;;;-1:-1:-1;4131:19:5;;;4163:5;;4019:159;4210:34;4235:8;4229:4;4210:34;:::i;:::-;4280:6;4276:1;4272:6;4268:19;4259:7;4256:32;4253:58;;;4291:18;;:::i;:::-;4329:20;;-1:-1:-1;3549:806:5;;;;;:::o;4360:140::-;4418:5;4447:47;4488:4;4478:8;4474:19;4468:4;4447:47;:::i;4505:168::-;4578:9;;;4609;;4626:15;;;4620:22;;4606:37;4596:71;;4647:18;;:::i;4505:168::-;139:1604:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_2456": {
									"entryPoint": 4866,
									"id": 2456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getUnit_2325": {
									"entryPoint": 4227,
									"id": 2325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_2396": {
									"entryPoint": 5155,
									"id": 2396,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setNameSymbol_2472": {
									"entryPoint": 4697,
									"id": 2472,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_2315": {
									"entryPoint": 4276,
									"id": 2315,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowance_1627": {
									"entryPoint": null,
									"id": 1627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1836": {
									"entryPoint": 1256,
									"id": 1836,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@baseTokenURI_2483": {
									"entryPoint": 3994,
									"id": 2483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dataURI_2481": {
									"entryPoint": 4060,
									"id": 2481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1609": {
									"entryPoint": null,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1632": {
									"entryPoint": null,
									"id": 1632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_1639": {
									"entryPoint": null,
									"id": 1639,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_1128": {
									"entryPoint": 5419,
									"id": 1128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@minted_1615": {
									"entryPoint": null,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_1603": {
									"entryPoint": 1116,
									"id": 1603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_1741": {
									"entryPoint": 3196,
									"id": 1741,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1427": {
									"entryPoint": null,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeOwnership_1517": {
									"entryPoint": 2703,
									"id": 1517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2136": {
									"entryPoint": 2803,
									"id": 2136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2192": {
									"entryPoint": 3435,
									"id": 2192,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_1861": {
									"entryPoint": 3316,
									"id": 1861,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDataURI_2549": {
									"entryPoint": 1716,
									"id": 2549,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNameSymbol_2576": {
									"entryPoint": 3062,
									"id": 2576,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenURI_2561": {
									"entryPoint": 4007,
									"id": 2561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWhitelist_1715": {
									"entryPoint": 3113,
									"id": 1715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_1606": {
									"entryPoint": 3303,
									"id": 1606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_67": {
									"entryPoint": 4722,
									"id": 67,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2695": {
									"entryPoint": 3679,
									"id": 2695,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1612": {
									"entryPoint": null,
									"id": 1612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_2064": {
									"entryPoint": 1773,
									"id": 2064,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1495": {
									"entryPoint": 4073,
									"id": 1495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2082": {
									"entryPoint": 3423,
									"id": 2082,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@whitelist_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@yeet_2537": {
									"entryPoint": 3254,
									"id": 2537,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_storage": {
									"entryPoint": 6965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_29147069a2d0d7be183503cb9cdcc9c1230470bb5e311286e796d07c1a047f6f__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_2c4eda4dfa144a2959617abf213b5014ed152a3f3c4521d49251b95896013803__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_4a775ad1648cf6d79df915218def47122b33dabdc3d5ddc487404303cca0dce7__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_4d10d82a4c5ff6a5ff8664b03b6e2674a8d81db062548496b7bdf37c6efa6356__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_stringliteral_6eea9a6de4c3985cf54063d4714fcf07fe5ed5060a46a71d2f0602caeb80fc5b__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6883,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15186:5",
										"nodeType": "YulBlock",
										"src": "0:15186:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "80:184:5",
													"nodeType": "YulBlock",
													"src": "80:184:5",
													"statements": [
														{
															"nativeSrc": "90:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "99:1:5",
																"nodeType": "YulLiteral",
																"src": "99:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "94:1:5",
																	"nodeType": "YulTypedName",
																	"src": "94:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "159:63:5",
																"nodeType": "YulBlock",
																"src": "159:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "184:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "189:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "180:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:5"
																					},
																					"nativeSrc": "180:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "203:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "208:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "199:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:5"
																							},
																							"nativeSrc": "199:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "193:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:5"
																					},
																					"nativeSrc": "193:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "173:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:5"
																			},
																			"nativeSrc": "173:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:5"
																		},
																		"nativeSrc": "173:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "120:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "123:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "117:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:5"
																},
																"nativeSrc": "117:13:5",
																"nodeType": "YulFunctionCall",
																"src": "117:13:5"
															},
															"nativeSrc": "109:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "131:19:5",
																"nodeType": "YulBlock",
																"src": "131:19:5",
																"statements": [
																	{
																		"nativeSrc": "133:15:5",
																		"nodeType": "YulAssignment",
																		"src": "133:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "142:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "145:2:5",
																					"nodeType": "YulLiteral",
																					"src": "145:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "138:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:5"
																			},
																			"nativeSrc": "138:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "133:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "113:3:5",
																"nodeType": "YulBlock",
																"src": "113:3:5",
																"statements": []
															},
															"src": "109:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "242:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "247:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "238:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:5"
																		},
																		"nativeSrc": "238:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:5",
																		"nodeType": "YulLiteral",
																		"src": "256:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "231:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:5"
																},
																"nativeSrc": "231:27:5",
																"nodeType": "YulFunctionCall",
																"src": "231:27:5"
															},
															"nativeSrc": "231:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "231:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "14:250:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "58:3:5",
														"nodeType": "YulTypedName",
														"src": "58:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "63:3:5",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "68:6:5",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													}
												],
												"src": "14:250:5"
											},
											{
												"body": {
													"nativeSrc": "390:275:5",
													"nodeType": "YulBlock",
													"src": "390:275:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "407:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "418:2:5",
																		"nodeType": "YulLiteral",
																		"src": "418:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "400:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:5"
																},
																"nativeSrc": "400:21:5",
																"nodeType": "YulFunctionCall",
																"src": "400:21:5"
															},
															"nativeSrc": "400:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "400:21:5"
														},
														{
															"nativeSrc": "430:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "450:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "444:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:5"
																},
																"nativeSrc": "444:13:5",
																"nodeType": "YulFunctionCall",
																"src": "444:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "434:6:5",
																	"nodeType": "YulTypedName",
																	"src": "434:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "477:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "488:2:5",
																				"nodeType": "YulLiteral",
																				"src": "488:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "473:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nativeSrc": "473:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "493:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "466:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:5"
																},
																"nativeSrc": "466:34:5",
																"nodeType": "YulFunctionCall",
																"src": "466:34:5"
															},
															"nativeSrc": "466:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "466:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "548:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "556:2:5",
																				"nodeType": "YulLiteral",
																				"src": "556:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "544:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:5"
																		},
																		"nativeSrc": "544:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "565:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "576:2:5",
																				"nodeType": "YulLiteral",
																				"src": "576:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "561:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:5"
																		},
																		"nativeSrc": "561:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "581:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "509:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:5"
																},
																"nativeSrc": "509:79:5",
																"nodeType": "YulFunctionCall",
																"src": "509:79:5"
															},
															"nativeSrc": "509:79:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:79:5"
														},
														{
															"nativeSrc": "597:62:5",
															"nodeType": "YulAssignment",
															"src": "597:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "613:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "632:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "640:2:5",
																								"nodeType": "YulLiteral",
																								"src": "640:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "628:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:5"
																						},
																						"nativeSrc": "628:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "649:2:5",
																								"nodeType": "YulLiteral",
																								"src": "649:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "645:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "645:3:5"
																						},
																						"nativeSrc": "645:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "645:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "624:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:5"
																				},
																				"nativeSrc": "624:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "624:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "609:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:5"
																		},
																		"nativeSrc": "609:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "609:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "656:2:5",
																		"nodeType": "YulLiteral",
																		"src": "656:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "605:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:5"
																},
																"nativeSrc": "605:54:5",
																"nodeType": "YulFunctionCall",
																"src": "605:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "597:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "269:396:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "359:9:5",
														"nodeType": "YulTypedName",
														"src": "359:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "370:6:5",
														"nodeType": "YulTypedName",
														"src": "370:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "381:4:5",
														"nodeType": "YulTypedName",
														"src": "381:4:5",
														"type": ""
													}
												],
												"src": "269:396:5"
											},
											{
												"body": {
													"nativeSrc": "740:110:5",
													"nodeType": "YulBlock",
													"src": "740:110:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "786:16:5",
																"nodeType": "YulBlock",
																"src": "786:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "795:1:5",
																					"nodeType": "YulLiteral",
																					"src": "795:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "798:1:5",
																					"nodeType": "YulLiteral",
																					"src": "798:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "788:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "788:6:5"
																			},
																			"nativeSrc": "788:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "788:12:5"
																		},
																		"nativeSrc": "788:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "788:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "761:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "761:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "770:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "770:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "757:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "757:3:5"
																		},
																		"nativeSrc": "757:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "757:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "782:2:5",
																		"nodeType": "YulLiteral",
																		"src": "782:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "753:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "753:3:5"
																},
																"nativeSrc": "753:32:5",
																"nodeType": "YulFunctionCall",
																"src": "753:32:5"
															},
															"nativeSrc": "750:52:5",
															"nodeType": "YulIf",
															"src": "750:52:5"
														},
														{
															"nativeSrc": "811:33:5",
															"nodeType": "YulAssignment",
															"src": "811:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "834:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "834:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "821:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "821:12:5"
																},
																"nativeSrc": "821:23:5",
																"nodeType": "YulFunctionCall",
																"src": "821:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "811:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "811:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "670:180:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "706:9:5",
														"nodeType": "YulTypedName",
														"src": "706:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "717:7:5",
														"nodeType": "YulTypedName",
														"src": "717:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "729:6:5",
														"nodeType": "YulTypedName",
														"src": "729:6:5",
														"type": ""
													}
												],
												"src": "670:180:5"
											},
											{
												"body": {
													"nativeSrc": "956:102:5",
													"nodeType": "YulBlock",
													"src": "956:102:5",
													"statements": [
														{
															"nativeSrc": "966:26:5",
															"nodeType": "YulAssignment",
															"src": "966:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "978:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "978:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "989:2:5",
																		"nodeType": "YulLiteral",
																		"src": "989:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:5"
																},
																"nativeSrc": "974:18:5",
																"nodeType": "YulFunctionCall",
																"src": "974:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "966:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "966:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1008:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1023:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1039:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1039:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1044:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1044:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1035:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1035:3:5"
																						},
																						"nativeSrc": "1035:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1035:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1048:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1048:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1031:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:5"
																				},
																				"nativeSrc": "1031:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1031:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1019:3:5"
																		},
																		"nativeSrc": "1019:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1019:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1001:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:5"
																},
																"nativeSrc": "1001:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1001:51:5"
															},
															"nativeSrc": "1001:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1001:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "855:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "925:9:5",
														"nodeType": "YulTypedName",
														"src": "925:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "936:6:5",
														"nodeType": "YulTypedName",
														"src": "936:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "947:4:5",
														"nodeType": "YulTypedName",
														"src": "947:4:5",
														"type": ""
													}
												],
												"src": "855:203:5"
											},
											{
												"body": {
													"nativeSrc": "1112:124:5",
													"nodeType": "YulBlock",
													"src": "1112:124:5",
													"statements": [
														{
															"nativeSrc": "1122:29:5",
															"nodeType": "YulAssignment",
															"src": "1122:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1131:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1131:12:5"
																},
																"nativeSrc": "1131:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1131:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1122:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1122:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1214:16:5",
																"nodeType": "YulBlock",
																"src": "1214:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1223:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1226:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1216:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1216:6:5"
																			},
																			"nativeSrc": "1216:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1216:12:5"
																		},
																		"nativeSrc": "1216:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1173:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1173:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1184:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1184:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1199:3:5",
																										"nodeType": "YulLiteral",
																										"src": "1199:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1204:1:5",
																										"nodeType": "YulLiteral",
																										"src": "1204:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1195:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "1195:3:5"
																								},
																								"nativeSrc": "1195:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "1195:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1208:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1208:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1191:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1191:3:5"
																						},
																						"nativeSrc": "1191:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1191:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1180:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1180:3:5"
																				},
																				"nativeSrc": "1180:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1180:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1170:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1170:2:5"
																		},
																		"nativeSrc": "1170:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1170:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1163:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1163:6:5"
																},
																"nativeSrc": "1163:50:5",
																"nodeType": "YulFunctionCall",
																"src": "1163:50:5"
															},
															"nativeSrc": "1160:70:5",
															"nodeType": "YulIf",
															"src": "1160:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1063:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1091:6:5",
														"nodeType": "YulTypedName",
														"src": "1091:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1102:5:5",
														"nodeType": "YulTypedName",
														"src": "1102:5:5",
														"type": ""
													}
												],
												"src": "1063:173:5"
											},
											{
												"body": {
													"nativeSrc": "1328:167:5",
													"nodeType": "YulBlock",
													"src": "1328:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1374:16:5",
																"nodeType": "YulBlock",
																"src": "1374:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1383:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1383:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1386:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1386:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1376:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1376:6:5"
																			},
																			"nativeSrc": "1376:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1376:12:5"
																		},
																		"nativeSrc": "1376:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1376:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1349:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1349:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1358:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1345:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:5"
																		},
																		"nativeSrc": "1345:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1370:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1341:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:5"
																},
																"nativeSrc": "1341:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1341:32:5"
															},
															"nativeSrc": "1338:52:5",
															"nodeType": "YulIf",
															"src": "1338:52:5"
														},
														{
															"nativeSrc": "1399:39:5",
															"nodeType": "YulAssignment",
															"src": "1399:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1428:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1428:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1409:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1409:18:5"
																},
																"nativeSrc": "1409:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1409:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1399:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:5"
																}
															]
														},
														{
															"nativeSrc": "1447:42:5",
															"nodeType": "YulAssignment",
															"src": "1447:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1474:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1474:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1485:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1485:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1470:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1470:3:5"
																		},
																		"nativeSrc": "1470:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1470:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1457:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1457:12:5"
																},
																"nativeSrc": "1457:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1457:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1447:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1241:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1286:9:5",
														"nodeType": "YulTypedName",
														"src": "1286:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1297:7:5",
														"nodeType": "YulTypedName",
														"src": "1297:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1309:6:5",
														"nodeType": "YulTypedName",
														"src": "1309:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1317:6:5",
														"nodeType": "YulTypedName",
														"src": "1317:6:5",
														"type": ""
													}
												],
												"src": "1241:254:5"
											},
											{
												"body": {
													"nativeSrc": "1595:92:5",
													"nodeType": "YulBlock",
													"src": "1595:92:5",
													"statements": [
														{
															"nativeSrc": "1605:26:5",
															"nodeType": "YulAssignment",
															"src": "1605:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1617:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1628:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1628:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1613:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1613:3:5"
																},
																"nativeSrc": "1613:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1613:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1605:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1605:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1647:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1647:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1672:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1665:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1665:6:5"
																				},
																				"nativeSrc": "1665:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1665:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1658:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1658:6:5"
																		},
																		"nativeSrc": "1658:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1658:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1640:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:5"
																},
																"nativeSrc": "1640:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1640:41:5"
															},
															"nativeSrc": "1640:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1640:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1500:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1564:9:5",
														"nodeType": "YulTypedName",
														"src": "1564:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1575:6:5",
														"nodeType": "YulTypedName",
														"src": "1575:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1586:4:5",
														"nodeType": "YulTypedName",
														"src": "1586:4:5",
														"type": ""
													}
												],
												"src": "1500:187:5"
											},
											{
												"body": {
													"nativeSrc": "1793:76:5",
													"nodeType": "YulBlock",
													"src": "1793:76:5",
													"statements": [
														{
															"nativeSrc": "1803:26:5",
															"nodeType": "YulAssignment",
															"src": "1803:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1815:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1815:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1826:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1826:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1811:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:5"
																},
																"nativeSrc": "1811:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1811:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1803:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1803:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1845:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1856:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1856:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1838:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:5"
																},
																"nativeSrc": "1838:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1838:25:5"
															},
															"nativeSrc": "1838:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1838:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1692:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1762:9:5",
														"nodeType": "YulTypedName",
														"src": "1762:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1773:6:5",
														"nodeType": "YulTypedName",
														"src": "1773:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1784:4:5",
														"nodeType": "YulTypedName",
														"src": "1784:4:5",
														"type": ""
													}
												],
												"src": "1692:177:5"
											},
											{
												"body": {
													"nativeSrc": "1906:95:5",
													"nodeType": "YulBlock",
													"src": "1906:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1923:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1930:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1930:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1935:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1935:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1926:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1926:3:5"
																		},
																		"nativeSrc": "1926:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1926:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1916:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:5"
																},
																"nativeSrc": "1916:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1916:31:5"
															},
															"nativeSrc": "1916:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1916:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1966:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1956:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:5"
																},
																"nativeSrc": "1956:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1956:15:5"
															},
															"nativeSrc": "1956:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1956:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:5"
																},
																"nativeSrc": "1980:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1980:15:5"
															},
															"nativeSrc": "1980:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1874:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1874:127:5"
											},
											{
												"body": {
													"nativeSrc": "2059:666:5",
													"nodeType": "YulBlock",
													"src": "2059:666:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2108:16:5",
																"nodeType": "YulBlock",
																"src": "2108:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2117:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2117:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2120:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2120:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2110:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:5"
																			},
																			"nativeSrc": "2110:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2110:12:5"
																		},
																		"nativeSrc": "2110:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2110:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2087:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2087:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2095:4:5",
																						"nodeType": "YulLiteral",
																						"src": "2095:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2083:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2083:3:5"
																				},
																				"nativeSrc": "2083:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2083:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2102:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2102:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2079:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2079:3:5"
																		},
																		"nativeSrc": "2079:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2079:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2072:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:5"
																},
																"nativeSrc": "2072:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2072:35:5"
															},
															"nativeSrc": "2069:55:5",
															"nodeType": "YulIf",
															"src": "2069:55:5"
														},
														{
															"nativeSrc": "2133:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2133:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2156:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2156:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2143:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2143:12:5"
																},
																"nativeSrc": "2143:20:5",
																"nodeType": "YulFunctionCall",
																"src": "2143:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2137:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2137:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2172:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2172:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2182:18:5",
																"nodeType": "YulLiteral",
																"src": "2182:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2176:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2176:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2223:22:5",
																"nodeType": "YulBlock",
																"src": "2223:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2225:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2225:16:5"
																			},
																			"nativeSrc": "2225:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2225:18:5"
																		},
																		"nativeSrc": "2225:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2225:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2215:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2215:2:5"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "2219:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2219:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2212:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2212:2:5"
																},
																"nativeSrc": "2212:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2212:10:5"
															},
															"nativeSrc": "2209:36:5",
															"nodeType": "YulIf",
															"src": "2209:36:5"
														},
														{
															"nativeSrc": "2254:17:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2254:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2268:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2268:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "2264:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2264:3:5"
																},
																"nativeSrc": "2264:7:5",
																"nodeType": "YulFunctionCall",
																"src": "2264:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2258:2:5",
																	"nodeType": "YulTypedName",
																	"src": "2258:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2280:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2280:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2300:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2294:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2294:5:5"
																},
																"nativeSrc": "2294:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2294:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2284:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2284:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2312:71:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2312:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2334:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2334:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "2358:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "2358:2:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2362:4:5",
																										"nodeType": "YulLiteral",
																										"src": "2362:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2354:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2354:3:5"
																								},
																								"nativeSrc": "2354:13:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2354:13:5"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "2369:2:5",
																								"nodeType": "YulIdentifier",
																								"src": "2369:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2350:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2350:3:5"
																						},
																						"nativeSrc": "2350:22:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2350:22:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2374:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2374:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2346:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2346:3:5"
																				},
																				"nativeSrc": "2346:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2346:31:5"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "2379:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2379:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2342:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2342:3:5"
																		},
																		"nativeSrc": "2342:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2330:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2330:3:5"
																},
																"nativeSrc": "2330:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2330:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2316:10:5",
																	"nodeType": "YulTypedName",
																	"src": "2316:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2442:22:5",
																"nodeType": "YulBlock",
																"src": "2442:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2444:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2444:16:5"
																			},
																			"nativeSrc": "2444:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2444:18:5"
																		},
																		"nativeSrc": "2444:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2444:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2401:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2401:10:5"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2413:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2398:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2398:2:5"
																		},
																		"nativeSrc": "2398:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2421:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "2421:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2433:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2433:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2418:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2418:2:5"
																		},
																		"nativeSrc": "2418:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2395:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2395:2:5"
																},
																"nativeSrc": "2395:46:5",
																"nodeType": "YulFunctionCall",
																"src": "2395:46:5"
															},
															"nativeSrc": "2392:72:5",
															"nodeType": "YulIf",
															"src": "2392:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2480:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2480:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2484:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "2484:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2473:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2473:6:5"
																},
																"nativeSrc": "2473:22:5",
																"nodeType": "YulFunctionCall",
																"src": "2473:22:5"
															},
															"nativeSrc": "2473:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "2473:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2511:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2511:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2519:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2519:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2504:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2504:6:5"
																},
																"nativeSrc": "2504:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2504:18:5"
															},
															"nativeSrc": "2504:18:5",
															"nodeType": "YulExpressionStatement",
															"src": "2504:18:5"
														},
														{
															"body": {
																"nativeSrc": "2570:16:5",
																"nodeType": "YulBlock",
																"src": "2570:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2579:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2582:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2582:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2572:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:5"
																			},
																			"nativeSrc": "2572:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2572:12:5"
																		},
																		"nativeSrc": "2572:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2545:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2545:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2553:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2553:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2541:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:5"
																				},
																				"nativeSrc": "2541:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2541:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2558:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2558:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2537:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2537:3:5"
																		},
																		"nativeSrc": "2537:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2537:26:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2565:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2534:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:5"
																},
																"nativeSrc": "2534:35:5",
																"nodeType": "YulFunctionCall",
																"src": "2534:35:5"
															},
															"nativeSrc": "2531:55:5",
															"nodeType": "YulIf",
															"src": "2531:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2612:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2612:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2620:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2608:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:5"
																		},
																		"nativeSrc": "2608:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2608:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2631:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2631:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2639:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2639:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2627:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:5"
																		},
																		"nativeSrc": "2627:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2627:17:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2646:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "2646:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2595:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2595:12:5"
																},
																"nativeSrc": "2595:54:5",
																"nodeType": "YulFunctionCall",
																"src": "2595:54:5"
															},
															"nativeSrc": "2595:54:5",
															"nodeType": "YulExpressionStatement",
															"src": "2595:54:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2673:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "2673:6:5"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2681:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "2681:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2669:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:5"
																				},
																				"nativeSrc": "2669:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2669:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2686:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2686:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2665:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:5"
																		},
																		"nativeSrc": "2665:26:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:26:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2693:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2693:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:5"
																},
																"nativeSrc": "2658:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2658:37:5"
															},
															"nativeSrc": "2658:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2658:37:5"
														},
														{
															"nativeSrc": "2704:15:5",
															"nodeType": "YulAssignment",
															"src": "2704:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2713:6:5",
																"nodeType": "YulIdentifier",
																"src": "2713:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2704:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2704:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "2006:719:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2033:6:5",
														"nodeType": "YulTypedName",
														"src": "2033:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2041:3:5",
														"nodeType": "YulTypedName",
														"src": "2041:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2049:5:5",
														"nodeType": "YulTypedName",
														"src": "2049:5:5",
														"type": ""
													}
												],
												"src": "2006:719:5"
											},
											{
												"body": {
													"nativeSrc": "2810:242:5",
													"nodeType": "YulBlock",
													"src": "2810:242:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2856:16:5",
																"nodeType": "YulBlock",
																"src": "2856:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2865:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2865:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2868:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2868:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2858:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2858:6:5"
																			},
																			"nativeSrc": "2858:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2858:12:5"
																		},
																		"nativeSrc": "2858:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2858:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2831:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2831:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2827:3:5"
																		},
																		"nativeSrc": "2827:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2827:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2852:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2852:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:5"
																},
																"nativeSrc": "2823:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2823:32:5"
															},
															"nativeSrc": "2820:52:5",
															"nodeType": "YulIf",
															"src": "2820:52:5"
														},
														{
															"nativeSrc": "2881:37:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2881:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2908:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2908:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2895:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "2895:12:5"
																},
																"nativeSrc": "2895:23:5",
																"nodeType": "YulFunctionCall",
																"src": "2895:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2885:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2885:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2961:16:5",
																"nodeType": "YulBlock",
																"src": "2961:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2970:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2970:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2973:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2973:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2963:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2963:6:5"
																			},
																			"nativeSrc": "2963:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2963:12:5"
																		},
																		"nativeSrc": "2963:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2963:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2933:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2941:18:5",
																		"nodeType": "YulLiteral",
																		"src": "2941:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2930:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2930:2:5"
																},
																"nativeSrc": "2930:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2930:30:5"
															},
															"nativeSrc": "2927:50:5",
															"nodeType": "YulIf",
															"src": "2927:50:5"
														},
														{
															"nativeSrc": "2986:60:5",
															"nodeType": "YulAssignment",
															"src": "2986:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3029:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3029:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3014:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:5"
																		},
																		"nativeSrc": "3014:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3014:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3038:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3038:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2996:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2996:17:5"
																},
																"nativeSrc": "2996:50:5",
																"nodeType": "YulFunctionCall",
																"src": "2996:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2986:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2986:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "2730:322:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2776:9:5",
														"nodeType": "YulTypedName",
														"src": "2776:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2787:7:5",
														"nodeType": "YulTypedName",
														"src": "2787:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2799:6:5",
														"nodeType": "YulTypedName",
														"src": "2799:6:5",
														"type": ""
													}
												],
												"src": "2730:322:5"
											},
											{
												"body": {
													"nativeSrc": "3161:224:5",
													"nodeType": "YulBlock",
													"src": "3161:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:16:5",
																"nodeType": "YulBlock",
																"src": "3207:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3216:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3209:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:5"
																			},
																			"nativeSrc": "3209:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:12:5"
																		},
																		"nativeSrc": "3209:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3191:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3191:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3178:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:5"
																		},
																		"nativeSrc": "3178:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3178:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3203:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3203:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3174:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:5"
																},
																"nativeSrc": "3174:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3174:32:5"
															},
															"nativeSrc": "3171:52:5",
															"nodeType": "YulIf",
															"src": "3171:52:5"
														},
														{
															"nativeSrc": "3232:39:5",
															"nodeType": "YulAssignment",
															"src": "3232:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3261:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3261:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3242:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3242:18:5"
																},
																"nativeSrc": "3242:29:5",
																"nodeType": "YulFunctionCall",
																"src": "3242:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:5"
																}
															]
														},
														{
															"nativeSrc": "3280:48:5",
															"nodeType": "YulAssignment",
															"src": "3280:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3313:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3313:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3324:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3309:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3309:3:5"
																		},
																		"nativeSrc": "3309:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3290:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "3290:18:5"
																},
																"nativeSrc": "3290:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3290:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3280:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:5"
																}
															]
														},
														{
															"nativeSrc": "3337:42:5",
															"nodeType": "YulAssignment",
															"src": "3337:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3364:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3364:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3375:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3375:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3360:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:5"
																		},
																		"nativeSrc": "3360:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3360:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3347:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3347:12:5"
																},
																"nativeSrc": "3347:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3347:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3337:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3057:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3111:9:5",
														"nodeType": "YulTypedName",
														"src": "3111:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3122:7:5",
														"nodeType": "YulTypedName",
														"src": "3122:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3134:6:5",
														"nodeType": "YulTypedName",
														"src": "3134:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3142:6:5",
														"nodeType": "YulTypedName",
														"src": "3142:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3150:6:5",
														"nodeType": "YulTypedName",
														"src": "3150:6:5",
														"type": ""
													}
												],
												"src": "3057:328:5"
											},
											{
												"body": {
													"nativeSrc": "3487:87:5",
													"nodeType": "YulBlock",
													"src": "3487:87:5",
													"statements": [
														{
															"nativeSrc": "3497:26:5",
															"nodeType": "YulAssignment",
															"src": "3497:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3509:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3509:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3520:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3505:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:5"
																},
																"nativeSrc": "3505:18:5",
																"nodeType": "YulFunctionCall",
																"src": "3505:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3497:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3497:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3539:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3539:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3554:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3562:4:5",
																				"nodeType": "YulLiteral",
																				"src": "3562:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3550:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:5"
																		},
																		"nativeSrc": "3550:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3532:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:5"
																},
																"nativeSrc": "3532:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3532:36:5"
															},
															"nativeSrc": "3532:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3532:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3390:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3456:9:5",
														"nodeType": "YulTypedName",
														"src": "3456:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3467:6:5",
														"nodeType": "YulTypedName",
														"src": "3467:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3478:4:5",
														"nodeType": "YulTypedName",
														"src": "3478:4:5",
														"type": ""
													}
												],
												"src": "3390:184:5"
											},
											{
												"body": {
													"nativeSrc": "3686:436:5",
													"nodeType": "YulBlock",
													"src": "3686:436:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "3732:16:5",
																"nodeType": "YulBlock",
																"src": "3732:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3741:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3741:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3744:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3744:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3734:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3734:6:5"
																			},
																			"nativeSrc": "3734:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3734:12:5"
																		},
																		"nativeSrc": "3734:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3734:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3707:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "3707:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3716:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3703:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:5"
																		},
																		"nativeSrc": "3703:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3703:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3728:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3728:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3699:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:5"
																},
																"nativeSrc": "3699:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3699:32:5"
															},
															"nativeSrc": "3696:52:5",
															"nodeType": "YulIf",
															"src": "3696:52:5"
														},
														{
															"nativeSrc": "3757:37:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3757:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3784:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3784:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3771:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3771:12:5"
																},
																"nativeSrc": "3771:23:5",
																"nodeType": "YulFunctionCall",
																"src": "3771:23:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3761:6:5",
																	"nodeType": "YulTypedName",
																	"src": "3761:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3803:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3803:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3813:18:5",
																"nodeType": "YulLiteral",
																"src": "3813:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3807:2:5",
																	"nodeType": "YulTypedName",
																	"src": "3807:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3858:16:5",
																"nodeType": "YulBlock",
																"src": "3858:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3867:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3867:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3870:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3870:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3860:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3860:6:5"
																			},
																			"nativeSrc": "3860:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3860:12:5"
																		},
																		"nativeSrc": "3860:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3860:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3846:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3846:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3854:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "3854:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3843:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3843:2:5"
																},
																"nativeSrc": "3843:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3843:14:5"
															},
															"nativeSrc": "3840:34:5",
															"nodeType": "YulIf",
															"src": "3840:34:5"
														},
														{
															"nativeSrc": "3883:60:5",
															"nodeType": "YulAssignment",
															"src": "3883:60:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3915:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3926:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3911:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3911:3:5"
																		},
																		"nativeSrc": "3911:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3911:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3935:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "3935:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3893:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "3893:17:5"
																},
																"nativeSrc": "3893:50:5",
																"nodeType": "YulFunctionCall",
																"src": "3893:50:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3883:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:5"
																}
															]
														},
														{
															"nativeSrc": "3952:48:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3952:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3985:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3985:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3996:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3996:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3981:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:5"
																		},
																		"nativeSrc": "3981:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3968:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "3968:12:5"
																},
																"nativeSrc": "3968:32:5",
																"nodeType": "YulFunctionCall",
																"src": "3968:32:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3956:8:5",
																	"nodeType": "YulTypedName",
																	"src": "3956:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4029:16:5",
																"nodeType": "YulBlock",
																"src": "4029:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4038:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4038:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4041:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4041:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4031:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4031:6:5"
																			},
																			"nativeSrc": "4031:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:12:5"
																		},
																		"nativeSrc": "4031:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4015:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "4015:8:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4025:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "4025:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4012:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4012:2:5"
																},
																"nativeSrc": "4012:16:5",
																"nodeType": "YulFunctionCall",
																"src": "4012:16:5"
															},
															"nativeSrc": "4009:36:5",
															"nodeType": "YulIf",
															"src": "4009:36:5"
														},
														{
															"nativeSrc": "4054:62:5",
															"nodeType": "YulAssignment",
															"src": "4054:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4086:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4086:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "4097:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "4097:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4082:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:5"
																		},
																		"nativeSrc": "4082:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4082:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4108:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "4108:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4064:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "4064:17:5"
																},
																"nativeSrc": "4064:52:5",
																"nodeType": "YulFunctionCall",
																"src": "4064:52:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4054:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "3579:543:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3644:9:5",
														"nodeType": "YulTypedName",
														"src": "3644:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3655:7:5",
														"nodeType": "YulTypedName",
														"src": "3655:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3667:6:5",
														"nodeType": "YulTypedName",
														"src": "3667:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3675:6:5",
														"nodeType": "YulTypedName",
														"src": "3675:6:5",
														"type": ""
													}
												],
												"src": "3579:543:5"
											},
											{
												"body": {
													"nativeSrc": "4211:263:5",
													"nodeType": "YulBlock",
													"src": "4211:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4257:16:5",
																"nodeType": "YulBlock",
																"src": "4257:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4266:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4266:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4269:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4269:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4259:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4259:6:5"
																			},
																			"nativeSrc": "4259:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4259:12:5"
																		},
																		"nativeSrc": "4259:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4259:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4232:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4232:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4241:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4241:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4228:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:5"
																		},
																		"nativeSrc": "4228:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4228:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4253:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4253:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4224:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4224:3:5"
																},
																"nativeSrc": "4224:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4224:32:5"
															},
															"nativeSrc": "4221:52:5",
															"nodeType": "YulIf",
															"src": "4221:52:5"
														},
														{
															"nativeSrc": "4282:39:5",
															"nodeType": "YulAssignment",
															"src": "4282:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4311:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4311:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4292:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4292:18:5"
																},
																"nativeSrc": "4292:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4292:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4282:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:5"
																}
															]
														},
														{
															"nativeSrc": "4330:45:5",
															"nodeType": "YulVariableDeclaration",
															"src": "4330:45:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4360:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4360:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4371:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4371:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4356:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4356:3:5"
																		},
																		"nativeSrc": "4356:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4356:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4343:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4343:12:5"
																},
																"nativeSrc": "4343:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4343:32:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4334:5:5",
																	"nodeType": "YulTypedName",
																	"src": "4334:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4428:16:5",
																"nodeType": "YulBlock",
																"src": "4428:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4437:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4437:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4440:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4430:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4430:6:5"
																			},
																			"nativeSrc": "4430:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4430:12:5"
																		},
																		"nativeSrc": "4430:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4430:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4397:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "4397:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4418:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "4418:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4411:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "4411:6:5"
																						},
																						"nativeSrc": "4411:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "4411:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4404:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "4404:6:5"
																				},
																				"nativeSrc": "4404:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4404:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4394:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "4394:2:5"
																		},
																		"nativeSrc": "4394:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4387:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4387:6:5"
																},
																"nativeSrc": "4387:40:5",
																"nodeType": "YulFunctionCall",
																"src": "4387:40:5"
															},
															"nativeSrc": "4384:60:5",
															"nodeType": "YulIf",
															"src": "4384:60:5"
														},
														{
															"nativeSrc": "4453:15:5",
															"nodeType": "YulAssignment",
															"src": "4453:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "4463:5:5",
																"nodeType": "YulIdentifier",
																"src": "4463:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4453:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4453:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4127:347:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4169:9:5",
														"nodeType": "YulTypedName",
														"src": "4169:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4180:7:5",
														"nodeType": "YulTypedName",
														"src": "4180:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4192:6:5",
														"nodeType": "YulTypedName",
														"src": "4192:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4200:6:5",
														"nodeType": "YulTypedName",
														"src": "4200:6:5",
														"type": ""
													}
												],
												"src": "4127:347:5"
											},
											{
												"body": {
													"nativeSrc": "4549:116:5",
													"nodeType": "YulBlock",
													"src": "4549:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4595:16:5",
																"nodeType": "YulBlock",
																"src": "4595:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4604:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4607:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4607:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4597:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4597:6:5"
																			},
																			"nativeSrc": "4597:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4597:12:5"
																		},
																		"nativeSrc": "4597:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4597:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4570:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4570:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4579:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4579:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:5"
																		},
																		"nativeSrc": "4566:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4566:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4591:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4591:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4562:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4562:3:5"
																},
																"nativeSrc": "4562:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4562:32:5"
															},
															"nativeSrc": "4559:52:5",
															"nodeType": "YulIf",
															"src": "4559:52:5"
														},
														{
															"nativeSrc": "4620:39:5",
															"nodeType": "YulAssignment",
															"src": "4620:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4649:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4649:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4630:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4630:18:5"
																},
																"nativeSrc": "4630:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4630:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4620:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4479:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4515:9:5",
														"nodeType": "YulTypedName",
														"src": "4515:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4526:7:5",
														"nodeType": "YulTypedName",
														"src": "4526:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4538:6:5",
														"nodeType": "YulTypedName",
														"src": "4538:6:5",
														"type": ""
													}
												],
												"src": "4479:186:5"
											},
											{
												"body": {
													"nativeSrc": "4810:668:5",
													"nodeType": "YulBlock",
													"src": "4810:668:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "4857:16:5",
																"nodeType": "YulBlock",
																"src": "4857:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4866:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4866:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4869:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4869:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4859:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4859:6:5"
																			},
																			"nativeSrc": "4859:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4859:12:5"
																		},
																		"nativeSrc": "4859:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4859:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4831:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "4831:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4840:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4840:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4827:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4827:3:5"
																		},
																		"nativeSrc": "4827:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4827:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4852:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4852:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:5"
																},
																"nativeSrc": "4823:33:5",
																"nodeType": "YulFunctionCall",
																"src": "4823:33:5"
															},
															"nativeSrc": "4820:53:5",
															"nodeType": "YulIf",
															"src": "4820:53:5"
														},
														{
															"nativeSrc": "4882:39:5",
															"nodeType": "YulAssignment",
															"src": "4882:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4911:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4911:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4892:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4892:18:5"
																},
																"nativeSrc": "4892:29:5",
																"nodeType": "YulFunctionCall",
																"src": "4892:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4882:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:5"
																}
															]
														},
														{
															"nativeSrc": "4930:48:5",
															"nodeType": "YulAssignment",
															"src": "4930:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4963:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4963:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4974:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4974:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4959:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:5"
																		},
																		"nativeSrc": "4959:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4940:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "4940:18:5"
																},
																"nativeSrc": "4940:38:5",
																"nodeType": "YulFunctionCall",
																"src": "4940:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4930:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:5"
																}
															]
														},
														{
															"nativeSrc": "4987:42:5",
															"nodeType": "YulAssignment",
															"src": "4987:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5014:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5025:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5010:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:5"
																		},
																		"nativeSrc": "5010:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4997:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "4997:12:5"
																},
																"nativeSrc": "4997:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4997:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4987:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:5"
																}
															]
														},
														{
															"nativeSrc": "5038:46:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5038:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5069:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5069:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5080:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5080:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5065:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5065:3:5"
																		},
																		"nativeSrc": "5065:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5065:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5052:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5052:12:5"
																},
																"nativeSrc": "5052:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5052:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5042:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5042:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5093:28:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5093:28:5",
															"value": {
																"kind": "number",
																"nativeSrc": "5103:18:5",
																"nodeType": "YulLiteral",
																"src": "5103:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5097:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5097:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5148:16:5",
																"nodeType": "YulBlock",
																"src": "5148:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5157:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5157:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5160:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5160:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5150:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5150:6:5"
																			},
																			"nativeSrc": "5150:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5150:12:5"
																		},
																		"nativeSrc": "5150:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5150:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5136:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5136:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5144:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5144:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5133:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5133:2:5"
																},
																"nativeSrc": "5133:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5133:14:5"
															},
															"nativeSrc": "5130:34:5",
															"nodeType": "YulIf",
															"src": "5130:34:5"
														},
														{
															"nativeSrc": "5173:32:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5173:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5187:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5187:9:5"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5198:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5198:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5183:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5183:3:5"
																},
																"nativeSrc": "5183:22:5",
																"nodeType": "YulFunctionCall",
																"src": "5183:22:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "5177:2:5",
																	"nodeType": "YulTypedName",
																	"src": "5177:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5253:16:5",
																"nodeType": "YulBlock",
																"src": "5253:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5262:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5262:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5255:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5255:6:5"
																			},
																			"nativeSrc": "5255:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5255:12:5"
																		},
																		"nativeSrc": "5255:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5255:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5232:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5232:2:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5236:4:5",
																						"nodeType": "YulLiteral",
																						"src": "5236:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5228:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5228:3:5"
																				},
																				"nativeSrc": "5228:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5228:13:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5243:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5243:7:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5224:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:5"
																		},
																		"nativeSrc": "5224:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5224:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5217:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:5"
																},
																"nativeSrc": "5217:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5217:35:5"
															},
															"nativeSrc": "5214:55:5",
															"nodeType": "YulIf",
															"src": "5214:55:5"
														},
														{
															"nativeSrc": "5278:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5278:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5305:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5305:2:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5292:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "5292:12:5"
																},
																"nativeSrc": "5292:16:5",
																"nodeType": "YulFunctionCall",
																"src": "5292:16:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5282:6:5",
																	"nodeType": "YulTypedName",
																	"src": "5282:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5335:16:5",
																"nodeType": "YulBlock",
																"src": "5335:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5344:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5344:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5347:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5347:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5337:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:5"
																			},
																			"nativeSrc": "5337:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5337:12:5"
																		},
																		"nativeSrc": "5337:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5323:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5331:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5331:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5320:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5320:2:5"
																},
																"nativeSrc": "5320:14:5",
																"nodeType": "YulFunctionCall",
																"src": "5320:14:5"
															},
															"nativeSrc": "5317:34:5",
															"nodeType": "YulIf",
															"src": "5317:34:5"
														},
														{
															"body": {
																"nativeSrc": "5401:16:5",
																"nodeType": "YulBlock",
																"src": "5401:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5410:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5410:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5413:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5413:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5403:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5403:6:5"
																			},
																			"nativeSrc": "5403:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5403:12:5"
																		},
																		"nativeSrc": "5403:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5403:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "5374:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "5374:2:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5378:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5378:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5370:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5370:3:5"
																				},
																				"nativeSrc": "5370:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5370:15:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5387:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5387:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5366:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:5"
																		},
																		"nativeSrc": "5366:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5366:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5392:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "5392:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5363:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5363:2:5"
																},
																"nativeSrc": "5363:37:5",
																"nodeType": "YulFunctionCall",
																"src": "5363:37:5"
															},
															"nativeSrc": "5360:57:5",
															"nodeType": "YulIf",
															"src": "5360:57:5"
														},
														{
															"nativeSrc": "5426:21:5",
															"nodeType": "YulAssignment",
															"src": "5426:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "5440:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "5440:2:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5444:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5436:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5436:3:5"
																},
																"nativeSrc": "5436:11:5",
																"nodeType": "YulFunctionCall",
																"src": "5436:11:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5426:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:5"
																}
															]
														},
														{
															"nativeSrc": "5456:16:5",
															"nodeType": "YulAssignment",
															"src": "5456:16:5",
															"value": {
																"name": "length",
																"nativeSrc": "5466:6:5",
																"nodeType": "YulIdentifier",
																"src": "5466:6:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5456:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5456:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "4670:808:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4744:9:5",
														"nodeType": "YulTypedName",
														"src": "4744:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4755:7:5",
														"nodeType": "YulTypedName",
														"src": "4755:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4767:6:5",
														"nodeType": "YulTypedName",
														"src": "4767:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4775:6:5",
														"nodeType": "YulTypedName",
														"src": "4775:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4783:6:5",
														"nodeType": "YulTypedName",
														"src": "4783:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4791:6:5",
														"nodeType": "YulTypedName",
														"src": "4791:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4799:6:5",
														"nodeType": "YulTypedName",
														"src": "4799:6:5",
														"type": ""
													}
												],
												"src": "4670:808:5"
											},
											{
												"body": {
													"nativeSrc": "5570:173:5",
													"nodeType": "YulBlock",
													"src": "5570:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5616:16:5",
																"nodeType": "YulBlock",
																"src": "5616:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5625:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5625:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5628:1:5",
																					"nodeType": "YulLiteral",
																					"src": "5628:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5618:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5618:6:5"
																			},
																			"nativeSrc": "5618:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5618:12:5"
																		},
																		"nativeSrc": "5618:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5618:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5591:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5591:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5600:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5600:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5587:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:5"
																		},
																		"nativeSrc": "5587:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5583:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5583:3:5"
																},
																"nativeSrc": "5583:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5583:32:5"
															},
															"nativeSrc": "5580:52:5",
															"nodeType": "YulIf",
															"src": "5580:52:5"
														},
														{
															"nativeSrc": "5641:39:5",
															"nodeType": "YulAssignment",
															"src": "5641:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5670:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5670:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5651:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5651:18:5"
																},
																"nativeSrc": "5651:29:5",
																"nodeType": "YulFunctionCall",
																"src": "5651:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5641:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5641:6:5"
																}
															]
														},
														{
															"nativeSrc": "5689:48:5",
															"nodeType": "YulAssignment",
															"src": "5689:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5722:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5722:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5733:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5733:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5718:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5718:3:5"
																		},
																		"nativeSrc": "5718:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5718:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5699:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "5699:18:5"
																},
																"nativeSrc": "5699:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5699:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5689:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5689:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5483:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5528:9:5",
														"nodeType": "YulTypedName",
														"src": "5528:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5539:7:5",
														"nodeType": "YulTypedName",
														"src": "5539:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5551:6:5",
														"nodeType": "YulTypedName",
														"src": "5551:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5559:6:5",
														"nodeType": "YulTypedName",
														"src": "5559:6:5",
														"type": ""
													}
												],
												"src": "5483:260:5"
											},
											{
												"body": {
													"nativeSrc": "5803:325:5",
													"nodeType": "YulBlock",
													"src": "5803:325:5",
													"statements": [
														{
															"nativeSrc": "5813:22:5",
															"nodeType": "YulAssignment",
															"src": "5813:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5827:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5827:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5830:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5830:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5823:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5823:3:5"
																},
																"nativeSrc": "5823:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5823:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5813:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:5"
																}
															]
														},
														{
															"nativeSrc": "5844:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "5844:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5874:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "5874:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5880:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5880:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5870:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5870:3:5"
																},
																"nativeSrc": "5870:12:5",
																"nodeType": "YulFunctionCall",
																"src": "5870:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5848:18:5",
																	"nodeType": "YulTypedName",
																	"src": "5848:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5921:31:5",
																"nodeType": "YulBlock",
																"src": "5921:31:5",
																"statements": [
																	{
																		"nativeSrc": "5923:27:5",
																		"nodeType": "YulAssignment",
																		"src": "5923:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5937:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "5937:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5945:4:5",
																					"nodeType": "YulLiteral",
																					"src": "5945:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5933:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "5933:3:5"
																			},
																			"nativeSrc": "5933:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5933:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5923:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5923:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5901:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5901:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5894:6:5"
																},
																"nativeSrc": "5894:26:5",
																"nodeType": "YulFunctionCall",
																"src": "5894:26:5"
															},
															"nativeSrc": "5891:61:5",
															"nodeType": "YulIf",
															"src": "5891:61:5"
														},
														{
															"body": {
																"nativeSrc": "6011:111:5",
																"nodeType": "YulBlock",
																"src": "6011:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6032:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6032:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6039:3:5",
																							"nodeType": "YulLiteral",
																							"src": "6039:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6044:10:5",
																							"nodeType": "YulLiteral",
																							"src": "6044:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6035:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6035:3:5"
																					},
																					"nativeSrc": "6035:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6035:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6025:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6025:6:5"
																			},
																			"nativeSrc": "6025:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6025:31:5"
																		},
																		"nativeSrc": "6025:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6025:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6076:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6076:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6079:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6079:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6069:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6069:6:5"
																			},
																			"nativeSrc": "6069:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6069:15:5"
																		},
																		"nativeSrc": "6069:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6069:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6104:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6104:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6107:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6107:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6097:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6097:6:5"
																			},
																			"nativeSrc": "6097:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6097:15:5"
																		},
																		"nativeSrc": "6097:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6097:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5967:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "5967:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5990:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "5990:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5998:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5998:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5987:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "5987:2:5"
																		},
																		"nativeSrc": "5987:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5987:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5964:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "5964:2:5"
																},
																"nativeSrc": "5964:38:5",
																"nodeType": "YulFunctionCall",
																"src": "5964:38:5"
															},
															"nativeSrc": "5961:161:5",
															"nodeType": "YulIf",
															"src": "5961:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5748:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5783:4:5",
														"nodeType": "YulTypedName",
														"src": "5783:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5792:6:5",
														"nodeType": "YulTypedName",
														"src": "5792:6:5",
														"type": ""
													}
												],
												"src": "5748:380:5"
											},
											{
												"body": {
													"nativeSrc": "6189:65:5",
													"nodeType": "YulBlock",
													"src": "6189:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6206:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6206:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6209:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6209:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6199:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6199:6:5"
																},
																"nativeSrc": "6199:14:5",
																"nodeType": "YulFunctionCall",
																"src": "6199:14:5"
															},
															"nativeSrc": "6199:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "6199:14:5"
														},
														{
															"nativeSrc": "6222:26:5",
															"nodeType": "YulAssignment",
															"src": "6222:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "6243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6230:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "6230:9:5"
																},
																"nativeSrc": "6230:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6230:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6222:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6222:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "6133:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6172:3:5",
														"nodeType": "YulTypedName",
														"src": "6172:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6180:4:5",
														"nodeType": "YulTypedName",
														"src": "6180:4:5",
														"type": ""
													}
												],
												"src": "6133:121:5"
											},
											{
												"body": {
													"nativeSrc": "6340:437:5",
													"nodeType": "YulBlock",
													"src": "6340:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "6373:398:5",
																"nodeType": "YulBlock",
																"src": "6373:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6394:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6394:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "6397:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6397:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6387:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6387:6:5"
																			},
																			"nativeSrc": "6387:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6387:16:5"
																		},
																		"nativeSrc": "6387:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6387:16:5"
																	},
																	{
																		"nativeSrc": "6416:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6416:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6438:1:5",
																					"nodeType": "YulLiteral",
																					"src": "6438:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6441:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6441:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "6428:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6428:9:5"
																			},
																			"nativeSrc": "6428:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6428:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "6420:4:5",
																				"nodeType": "YulTypedName",
																				"src": "6420:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6459:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6459:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6482:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6482:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6492:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6492:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "6499:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "6499:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6511:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6511:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6495:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6495:3:5"
																							},
																							"nativeSrc": "6495:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6488:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6488:3:5"
																					},
																					"nativeSrc": "6488:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6488:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6478:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6478:3:5"
																			},
																			"nativeSrc": "6478:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6478:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6463:11:5",
																				"nodeType": "YulTypedName",
																				"src": "6463:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6553:23:5",
																			"nodeType": "YulBlock",
																			"src": "6553:23:5",
																			"statements": [
																				{
																					"nativeSrc": "6555:19:5",
																					"nodeType": "YulAssignment",
																					"src": "6555:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "6570:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "6570:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6555:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "6555:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6535:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6535:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6547:4:5",
																					"nodeType": "YulLiteral",
																					"src": "6547:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6532:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6532:2:5"
																			},
																			"nativeSrc": "6532:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6532:20:5"
																		},
																		"nativeSrc": "6529:47:5",
																		"nodeType": "YulIf",
																		"src": "6529:47:5"
																	},
																	{
																		"nativeSrc": "6589:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6589:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6603:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "6603:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6613:1:5",
																							"nodeType": "YulLiteral",
																							"src": "6613:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6620:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6620:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6625:2:5",
																									"nodeType": "YulLiteral",
																									"src": "6625:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6616:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6616:3:5"
																							},
																							"nativeSrc": "6616:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6616:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6609:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6609:3:5"
																					},
																					"nativeSrc": "6609:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6609:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6599:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6599:3:5"
																			},
																			"nativeSrc": "6599:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6599:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6593:2:5",
																				"nodeType": "YulTypedName",
																				"src": "6593:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6643:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6643:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "6656:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "6656:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "6647:5:5",
																				"nodeType": "YulTypedName",
																				"src": "6647:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6741:20:5",
																			"nodeType": "YulBlock",
																			"src": "6741:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6750:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6750:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6757:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6757:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "6743:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "6743:6:5"
																						},
																						"nativeSrc": "6743:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6743:16:5"
																					},
																					"nativeSrc": "6743:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "6743:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6691:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "6691:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "6698:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "6698:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6688:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "6688:2:5"
																			},
																			"nativeSrc": "6688:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6688:13:5"
																		},
																		"nativeSrc": "6680:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "6702:26:5",
																			"nodeType": "YulBlock",
																			"src": "6702:26:5",
																			"statements": [
																				{
																					"nativeSrc": "6704:22:5",
																					"nodeType": "YulAssignment",
																					"src": "6704:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "6717:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "6717:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6724:1:5",
																								"nodeType": "YulLiteral",
																								"src": "6724:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6713:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6713:3:5"
																						},
																						"nativeSrc": "6713:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6713:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "6704:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "6704:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "6684:3:5",
																			"nodeType": "YulBlock",
																			"src": "6684:3:5",
																			"statements": []
																		},
																		"src": "6680:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6356:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "6356:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6361:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6361:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6353:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6353:2:5"
																},
																"nativeSrc": "6353:11:5",
																"nodeType": "YulFunctionCall",
																"src": "6353:11:5"
															},
															"nativeSrc": "6350:421:5",
															"nodeType": "YulIf",
															"src": "6350:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "6259:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6312:5:5",
														"nodeType": "YulTypedName",
														"src": "6312:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6319:3:5",
														"nodeType": "YulTypedName",
														"src": "6319:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6324:10:5",
														"nodeType": "YulTypedName",
														"src": "6324:10:5",
														"type": ""
													}
												],
												"src": "6259:518:5"
											},
											{
												"body": {
													"nativeSrc": "6867:81:5",
													"nodeType": "YulBlock",
													"src": "6867:81:5",
													"statements": [
														{
															"nativeSrc": "6877:65:5",
															"nodeType": "YulAssignment",
															"src": "6877:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6892:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "6892:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6910:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6910:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6913:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "6913:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6906:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6906:3:5"
																								},
																								"nativeSrc": "6906:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6906:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6923:1:5",
																										"nodeType": "YulLiteral",
																										"src": "6923:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6919:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6919:3:5"
																								},
																								"nativeSrc": "6919:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "6919:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6902:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6902:3:5"
																						},
																						"nativeSrc": "6902:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "6902:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6898:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "6898:3:5"
																				},
																				"nativeSrc": "6898:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "6898:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6888:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6888:3:5"
																		},
																		"nativeSrc": "6888:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6888:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6934:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6934:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6937:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6937:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6930:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:5"
																		},
																		"nativeSrc": "6930:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6885:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6885:2:5"
																},
																"nativeSrc": "6885:57:5",
																"nodeType": "YulFunctionCall",
																"src": "6885:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6877:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6877:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6782:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6844:4:5",
														"nodeType": "YulTypedName",
														"src": "6844:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6850:3:5",
														"nodeType": "YulTypedName",
														"src": "6850:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6858:4:5",
														"nodeType": "YulTypedName",
														"src": "6858:4:5",
														"type": ""
													}
												],
												"src": "6782:166:5"
											},
											{
												"body": {
													"nativeSrc": "7049:1249:5",
													"nodeType": "YulBlock",
													"src": "7049:1249:5",
													"statements": [
														{
															"nativeSrc": "7059:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7059:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7079:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7079:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7073:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7073:5:5"
																},
																"nativeSrc": "7073:10:5",
																"nodeType": "YulFunctionCall",
																"src": "7073:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7063:6:5",
																	"nodeType": "YulTypedName",
																	"src": "7063:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7126:22:5",
																"nodeType": "YulBlock",
																"src": "7126:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7128:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "7128:16:5"
																			},
																			"nativeSrc": "7128:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7128:18:5"
																		},
																		"nativeSrc": "7128:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7128:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7098:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7098:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:18:5",
																		"nodeType": "YulLiteral",
																		"src": "7106:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7095:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7095:2:5"
																},
																"nativeSrc": "7095:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7095:30:5"
															},
															"nativeSrc": "7092:56:5",
															"nodeType": "YulIf",
															"src": "7092:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7201:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "7201:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7239:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "7239:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7233:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "7233:5:5"
																				},
																				"nativeSrc": "7233:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7233:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "7207:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "7207:25:5"
																		},
																		"nativeSrc": "7207:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7207:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7247:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "7157:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "7157:43:5"
																},
																"nativeSrc": "7157:97:5",
																"nodeType": "YulFunctionCall",
																"src": "7157:97:5"
															},
															"nativeSrc": "7157:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "7157:97:5"
														},
														{
															"nativeSrc": "7263:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7263:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7280:1:5",
																"nodeType": "YulLiteral",
																"src": "7280:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7267:9:5",
																	"nodeType": "YulTypedName",
																	"src": "7267:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7290:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7290:23:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7309:4:5",
																"nodeType": "YulLiteral",
																"src": "7309:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "7294:11:5",
																	"nodeType": "YulTypedName",
																	"src": "7294:11:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7322:17:5",
															"nodeType": "YulAssignment",
															"src": "7322:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "7335:4:5",
																"nodeType": "YulLiteral",
																"src": "7335:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7322:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "7322:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7385:656:5",
																		"nodeType": "YulBlock",
																		"src": "7385:656:5",
																		"statements": [
																			{
																				"nativeSrc": "7399:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7399:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7418:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "7418:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7430:2:5",
																									"nodeType": "YulLiteral",
																									"src": "7430:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7426:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "7426:3:5"
																							},
																							"nativeSrc": "7426:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "7426:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7414:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "7414:3:5"
																					},
																					"nativeSrc": "7414:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7414:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7403:7:5",
																						"nodeType": "YulTypedName",
																						"src": "7403:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7447:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7447:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7491:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "7491:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "7461:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "7461:29:5"
																					},
																					"nativeSrc": "7461:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7461:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7451:6:5",
																						"nodeType": "YulTypedName",
																						"src": "7451:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7509:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7509:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7518:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7518:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7513:1:5",
																						"nodeType": "YulTypedName",
																						"src": "7513:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7596:172:5",
																					"nodeType": "YulBlock",
																					"src": "7596:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7621:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7621:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7639:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "7639:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7644:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "7644:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7635:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7635:3:5"
																												},
																												"nativeSrc": "7635:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7635:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7629:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "7629:5:5"
																										},
																										"nativeSrc": "7629:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7629:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7614:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7614:6:5"
																								},
																								"nativeSrc": "7614:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7614:42:5"
																							},
																							"nativeSrc": "7614:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7614:42:5"
																						},
																						{
																							"nativeSrc": "7673:24:5",
																							"nodeType": "YulAssignment",
																							"src": "7673:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7687:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7687:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7695:1:5",
																										"nodeType": "YulLiteral",
																										"src": "7695:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7683:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7683:3:5"
																								},
																								"nativeSrc": "7683:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7683:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7673:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7673:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7714:40:5",
																							"nodeType": "YulAssignment",
																							"src": "7714:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7731:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "7731:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "7742:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "7742:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7727:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7727:3:5"
																								},
																								"nativeSrc": "7727:27:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7727:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7714:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "7714:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7543:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "7543:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7546:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7546:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7540:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7540:2:5"
																					},
																					"nativeSrc": "7540:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7540:14:5"
																				},
																				"nativeSrc": "7532:236:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7555:28:5",
																					"nodeType": "YulBlock",
																					"src": "7555:28:5",
																					"statements": [
																						{
																							"nativeSrc": "7557:24:5",
																							"nodeType": "YulAssignment",
																							"src": "7557:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7566:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "7566:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "7569:11:5",
																										"nodeType": "YulIdentifier",
																										"src": "7569:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7562:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "7562:3:5"
																								},
																								"nativeSrc": "7562:19:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7562:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7557:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "7557:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7536:3:5",
																					"nodeType": "YulBlock",
																					"src": "7536:3:5",
																					"statements": []
																				},
																				"src": "7532:236:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "7816:166:5",
																					"nodeType": "YulBlock",
																					"src": "7816:166:5",
																					"statements": [
																						{
																							"nativeSrc": "7834:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7834:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7861:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "7861:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7866:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "7866:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7857:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7857:3:5"
																										},
																										"nativeSrc": "7857:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7857:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7851:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "7851:5:5"
																								},
																								"nativeSrc": "7851:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7851:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7838:9:5",
																									"nodeType": "YulTypedName",
																									"src": "7838:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7901:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "7901:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7913:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "7913:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7940:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "7940:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "7943:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "7943:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7936:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "7936:3:5"
																																		},
																																		"nativeSrc": "7936:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7936:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7952:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7952:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7932:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7932:3:5"
																																},
																																"nativeSrc": "7932:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7932:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7962:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "7962:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7958:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "7958:3:5"
																																},
																																"nativeSrc": "7958:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "7958:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7928:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "7928:3:5"
																														},
																														"nativeSrc": "7928:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "7928:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7924:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "7924:3:5"
																												},
																												"nativeSrc": "7924:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "7924:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7909:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "7909:3:5"
																										},
																										"nativeSrc": "7909:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "7909:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7894:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "7894:6:5"
																								},
																								"nativeSrc": "7894:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "7894:74:5"
																							},
																							"nativeSrc": "7894:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "7894:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7787:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "7787:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7796:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "7796:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7784:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "7784:2:5"
																					},
																					"nativeSrc": "7784:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7784:19:5"
																				},
																				"nativeSrc": "7781:201:5",
																				"nodeType": "YulIf",
																				"src": "7781:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8002:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "8002:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8016:1:5",
																											"nodeType": "YulLiteral",
																											"src": "8016:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "8019:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "8019:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8012:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "8012:3:5"
																									},
																									"nativeSrc": "8012:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "8012:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8028:1:5",
																									"nodeType": "YulLiteral",
																									"src": "8028:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8008:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "8008:3:5"
																							},
																							"nativeSrc": "8008:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "8008:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7995:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "7995:6:5"
																					},
																					"nativeSrc": "7995:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "7995:36:5"
																				},
																				"nativeSrc": "7995:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "7995:36:5"
																			}
																		]
																	},
																	"nativeSrc": "7378:663:5",
																	"nodeType": "YulCase",
																	"src": "7378:663:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7383:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7383:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8058:234:5",
																		"nodeType": "YulBlock",
																		"src": "8058:234:5",
																		"statements": [
																			{
																				"nativeSrc": "8072:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8072:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8085:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8085:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8076:5:5",
																						"nodeType": "YulTypedName",
																						"src": "8076:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8121:67:5",
																					"nodeType": "YulBlock",
																					"src": "8121:67:5",
																					"statements": [
																						{
																							"nativeSrc": "8139:35:5",
																							"nodeType": "YulAssignment",
																							"src": "8139:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8158:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "8158:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8163:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "8163:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8154:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "8154:3:5"
																										},
																										"nativeSrc": "8154:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "8154:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8148:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8148:5:5"
																								},
																								"nativeSrc": "8148:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "8148:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8139:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8139:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8102:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "8102:6:5"
																				},
																				"nativeSrc": "8099:89:5",
																				"nodeType": "YulIf",
																				"src": "8099:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8208:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "8208:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8267:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "8267:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8274:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "8274:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8214:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "8214:52:5"
																							},
																							"nativeSrc": "8214:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "8214:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8201:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8201:6:5"
																					},
																					"nativeSrc": "8201:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8201:81:5"
																				},
																				"nativeSrc": "8201:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "8201:81:5"
																			}
																		]
																	},
																	"nativeSrc": "8050:242:5",
																	"nodeType": "YulCase",
																	"src": "8050:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7358:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7358:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7366:2:5",
																		"nodeType": "YulLiteral",
																		"src": "7366:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7355:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "7355:2:5"
																},
																"nativeSrc": "7355:14:5",
																"nodeType": "YulFunctionCall",
																"src": "7355:14:5"
															},
															"nativeSrc": "7348:944:5",
															"nodeType": "YulSwitch",
															"src": "7348:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6953:1345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7034:4:5",
														"nodeType": "YulTypedName",
														"src": "7034:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7040:3:5",
														"nodeType": "YulTypedName",
														"src": "7040:3:5",
														"type": ""
													}
												],
												"src": "6953:1345:5"
											},
											{
												"body": {
													"nativeSrc": "8335:95:5",
													"nodeType": "YulBlock",
													"src": "8335:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8352:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8352:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8359:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8359:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8364:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8364:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8355:3:5"
																		},
																		"nativeSrc": "8355:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8355:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8345:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:5"
																},
																"nativeSrc": "8345:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8345:31:5"
															},
															"nativeSrc": "8345:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8345:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8392:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8392:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8395:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8385:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8385:6:5"
																},
																"nativeSrc": "8385:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8385:15:5"
															},
															"nativeSrc": "8385:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8385:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8416:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8416:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8419:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8419:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8409:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:5"
																},
																"nativeSrc": "8409:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8409:15:5"
															},
															"nativeSrc": "8409:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8409:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8303:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8303:127:5"
											},
											{
												"body": {
													"nativeSrc": "8484:79:5",
													"nodeType": "YulBlock",
													"src": "8484:79:5",
													"statements": [
														{
															"nativeSrc": "8494:17:5",
															"nodeType": "YulAssignment",
															"src": "8494:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8506:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8506:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8509:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8509:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8502:3:5"
																},
																"nativeSrc": "8502:9:5",
																"nodeType": "YulFunctionCall",
																"src": "8502:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8494:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8535:22:5",
																"nodeType": "YulBlock",
																"src": "8535:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8537:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "8537:16:5"
																			},
																			"nativeSrc": "8537:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8537:18:5"
																		},
																		"nativeSrc": "8537:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8537:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8526:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "8526:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8532:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "8532:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8523:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "8523:2:5"
																},
																"nativeSrc": "8523:11:5",
																"nodeType": "YulFunctionCall",
																"src": "8523:11:5"
															},
															"nativeSrc": "8520:37:5",
															"nodeType": "YulIf",
															"src": "8520:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8435:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8466:1:5",
														"nodeType": "YulTypedName",
														"src": "8466:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8469:1:5",
														"nodeType": "YulTypedName",
														"src": "8469:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8475:4:5",
														"nodeType": "YulTypedName",
														"src": "8475:4:5",
														"type": ""
													}
												],
												"src": "8435:128:5"
											},
											{
												"body": {
													"nativeSrc": "8600:95:5",
													"nodeType": "YulBlock",
													"src": "8600:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8617:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8617:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8624:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8624:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8629:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8629:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8620:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8620:3:5"
																		},
																		"nativeSrc": "8620:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8620:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8610:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:5"
																},
																"nativeSrc": "8610:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8610:31:5"
															},
															"nativeSrc": "8610:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8610:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8657:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8657:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8660:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8660:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8650:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8650:6:5"
																},
																"nativeSrc": "8650:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8650:15:5"
															},
															"nativeSrc": "8650:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8650:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8681:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8681:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8684:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8684:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8674:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:5"
																},
																"nativeSrc": "8674:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8674:15:5"
															},
															"nativeSrc": "8674:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8674:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8568:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8568:127:5"
											},
											{
												"body": {
													"nativeSrc": "8732:95:5",
													"nodeType": "YulBlock",
													"src": "8732:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8749:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8749:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8756:3:5",
																				"nodeType": "YulLiteral",
																				"src": "8756:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8761:10:5",
																				"nodeType": "YulLiteral",
																				"src": "8761:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8752:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8752:3:5"
																		},
																		"nativeSrc": "8752:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8752:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8742:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:5"
																},
																"nativeSrc": "8742:31:5",
																"nodeType": "YulFunctionCall",
																"src": "8742:31:5"
															},
															"nativeSrc": "8742:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "8742:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8789:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8789:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8792:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8792:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:5"
																},
																"nativeSrc": "8782:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8782:15:5"
															},
															"nativeSrc": "8782:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8782:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8813:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8813:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8816:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8816:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8806:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8806:6:5"
																},
																"nativeSrc": "8806:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8806:15:5"
															},
															"nativeSrc": "8806:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "8806:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "8700:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "8700:127:5"
											},
											{
												"body": {
													"nativeSrc": "9089:298:5",
													"nodeType": "YulBlock",
													"src": "9089:298:5",
													"statements": [
														{
															"nativeSrc": "9099:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9099:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9117:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9117:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9122:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9122:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9113:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9113:3:5"
																		},
																		"nativeSrc": "9113:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9113:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9126:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9126:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9109:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9109:3:5"
																},
																"nativeSrc": "9109:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9109:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9103:2:5",
																	"nodeType": "YulTypedName",
																	"src": "9103:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9144:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9144:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9159:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9159:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9167:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "9167:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9155:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9155:3:5"
																		},
																		"nativeSrc": "9155:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9155:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9137:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9137:6:5"
																},
																"nativeSrc": "9137:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9137:34:5"
															},
															"nativeSrc": "9137:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9137:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9191:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9191:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9202:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9202:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9187:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9187:3:5"
																		},
																		"nativeSrc": "9187:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9187:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9211:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9211:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9219:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "9219:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9207:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9207:3:5"
																		},
																		"nativeSrc": "9207:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9207:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9180:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9180:6:5"
																},
																"nativeSrc": "9180:43:5",
																"nodeType": "YulFunctionCall",
																"src": "9180:43:5"
															},
															"nativeSrc": "9180:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "9180:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9254:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9239:3:5"
																		},
																		"nativeSrc": "9239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9239:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9232:6:5"
																},
																"nativeSrc": "9232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9232:34:5"
															},
															"nativeSrc": "9232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9232:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9286:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9286:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9297:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9297:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9282:3:5"
																		},
																		"nativeSrc": "9282:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9282:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9302:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9302:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9275:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9275:6:5"
																},
																"nativeSrc": "9275:31:5",
																"nodeType": "YulFunctionCall",
																"src": "9275:31:5"
															},
															"nativeSrc": "9275:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "9275:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9326:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9326:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9337:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9337:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9322:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:5"
																		},
																		"nativeSrc": "9322:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:19:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9343:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9343:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9315:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:5"
																},
																"nativeSrc": "9315:30:5",
																"nodeType": "YulFunctionCall",
																"src": "9315:30:5"
															},
															"nativeSrc": "9315:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "9315:30:5"
														},
														{
															"nativeSrc": "9354:27:5",
															"nodeType": "YulAssignment",
															"src": "9354:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9366:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9366:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9377:3:5",
																		"nodeType": "YulLiteral",
																		"src": "9377:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9362:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9362:3:5"
																},
																"nativeSrc": "9362:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9362:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9354:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9354:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "8832:555:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9042:9:5",
														"nodeType": "YulTypedName",
														"src": "9042:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9053:6:5",
														"nodeType": "YulTypedName",
														"src": "9053:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9061:6:5",
														"nodeType": "YulTypedName",
														"src": "9061:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9069:6:5",
														"nodeType": "YulTypedName",
														"src": "9069:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9080:4:5",
														"nodeType": "YulTypedName",
														"src": "9080:4:5",
														"type": ""
													}
												],
												"src": "8832:555:5"
											},
											{
												"body": {
													"nativeSrc": "9472:210:5",
													"nodeType": "YulBlock",
													"src": "9472:210:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "9518:16:5",
																"nodeType": "YulBlock",
																"src": "9518:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9527:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9527:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9530:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9530:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9520:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9520:6:5"
																			},
																			"nativeSrc": "9520:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9520:12:5"
																		},
																		"nativeSrc": "9520:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9520:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9493:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "9493:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9502:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9502:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9489:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9489:3:5"
																		},
																		"nativeSrc": "9489:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9489:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9485:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9485:3:5"
																},
																"nativeSrc": "9485:32:5",
																"nodeType": "YulFunctionCall",
																"src": "9485:32:5"
															},
															"nativeSrc": "9482:52:5",
															"nodeType": "YulIf",
															"src": "9482:52:5"
														},
														{
															"nativeSrc": "9543:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9543:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9562:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9562:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9556:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9556:5:5"
																},
																"nativeSrc": "9556:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9556:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9547:5:5",
																	"nodeType": "YulTypedName",
																	"src": "9547:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9636:16:5",
																"nodeType": "YulBlock",
																"src": "9636:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9645:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9645:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9648:1:5",
																					"nodeType": "YulLiteral",
																					"src": "9648:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9638:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9638:6:5"
																			},
																			"nativeSrc": "9638:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "9638:12:5"
																		},
																		"nativeSrc": "9638:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "9638:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9594:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "9594:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9605:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "9605:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9616:3:5",
																								"nodeType": "YulLiteral",
																								"src": "9616:3:5",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9621:10:5",
																								"nodeType": "YulLiteral",
																								"src": "9621:10:5",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9612:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "9612:3:5"
																						},
																						"nativeSrc": "9612:20:5",
																						"nodeType": "YulFunctionCall",
																						"src": "9612:20:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9601:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "9601:3:5"
																				},
																				"nativeSrc": "9601:32:5",
																				"nodeType": "YulFunctionCall",
																				"src": "9601:32:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9591:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "9591:2:5"
																		},
																		"nativeSrc": "9591:43:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9591:43:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9584:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9584:6:5"
																},
																"nativeSrc": "9584:51:5",
																"nodeType": "YulFunctionCall",
																"src": "9584:51:5"
															},
															"nativeSrc": "9581:71:5",
															"nodeType": "YulIf",
															"src": "9581:71:5"
														},
														{
															"nativeSrc": "9661:15:5",
															"nodeType": "YulAssignment",
															"src": "9661:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "9671:5:5",
																"nodeType": "YulIdentifier",
																"src": "9671:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9661:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9661:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "9392:290:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9438:9:5",
														"nodeType": "YulTypedName",
														"src": "9438:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9449:7:5",
														"nodeType": "YulTypedName",
														"src": "9449:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9461:6:5",
														"nodeType": "YulTypedName",
														"src": "9461:6:5",
														"type": ""
													}
												],
												"src": "9392:290:5"
											},
											{
												"body": {
													"nativeSrc": "9900:449:5",
													"nodeType": "YulBlock",
													"src": "9900:449:5",
													"statements": [
														{
															"nativeSrc": "9910:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "9910:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9928:3:5",
																				"nodeType": "YulLiteral",
																				"src": "9928:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9933:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9933:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9924:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:5"
																		},
																		"nativeSrc": "9924:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9924:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9937:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9937:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9920:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:5"
																},
																"nativeSrc": "9920:19:5",
																"nodeType": "YulFunctionCall",
																"src": "9920:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9914:2:5",
																	"nodeType": "YulTypedName",
																	"src": "9914:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9955:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9955:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9970:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9970:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "9978:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "9978:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9966:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9966:3:5"
																		},
																		"nativeSrc": "9966:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9966:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9948:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:5"
																},
																"nativeSrc": "9948:34:5",
																"nodeType": "YulFunctionCall",
																"src": "9948:34:5"
															},
															"nativeSrc": "9948:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "9948:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10002:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10002:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10013:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10013:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9998:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9998:3:5"
																		},
																		"nativeSrc": "9998:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9998:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10022:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "10022:6:5"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10030:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "10030:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10018:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10018:3:5"
																		},
																		"nativeSrc": "10018:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10018:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9991:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9991:6:5"
																},
																"nativeSrc": "9991:43:5",
																"nodeType": "YulFunctionCall",
																"src": "9991:43:5"
															},
															"nativeSrc": "9991:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "9991:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10054:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10054:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10065:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10065:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10050:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10050:3:5"
																		},
																		"nativeSrc": "10050:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10050:18:5"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10070:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10070:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10043:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:5"
																},
																"nativeSrc": "10043:34:5",
																"nodeType": "YulFunctionCall",
																"src": "10043:34:5"
															},
															"nativeSrc": "10043:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "10043:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10097:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10097:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10108:2:5",
																				"nodeType": "YulLiteral",
																				"src": "10108:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10093:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:5"
																		},
																		"nativeSrc": "10093:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10113:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10113:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10086:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:5"
																},
																"nativeSrc": "10086:31:5",
																"nodeType": "YulFunctionCall",
																"src": "10086:31:5"
															},
															"nativeSrc": "10086:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "10086:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10137:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10137:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10148:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10148:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10133:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10133:3:5"
																		},
																		"nativeSrc": "10133:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10133:19:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10154:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10154:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10126:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10126:6:5"
																},
																"nativeSrc": "10126:35:5",
																"nodeType": "YulFunctionCall",
																"src": "10126:35:5"
															},
															"nativeSrc": "10126:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "10126:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10187:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10187:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10198:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10198:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10183:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10183:3:5"
																		},
																		"nativeSrc": "10183:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10183:19:5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "10204:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10204:6:5"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10212:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "10212:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10170:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "10170:12:5"
																},
																"nativeSrc": "10170:49:5",
																"nodeType": "YulFunctionCall",
																"src": "10170:49:5"
															},
															"nativeSrc": "10170:49:5",
															"nodeType": "YulExpressionStatement",
															"src": "10170:49:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10243:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "10243:9:5"
																					},
																					{
																						"name": "value4",
																						"nativeSrc": "10254:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10254:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10239:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10239:3:5"
																				},
																				"nativeSrc": "10239:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10239:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10263:3:5",
																				"nodeType": "YulLiteral",
																				"src": "10263:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10235:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10235:3:5"
																		},
																		"nativeSrc": "10235:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10235:32:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10269:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10269:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10228:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:5"
																},
																"nativeSrc": "10228:43:5",
																"nodeType": "YulFunctionCall",
																"src": "10228:43:5"
															},
															"nativeSrc": "10228:43:5",
															"nodeType": "YulExpressionStatement",
															"src": "10228:43:5"
														},
														{
															"nativeSrc": "10280:63:5",
															"nodeType": "YulAssignment",
															"src": "10280:63:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10296:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value4",
																								"nativeSrc": "10315:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "10315:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10323:2:5",
																								"nodeType": "YulLiteral",
																								"src": "10323:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10311:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10311:3:5"
																						},
																						"nativeSrc": "10311:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10311:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10332:2:5",
																								"nodeType": "YulLiteral",
																								"src": "10332:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "10328:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10328:3:5"
																						},
																						"nativeSrc": "10328:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "10328:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "10307:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "10307:3:5"
																				},
																				"nativeSrc": "10307:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "10307:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10292:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:5"
																		},
																		"nativeSrc": "10292:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10292:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10339:3:5",
																		"nodeType": "YulLiteral",
																		"src": "10339:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10288:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10288:3:5"
																},
																"nativeSrc": "10288:55:5",
																"nodeType": "YulFunctionCall",
																"src": "10288:55:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10280:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10280:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9687:662:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9837:9:5",
														"nodeType": "YulTypedName",
														"src": "9837:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9848:6:5",
														"nodeType": "YulTypedName",
														"src": "9848:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9856:6:5",
														"nodeType": "YulTypedName",
														"src": "9856:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9864:6:5",
														"nodeType": "YulTypedName",
														"src": "9864:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9872:6:5",
														"nodeType": "YulTypedName",
														"src": "9872:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9880:6:5",
														"nodeType": "YulTypedName",
														"src": "9880:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9891:4:5",
														"nodeType": "YulTypedName",
														"src": "9891:4:5",
														"type": ""
													}
												],
												"src": "9687:662:5"
											},
											{
												"body": {
													"nativeSrc": "10412:665:5",
													"nodeType": "YulBlock",
													"src": "10412:665:5",
													"statements": [
														{
															"nativeSrc": "10422:29:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10422:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10445:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "10445:5:5"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "10439:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "10439:5:5"
																},
																"nativeSrc": "10439:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10439:12:5"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "10426:9:5",
																	"nodeType": "YulTypedName",
																	"src": "10426:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10460:50:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10460:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10500:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10500:9:5"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10474:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "10474:25:5"
																},
																"nativeSrc": "10474:36:5",
																"nodeType": "YulFunctionCall",
																"src": "10474:36:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10464:6:5",
																	"nodeType": "YulTypedName",
																	"src": "10464:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10519:11:5",
															"nodeType": "YulVariableDeclaration",
															"src": "10519:11:5",
															"value": {
																"kind": "number",
																"nativeSrc": "10529:1:5",
																"nodeType": "YulLiteral",
																"src": "10529:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10523:2:5",
																	"nodeType": "YulTypedName",
																	"src": "10523:2:5",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10579:126:5",
																		"nodeType": "YulBlock",
																		"src": "10579:126:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10600:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10600:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "10609:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "10609:9:5"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "10624:3:5",
																											"nodeType": "YulLiteral",
																											"src": "10624:3:5",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "10620:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "10620:3:5"
																									},
																									"nativeSrc": "10620:8:5",
																									"nodeType": "YulFunctionCall",
																									"src": "10620:8:5"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "10605:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10605:3:5"
																							},
																							"nativeSrc": "10605:24:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10605:24:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10593:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10593:6:5"
																					},
																					"nativeSrc": "10593:37:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10593:37:5"
																				},
																				"nativeSrc": "10593:37:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "10593:37:5"
																			},
																			{
																				"nativeSrc": "10643:52:5",
																				"nodeType": "YulAssignment",
																				"src": "10643:52:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "10654:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "10654:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "10663:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "10663:6:5"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "10685:6:5",
																													"nodeType": "YulIdentifier",
																													"src": "10685:6:5"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "10678:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "10678:6:5"
																											},
																											"nativeSrc": "10678:14:5",
																											"nodeType": "YulFunctionCall",
																											"src": "10678:14:5"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "10671:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "10671:6:5"
																									},
																									"nativeSrc": "10671:22:5",
																									"nodeType": "YulFunctionCall",
																									"src": "10671:22:5"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "10659:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "10659:3:5"
																							},
																							"nativeSrc": "10659:35:5",
																							"nodeType": "YulFunctionCall",
																							"src": "10659:35:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10650:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10650:3:5"
																					},
																					"nativeSrc": "10650:45:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10650:45:5"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "10643:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "10643:3:5"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10572:133:5",
																	"nodeType": "YulCase",
																	"src": "10572:133:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10577:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10577:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10721:350:5",
																		"nodeType": "YulBlock",
																		"src": "10721:350:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10742:1:5",
																							"nodeType": "YulLiteral",
																							"src": "10742:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value",
																							"nativeSrc": "10745:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "10745:5:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "10735:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "10735:6:5"
																					},
																					"nativeSrc": "10735:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10735:16:5"
																				},
																				"nativeSrc": "10735:16:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "10735:16:5"
																			},
																			{
																				"nativeSrc": "10764:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10764:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10774:4:5",
																					"nodeType": "YulLiteral",
																					"src": "10774:4:5",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nativeSrc": "10768:2:5",
																						"nodeType": "YulTypedName",
																						"src": "10768:2:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10791:33:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10791:33:5",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10816:1:5",
																							"nodeType": "YulLiteral",
																							"src": "10816:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10819:4:5",
																							"nodeType": "YulLiteral",
																							"src": "10819:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "10806:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "10806:9:5"
																					},
																					"nativeSrc": "10806:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10806:18:5"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "10795:7:5",
																						"nodeType": "YulTypedName",
																						"src": "10795:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "10837:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "10837:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10846:1:5",
																					"nodeType": "YulLiteral",
																					"src": "10846:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "10841:1:5",
																						"nodeType": "YulTypedName",
																						"src": "10841:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10914:111:5",
																					"nodeType": "YulBlock",
																					"src": "10914:111:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "10943:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "10943:3:5"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "10948:1:5",
																												"nodeType": "YulIdentifier",
																												"src": "10948:1:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "10939:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "10939:3:5"
																										},
																										"nativeSrc": "10939:11:5",
																										"nodeType": "YulFunctionCall",
																										"src": "10939:11:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "10958:7:5",
																												"nodeType": "YulIdentifier",
																												"src": "10958:7:5"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "10952:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "10952:5:5"
																										},
																										"nativeSrc": "10952:14:5",
																										"nodeType": "YulFunctionCall",
																										"src": "10952:14:5"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "10932:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "10932:6:5"
																								},
																								"nativeSrc": "10932:35:5",
																								"nodeType": "YulFunctionCall",
																								"src": "10932:35:5"
																							},
																							"nativeSrc": "10932:35:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "10932:35:5"
																						},
																						{
																							"nativeSrc": "10984:27:5",
																							"nodeType": "YulAssignment",
																							"src": "10984:27:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "10999:7:5",
																										"nodeType": "YulIdentifier",
																										"src": "10999:7:5"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "11008:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "11008:2:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10995:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "10995:3:5"
																								},
																								"nativeSrc": "10995:16:5",
																								"nodeType": "YulFunctionCall",
																								"src": "10995:16:5"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "10984:7:5",
																									"nodeType": "YulIdentifier",
																									"src": "10984:7:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "10871:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "10871:1:5"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "10874:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "10874:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "10868:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "10868:2:5"
																					},
																					"nativeSrc": "10868:13:5",
																					"nodeType": "YulFunctionCall",
																					"src": "10868:13:5"
																				},
																				"nativeSrc": "10860:165:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "10882:19:5",
																					"nodeType": "YulBlock",
																					"src": "10882:19:5",
																					"statements": [
																						{
																							"nativeSrc": "10884:15:5",
																							"nodeType": "YulAssignment",
																							"src": "10884:15:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "10893:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "10893:1:5"
																									},
																									{
																										"name": "_2",
																										"nativeSrc": "10896:2:5",
																										"nodeType": "YulIdentifier",
																										"src": "10896:2:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "10889:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "10889:3:5"
																								},
																								"nativeSrc": "10889:10:5",
																								"nodeType": "YulFunctionCall",
																								"src": "10889:10:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "10884:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "10884:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "10864:3:5",
																					"nodeType": "YulBlock",
																					"src": "10864:3:5",
																					"statements": []
																				},
																				"src": "10860:165:5"
																			},
																			{
																				"nativeSrc": "11038:23:5",
																				"nodeType": "YulAssignment",
																				"src": "11038:23:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11049:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "11049:3:5"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "11054:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "11054:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11045:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11045:3:5"
																					},
																					"nativeSrc": "11045:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "11045:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "11038:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "11038:3:5"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "10714:357:5",
																	"nodeType": "YulCase",
																	"src": "10714:357:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10719:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10719:1:5",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "10550:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10550:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:1:5",
																		"nodeType": "YulLiteral",
																		"src": "10561:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10546:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10546:3:5"
																},
																"nativeSrc": "10546:17:5",
																"nodeType": "YulFunctionCall",
																"src": "10546:17:5"
															},
															"nativeSrc": "10539:532:5",
															"nodeType": "YulSwitch",
															"src": "10539:532:5"
														}
													]
												},
												"name": "abi_encode_string_storage",
												"nativeSrc": "10354:723:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10389:5:5",
														"nodeType": "YulTypedName",
														"src": "10389:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10396:3:5",
														"nodeType": "YulTypedName",
														"src": "10396:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10404:3:5",
														"nodeType": "YulTypedName",
														"src": "10404:3:5",
														"type": ""
													}
												],
												"src": "10354:723:5"
											},
											{
												"body": {
													"nativeSrc": "11266:205:5",
													"nodeType": "YulBlock",
													"src": "11266:205:5",
													"statements": [
														{
															"nativeSrc": "11276:48:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11276:48:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11312:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11312:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11320:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11320:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "11286:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "11286:25:5"
																},
																"nativeSrc": "11286:38:5",
																"nodeType": "YulFunctionCall",
																"src": "11286:38:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11280:2:5",
																	"nodeType": "YulTypedName",
																	"src": "11280:2:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11333:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11333:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11353:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11353:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11347:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "11347:5:5"
																},
																"nativeSrc": "11347:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11347:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11337:6:5",
																	"nodeType": "YulTypedName",
																	"src": "11337:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11408:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "11408:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11416:4:5",
																				"nodeType": "YulLiteral",
																				"src": "11416:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "11404:3:5"
																		},
																		"nativeSrc": "11404:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "11404:17:5"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "11423:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "11423:2:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11427:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11427:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11369:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "11369:34:5"
																},
																"nativeSrc": "11369:65:5",
																"nodeType": "YulFunctionCall",
																"src": "11369:65:5"
															},
															"nativeSrc": "11369:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "11369:65:5"
														},
														{
															"nativeSrc": "11443:22:5",
															"nodeType": "YulAssignment",
															"src": "11443:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "11454:2:5",
																		"nodeType": "YulIdentifier",
																		"src": "11454:2:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11458:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11458:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11450:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11450:3:5"
																},
																"nativeSrc": "11450:15:5",
																"nodeType": "YulFunctionCall",
																"src": "11450:15:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11443:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11443:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11082:389:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11234:3:5",
														"nodeType": "YulTypedName",
														"src": "11234:3:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11239:6:5",
														"nodeType": "YulTypedName",
														"src": "11239:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11247:6:5",
														"nodeType": "YulTypedName",
														"src": "11247:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11258:3:5",
														"nodeType": "YulTypedName",
														"src": "11258:3:5",
														"type": ""
													}
												],
												"src": "11082:389:5"
											},
											{
												"body": {
													"nativeSrc": "11595:63:5",
													"nodeType": "YulBlock",
													"src": "11595:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11612:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11612:3:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11617:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11617:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11605:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:5"
																},
																"nativeSrc": "11605:19:5",
																"nodeType": "YulFunctionCall",
																"src": "11605:19:5"
															},
															"nativeSrc": "11605:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "11605:19:5"
														},
														{
															"nativeSrc": "11633:19:5",
															"nodeType": "YulAssignment",
															"src": "11633:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11644:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11644:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11649:2:5",
																		"nodeType": "YulLiteral",
																		"src": "11649:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11640:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11640:3:5"
																},
																"nativeSrc": "11640:12:5",
																"nodeType": "YulFunctionCall",
																"src": "11640:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11633:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11476:182:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11571:3:5",
														"nodeType": "YulTypedName",
														"src": "11571:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11576:6:5",
														"nodeType": "YulTypedName",
														"src": "11576:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11587:3:5",
														"nodeType": "YulTypedName",
														"src": "11587:3:5",
														"type": ""
													}
												],
												"src": "11476:182:5"
											},
											{
												"body": {
													"nativeSrc": "11889:128:5",
													"nodeType": "YulBlock",
													"src": "11889:128:5",
													"statements": [
														{
															"nativeSrc": "11899:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "11899:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11938:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "11938:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11946:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "11946:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "11912:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "11912:25:5"
																},
																"nativeSrc": "11912:38:5",
																"nodeType": "YulFunctionCall",
																"src": "11912:38:5"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "11903:5:5",
																	"nodeType": "YulTypedName",
																	"src": "11903:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "11966:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "11966:5:5"
																	},
																	{
																		"hexValue": "312e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "11973:8:5",
																		"nodeType": "YulLiteral",
																		"src": "11973:8:5",
																		"type": "",
																		"value": "1.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11959:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "11959:6:5"
																},
																"nativeSrc": "11959:23:5",
																"nodeType": "YulFunctionCall",
																"src": "11959:23:5"
															},
															"nativeSrc": "11959:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "11959:23:5"
														},
														{
															"nativeSrc": "11991:20:5",
															"nodeType": "YulAssignment",
															"src": "11991:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "12002:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12002:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12009:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12009:1:5",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11998:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11998:3:5"
																},
																"nativeSrc": "11998:13:5",
																"nodeType": "YulFunctionCall",
																"src": "11998:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11991:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_29147069a2d0d7be183503cb9cdcc9c1230470bb5e311286e796d07c1a047f6f__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11663:354:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11865:3:5",
														"nodeType": "YulTypedName",
														"src": "11865:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11870:6:5",
														"nodeType": "YulTypedName",
														"src": "11870:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11881:3:5",
														"nodeType": "YulTypedName",
														"src": "11881:3:5",
														"type": ""
													}
												],
												"src": "11663:354:5"
											},
											{
												"body": {
													"nativeSrc": "12248:128:5",
													"nodeType": "YulBlock",
													"src": "12248:128:5",
													"statements": [
														{
															"nativeSrc": "12258:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12258:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12297:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12297:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12305:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12305:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "12271:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "12271:25:5"
																},
																"nativeSrc": "12271:38:5",
																"nodeType": "YulFunctionCall",
																"src": "12271:38:5"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "12262:5:5",
																	"nodeType": "YulTypedName",
																	"src": "12262:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "12325:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12325:5:5"
																	},
																	{
																		"hexValue": "322e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "12332:8:5",
																		"nodeType": "YulLiteral",
																		"src": "12332:8:5",
																		"type": "",
																		"value": "2.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12318:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12318:6:5"
																},
																"nativeSrc": "12318:23:5",
																"nodeType": "YulFunctionCall",
																"src": "12318:23:5"
															},
															"nativeSrc": "12318:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "12318:23:5"
														},
														{
															"nativeSrc": "12350:20:5",
															"nodeType": "YulAssignment",
															"src": "12350:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "12361:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12361:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12368:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12368:1:5",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12357:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12357:3:5"
																},
																"nativeSrc": "12357:13:5",
																"nodeType": "YulFunctionCall",
																"src": "12357:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12350:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12350:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_2c4eda4dfa144a2959617abf213b5014ed152a3f3c4521d49251b95896013803__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12022:354:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12224:3:5",
														"nodeType": "YulTypedName",
														"src": "12224:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12229:6:5",
														"nodeType": "YulTypedName",
														"src": "12229:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12240:3:5",
														"nodeType": "YulTypedName",
														"src": "12240:3:5",
														"type": ""
													}
												],
												"src": "12022:354:5"
											},
											{
												"body": {
													"nativeSrc": "12607:128:5",
													"nodeType": "YulBlock",
													"src": "12607:128:5",
													"statements": [
														{
															"nativeSrc": "12617:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12617:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12656:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "12656:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12664:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "12664:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "12630:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "12630:25:5"
																},
																"nativeSrc": "12630:38:5",
																"nodeType": "YulFunctionCall",
																"src": "12630:38:5"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "12621:5:5",
																	"nodeType": "YulTypedName",
																	"src": "12621:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "12684:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12684:5:5"
																	},
																	{
																		"hexValue": "332e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "12691:8:5",
																		"nodeType": "YulLiteral",
																		"src": "12691:8:5",
																		"type": "",
																		"value": "3.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12677:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "12677:6:5"
																},
																"nativeSrc": "12677:23:5",
																"nodeType": "YulFunctionCall",
																"src": "12677:23:5"
															},
															"nativeSrc": "12677:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "12677:23:5"
														},
														{
															"nativeSrc": "12709:20:5",
															"nodeType": "YulAssignment",
															"src": "12709:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "12720:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "12720:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12727:1:5",
																		"nodeType": "YulLiteral",
																		"src": "12727:1:5",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12716:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12716:3:5"
																},
																"nativeSrc": "12716:13:5",
																"nodeType": "YulFunctionCall",
																"src": "12716:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12709:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "12709:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_4d10d82a4c5ff6a5ff8664b03b6e2674a8d81db062548496b7bdf37c6efa6356__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12381:354:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12583:3:5",
														"nodeType": "YulTypedName",
														"src": "12583:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12588:6:5",
														"nodeType": "YulTypedName",
														"src": "12588:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12599:3:5",
														"nodeType": "YulTypedName",
														"src": "12599:3:5",
														"type": ""
													}
												],
												"src": "12381:354:5"
											},
											{
												"body": {
													"nativeSrc": "12966:128:5",
													"nodeType": "YulBlock",
													"src": "12966:128:5",
													"statements": [
														{
															"nativeSrc": "12976:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "12976:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13015:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13015:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13023:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13023:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "12989:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "12989:25:5"
																},
																"nativeSrc": "12989:38:5",
																"nodeType": "YulFunctionCall",
																"src": "12989:38:5"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "12980:5:5",
																	"nodeType": "YulTypedName",
																	"src": "12980:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "13043:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13043:5:5"
																	},
																	{
																		"hexValue": "342e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "13050:8:5",
																		"nodeType": "YulLiteral",
																		"src": "13050:8:5",
																		"type": "",
																		"value": "4.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13036:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13036:6:5"
																},
																"nativeSrc": "13036:23:5",
																"nodeType": "YulFunctionCall",
																"src": "13036:23:5"
															},
															"nativeSrc": "13036:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "13036:23:5"
														},
														{
															"nativeSrc": "13068:20:5",
															"nodeType": "YulAssignment",
															"src": "13068:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "13079:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13079:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13086:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13086:1:5",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13075:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13075:3:5"
																},
																"nativeSrc": "13075:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13075:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13068:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13068:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_4a775ad1648cf6d79df915218def47122b33dabdc3d5ddc487404303cca0dce7__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12740:354:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12942:3:5",
														"nodeType": "YulTypedName",
														"src": "12942:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12947:6:5",
														"nodeType": "YulTypedName",
														"src": "12947:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12958:3:5",
														"nodeType": "YulTypedName",
														"src": "12958:3:5",
														"type": ""
													}
												],
												"src": "12740:354:5"
											},
											{
												"body": {
													"nativeSrc": "13325:128:5",
													"nodeType": "YulBlock",
													"src": "13325:128:5",
													"statements": [
														{
															"nativeSrc": "13335:51:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13335:51:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13374:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "13374:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13382:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "13382:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_storage",
																	"nativeSrc": "13348:25:5",
																	"nodeType": "YulIdentifier",
																	"src": "13348:25:5"
																},
																"nativeSrc": "13348:38:5",
																"nodeType": "YulFunctionCall",
																"src": "13348:38:5"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "13339:5:5",
																	"nodeType": "YulTypedName",
																	"src": "13339:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "13402:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13402:5:5"
																	},
																	{
																		"hexValue": "352e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "13409:8:5",
																		"nodeType": "YulLiteral",
																		"src": "13409:8:5",
																		"type": "",
																		"value": "5.json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13395:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13395:6:5"
																},
																"nativeSrc": "13395:23:5",
																"nodeType": "YulFunctionCall",
																"src": "13395:23:5"
															},
															"nativeSrc": "13395:23:5",
															"nodeType": "YulExpressionStatement",
															"src": "13395:23:5"
														},
														{
															"nativeSrc": "13427:20:5",
															"nodeType": "YulAssignment",
															"src": "13427:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "13438:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "13438:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13445:1:5",
																		"nodeType": "YulLiteral",
																		"src": "13445:1:5",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13434:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13434:3:5"
																},
																"nativeSrc": "13434:13:5",
																"nodeType": "YulFunctionCall",
																"src": "13434:13:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13427:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "13427:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_stringliteral_6eea9a6de4c3985cf54063d4714fcf07fe5ed5060a46a71d2f0602caeb80fc5b__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13099:354:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13301:3:5",
														"nodeType": "YulTypedName",
														"src": "13301:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13306:6:5",
														"nodeType": "YulTypedName",
														"src": "13306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13317:3:5",
														"nodeType": "YulTypedName",
														"src": "13317:3:5",
														"type": ""
													}
												],
												"src": "13099:354:5"
											},
											{
												"body": {
													"nativeSrc": "13522:352:5",
													"nodeType": "YulBlock",
													"src": "13522:352:5",
													"statements": [
														{
															"nativeSrc": "13532:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "13532:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "13547:1:5",
																"nodeType": "YulLiteral",
																"src": "13547:1:5",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "13536:7:5",
																	"nodeType": "YulTypedName",
																	"src": "13536:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13557:10:5",
															"nodeType": "YulAssignment",
															"src": "13557:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "13566:1:5",
																"nodeType": "YulLiteral",
																"src": "13566:1:5",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13557:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "13557:5:5"
																}
															]
														},
														{
															"nativeSrc": "13576:13:5",
															"nodeType": "YulAssignment",
															"src": "13576:13:5",
															"value": {
																"name": "_base",
																"nativeSrc": "13584:5:5",
																"nodeType": "YulIdentifier",
																"src": "13584:5:5"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13576:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "13576:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13640:228:5",
																"nodeType": "YulBlock",
																"src": "13640:228:5",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13685:22:5",
																			"nodeType": "YulBlock",
																			"src": "13685:22:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13687:16:5",
																							"nodeType": "YulIdentifier",
																							"src": "13687:16:5"
																						},
																						"nativeSrc": "13687:18:5",
																						"nodeType": "YulFunctionCall",
																						"src": "13687:18:5"
																					},
																					"nativeSrc": "13687:18:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "13687:18:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13660:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "13660:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13674:1:5",
																									"nodeType": "YulLiteral",
																									"src": "13674:1:5",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13670:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "13670:3:5"
																							},
																							"nativeSrc": "13670:6:5",
																							"nodeType": "YulFunctionCall",
																							"src": "13670:6:5"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "13678:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "13678:4:5"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "13666:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "13666:3:5"
																					},
																					"nativeSrc": "13666:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "13666:17:5"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "13657:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "13657:2:5"
																			},
																			"nativeSrc": "13657:27:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13657:27:5"
																		},
																		"nativeSrc": "13654:53:5",
																		"nodeType": "YulIf",
																		"src": "13654:53:5"
																	},
																	{
																		"body": {
																			"nativeSrc": "13746:29:5",
																			"nodeType": "YulBlock",
																			"src": "13746:29:5",
																			"statements": [
																				{
																					"nativeSrc": "13748:25:5",
																					"nodeType": "YulAssignment",
																					"src": "13748:25:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "13761:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "13761:5:5"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "13768:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "13768:4:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "13757:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "13757:3:5"
																						},
																						"nativeSrc": "13757:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "13757:16:5"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "13748:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "13748:5:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "13727:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "13727:8:5"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "13737:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "13737:7:5"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13723:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13723:3:5"
																			},
																			"nativeSrc": "13723:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13723:22:5"
																		},
																		"nativeSrc": "13720:55:5",
																		"nodeType": "YulIf",
																		"src": "13720:55:5"
																	},
																	{
																		"nativeSrc": "13788:23:5",
																		"nodeType": "YulAssignment",
																		"src": "13788:23:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13800:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "13800:4:5"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "13806:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "13806:4:5"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "13796:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13796:3:5"
																			},
																			"nativeSrc": "13796:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13796:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "13788:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "13788:4:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "13824:34:5",
																		"nodeType": "YulAssignment",
																		"src": "13824:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "13840:7:5",
																					"nodeType": "YulIdentifier",
																					"src": "13840:7:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "13849:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "13849:8:5"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "13836:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "13836:3:5"
																			},
																			"nativeSrc": "13836:22:5",
																			"nodeType": "YulFunctionCall",
																			"src": "13836:22:5"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "13824:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "13824:8:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13609:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "13609:8:5"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "13619:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "13619:7:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13606:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "13606:2:5"
																},
																"nativeSrc": "13606:21:5",
																"nodeType": "YulFunctionCall",
																"src": "13606:21:5"
															},
															"nativeSrc": "13598:270:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13628:3:5",
																"nodeType": "YulBlock",
																"src": "13628:3:5",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13602:3:5",
																"nodeType": "YulBlock",
																"src": "13602:3:5",
																"statements": []
															},
															"src": "13598:270:5"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13458:416:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "13486:5:5",
														"nodeType": "YulTypedName",
														"src": "13486:5:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13493:8:5",
														"nodeType": "YulTypedName",
														"src": "13493:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13506:5:5",
														"nodeType": "YulTypedName",
														"src": "13506:5:5",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13513:4:5",
														"nodeType": "YulTypedName",
														"src": "13513:4:5",
														"type": ""
													}
												],
												"src": "13458:416:5"
											},
											{
												"body": {
													"nativeSrc": "13938:747:5",
													"nodeType": "YulBlock",
													"src": "13938:747:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "13976:52:5",
																"nodeType": "YulBlock",
																"src": "13976:52:5",
																"statements": [
																	{
																		"nativeSrc": "13990:10:5",
																		"nodeType": "YulAssignment",
																		"src": "13990:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "13999:1:5",
																			"nodeType": "YulLiteral",
																			"src": "13999:1:5",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "13990:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "13990:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14013:5:5",
																		"nodeType": "YulLeave",
																		"src": "14013:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13958:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "13958:8:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "13951:6:5"
																},
																"nativeSrc": "13951:16:5",
																"nodeType": "YulFunctionCall",
																"src": "13951:16:5"
															},
															"nativeSrc": "13948:80:5",
															"nodeType": "YulIf",
															"src": "13948:80:5"
														},
														{
															"body": {
																"nativeSrc": "14061:52:5",
																"nodeType": "YulBlock",
																"src": "14061:52:5",
																"statements": [
																	{
																		"nativeSrc": "14075:10:5",
																		"nodeType": "YulAssignment",
																		"src": "14075:10:5",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14084:1:5",
																			"nodeType": "YulLiteral",
																			"src": "14084:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14075:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "14075:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14098:5:5",
																		"nodeType": "YulLeave",
																		"src": "14098:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14047:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14047:4:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14040:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14040:6:5"
																},
																"nativeSrc": "14040:12:5",
																"nodeType": "YulFunctionCall",
																"src": "14040:12:5"
															},
															"nativeSrc": "14037:76:5",
															"nodeType": "YulIf",
															"src": "14037:76:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14149:52:5",
																		"nodeType": "YulBlock",
																		"src": "14149:52:5",
																		"statements": [
																			{
																				"nativeSrc": "14163:10:5",
																				"nodeType": "YulAssignment",
																				"src": "14163:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14172:1:5",
																					"nodeType": "YulLiteral",
																					"src": "14172:1:5",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14163:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14163:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14186:5:5",
																				"nodeType": "YulLeave",
																				"src": "14186:5:5"
																			}
																		]
																	},
																	"nativeSrc": "14142:59:5",
																	"nodeType": "YulCase",
																	"src": "14142:59:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14147:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14147:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "14217:123:5",
																		"nodeType": "YulBlock",
																		"src": "14217:123:5",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "14252:22:5",
																					"nodeType": "YulBlock",
																					"src": "14252:22:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "14254:16:5",
																									"nodeType": "YulIdentifier",
																									"src": "14254:16:5"
																								},
																								"nativeSrc": "14254:18:5",
																								"nodeType": "YulFunctionCall",
																								"src": "14254:18:5"
																							},
																							"nativeSrc": "14254:18:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "14254:18:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "14237:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "14237:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14247:3:5",
																							"nodeType": "YulLiteral",
																							"src": "14247:3:5",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "14234:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "14234:2:5"
																					},
																					"nativeSrc": "14234:17:5",
																					"nodeType": "YulFunctionCall",
																					"src": "14234:17:5"
																				},
																				"nativeSrc": "14231:43:5",
																				"nodeType": "YulIf",
																				"src": "14231:43:5"
																			},
																			{
																				"nativeSrc": "14287:25:5",
																				"nodeType": "YulAssignment",
																				"src": "14287:25:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "14300:8:5",
																							"nodeType": "YulIdentifier",
																							"src": "14300:8:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14310:1:5",
																							"nodeType": "YulLiteral",
																							"src": "14310:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "14296:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "14296:3:5"
																					},
																					"nativeSrc": "14296:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "14296:16:5"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14287:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "14287:5:5"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14325:5:5",
																				"nodeType": "YulLeave",
																				"src": "14325:5:5"
																			}
																		]
																	},
																	"nativeSrc": "14210:130:5",
																	"nodeType": "YulCase",
																	"src": "14210:130:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14215:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14215:1:5",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "14129:4:5",
																"nodeType": "YulIdentifier",
																"src": "14129:4:5"
															},
															"nativeSrc": "14122:218:5",
															"nodeType": "YulSwitch",
															"src": "14122:218:5"
														},
														{
															"body": {
																"nativeSrc": "14438:70:5",
																"nodeType": "YulBlock",
																"src": "14438:70:5",
																"statements": [
																	{
																		"nativeSrc": "14452:28:5",
																		"nodeType": "YulAssignment",
																		"src": "14452:28:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14465:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "14465:4:5"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "14471:8:5",
																					"nodeType": "YulIdentifier",
																					"src": "14471:8:5"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "14461:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "14461:3:5"
																			},
																			"nativeSrc": "14461:19:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14461:19:5"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14452:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "14452:5:5"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14493:5:5",
																		"nodeType": "YulLeave",
																		"src": "14493:5:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14362:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "14362:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14368:2:5",
																						"nodeType": "YulLiteral",
																						"src": "14368:2:5",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14359:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "14359:2:5"
																				},
																				"nativeSrc": "14359:12:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14359:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14376:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "14376:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14386:2:5",
																						"nodeType": "YulLiteral",
																						"src": "14386:2:5",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14373:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "14373:2:5"
																				},
																				"nativeSrc": "14373:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14373:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14355:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14355:3:5"
																		},
																		"nativeSrc": "14355:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14355:35:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "14399:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "14399:4:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14405:3:5",
																						"nodeType": "YulLiteral",
																						"src": "14405:3:5",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14396:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "14396:2:5"
																				},
																				"nativeSrc": "14396:13:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14396:13:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "14414:8:5",
																						"nodeType": "YulIdentifier",
																						"src": "14414:8:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14424:2:5",
																						"nodeType": "YulLiteral",
																						"src": "14424:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "14411:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "14411:2:5"
																				},
																				"nativeSrc": "14411:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14411:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14392:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:5"
																		},
																		"nativeSrc": "14392:36:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:36:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14352:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "14352:2:5"
																},
																"nativeSrc": "14352:77:5",
																"nodeType": "YulFunctionCall",
																"src": "14352:77:5"
															},
															"nativeSrc": "14349:159:5",
															"nodeType": "YulIf",
															"src": "14349:159:5"
														},
														{
															"nativeSrc": "14517:57:5",
															"nodeType": "YulVariableDeclaration",
															"src": "14517:57:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14559:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14559:4:5"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "14565:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "14565:8:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "14540:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "14540:18:5"
																},
																"nativeSrc": "14540:34:5",
																"nodeType": "YulFunctionCall",
																"src": "14540:34:5"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "14521:7:5",
																	"nodeType": "YulTypedName",
																	"src": "14521:7:5",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "14530:6:5",
																	"nodeType": "YulTypedName",
																	"src": "14530:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14619:22:5",
																"nodeType": "YulBlock",
																"src": "14619:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14621:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "14621:16:5"
																			},
																			"nativeSrc": "14621:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "14621:18:5"
																		},
																		"nativeSrc": "14621:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "14621:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "14589:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "14589:7:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14606:1:5",
																						"nodeType": "YulLiteral",
																						"src": "14606:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14602:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "14602:3:5"
																				},
																				"nativeSrc": "14602:6:5",
																				"nodeType": "YulFunctionCall",
																				"src": "14602:6:5"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "14610:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "14610:6:5"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14598:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14598:3:5"
																		},
																		"nativeSrc": "14598:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14598:19:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14586:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "14586:2:5"
																},
																"nativeSrc": "14586:32:5",
																"nodeType": "YulFunctionCall",
																"src": "14586:32:5"
															},
															"nativeSrc": "14583:58:5",
															"nodeType": "YulIf",
															"src": "14583:58:5"
														},
														{
															"nativeSrc": "14650:29:5",
															"nodeType": "YulAssignment",
															"src": "14650:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "14663:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "14663:7:5"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "14672:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "14672:6:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14659:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "14659:3:5"
																},
																"nativeSrc": "14659:20:5",
																"nodeType": "YulFunctionCall",
																"src": "14659:20:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "14650:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "14650:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "13879:806:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "13909:4:5",
														"nodeType": "YulTypedName",
														"src": "13909:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13915:8:5",
														"nodeType": "YulTypedName",
														"src": "13915:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13928:5:5",
														"nodeType": "YulTypedName",
														"src": "13928:5:5",
														"type": ""
													}
												],
												"src": "13879:806:5"
											},
											{
												"body": {
													"nativeSrc": "14758:72:5",
													"nodeType": "YulBlock",
													"src": "14758:72:5",
													"statements": [
														{
															"nativeSrc": "14768:56:5",
															"nodeType": "YulAssignment",
															"src": "14768:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14798:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "14798:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14808:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "14808:8:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14818:4:5",
																				"nodeType": "YulLiteral",
																				"src": "14818:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14804:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14804:3:5"
																		},
																		"nativeSrc": "14804:19:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14804:19:5"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "14777:20:5",
																	"nodeType": "YulIdentifier",
																	"src": "14777:20:5"
																},
																"nativeSrc": "14777:47:5",
																"nodeType": "YulFunctionCall",
																"src": "14777:47:5"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "14768:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "14768:5:5"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "14690:140:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14729:4:5",
														"nodeType": "YulTypedName",
														"src": "14729:4:5",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14735:8:5",
														"nodeType": "YulTypedName",
														"src": "14735:8:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14748:5:5",
														"nodeType": "YulTypedName",
														"src": "14748:5:5",
														"type": ""
													}
												],
												"src": "14690:140:5"
											},
											{
												"body": {
													"nativeSrc": "14867:95:5",
													"nodeType": "YulBlock",
													"src": "14867:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14884:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14884:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14891:3:5",
																				"nodeType": "YulLiteral",
																				"src": "14891:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14896:10:5",
																				"nodeType": "YulLiteral",
																				"src": "14896:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14887:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:5"
																		},
																		"nativeSrc": "14887:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14877:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14877:6:5"
																},
																"nativeSrc": "14877:31:5",
																"nodeType": "YulFunctionCall",
																"src": "14877:31:5"
															},
															"nativeSrc": "14877:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "14877:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14924:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14924:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14927:4:5",
																		"nodeType": "YulLiteral",
																		"src": "14927:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14917:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14917:6:5"
																},
																"nativeSrc": "14917:15:5",
																"nodeType": "YulFunctionCall",
																"src": "14917:15:5"
															},
															"nativeSrc": "14917:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "14917:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "14948:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14951:4:5",
																		"nodeType": "YulLiteral",
																		"src": "14951:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14941:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "14941:6:5"
																},
																"nativeSrc": "14941:15:5",
																"nodeType": "YulFunctionCall",
																"src": "14941:15:5"
															},
															"nativeSrc": "14941:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "14941:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14835:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14835:127:5"
											},
											{
												"body": {
													"nativeSrc": "15013:171:5",
													"nodeType": "YulBlock",
													"src": "15013:171:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "15044:111:5",
																"nodeType": "YulBlock",
																"src": "15044:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15065:1:5",
																					"nodeType": "YulLiteral",
																					"src": "15065:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15072:3:5",
																							"nodeType": "YulLiteral",
																							"src": "15072:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15077:10:5",
																							"nodeType": "YulLiteral",
																							"src": "15077:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "15068:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "15068:3:5"
																					},
																					"nativeSrc": "15068:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "15068:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15058:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "15058:6:5"
																			},
																			"nativeSrc": "15058:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "15058:31:5"
																		},
																		"nativeSrc": "15058:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "15058:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15109:1:5",
																					"nodeType": "YulLiteral",
																					"src": "15109:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15112:4:5",
																					"nodeType": "YulLiteral",
																					"src": "15112:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15102:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "15102:6:5"
																			},
																			"nativeSrc": "15102:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "15102:15:5"
																		},
																		"nativeSrc": "15102:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "15102:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15137:1:5",
																					"nodeType": "YulLiteral",
																					"src": "15137:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15140:4:5",
																					"nodeType": "YulLiteral",
																					"src": "15140:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "15130:6:5"
																			},
																			"nativeSrc": "15130:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "15130:15:5"
																		},
																		"nativeSrc": "15130:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "15130:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15033:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "15033:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15026:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "15026:6:5"
																},
																"nativeSrc": "15026:9:5",
																"nodeType": "YulFunctionCall",
																"src": "15026:9:5"
															},
															"nativeSrc": "15023:132:5",
															"nodeType": "YulIf",
															"src": "15023:132:5"
														},
														{
															"nativeSrc": "15164:14:5",
															"nodeType": "YulAssignment",
															"src": "15164:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15173:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "15173:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15176:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "15176:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15169:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "15169:3:5"
																},
																"nativeSrc": "15169:9:5",
																"nodeType": "YulFunctionCall",
																"src": "15169:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15164:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "15164:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14967:217:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14998:1:5",
														"nodeType": "YulTypedName",
														"src": "14998:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15001:1:5",
														"nodeType": "YulTypedName",
														"src": "15001:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15007:1:5",
														"nodeType": "YulTypedName",
														"src": "15007:1:5",
														"type": ""
													}
												],
												"src": "14967:217:5"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), value4)\n        calldatacopy(add(headStart, 160), value3, value4)\n        mstore(add(add(headStart, value4), 160), 0)\n        tail := add(add(headStart, and(add(value4, 31), not(31))), 160)\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := abi_encode_string_storage(value0, pos)\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), _1, length)\n        end := add(_1, length)\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_29147069a2d0d7be183503cb9cdcc9c1230470bb5e311286e796d07c1a047f6f__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := abi_encode_string_storage(value0, pos)\n        mstore(pos_1, \"1.json\")\n        end := add(pos_1, 6)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_2c4eda4dfa144a2959617abf213b5014ed152a3f3c4521d49251b95896013803__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := abi_encode_string_storage(value0, pos)\n        mstore(pos_1, \"2.json\")\n        end := add(pos_1, 6)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_4d10d82a4c5ff6a5ff8664b03b6e2674a8d81db062548496b7bdf37c6efa6356__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := abi_encode_string_storage(value0, pos)\n        mstore(pos_1, \"3.json\")\n        end := add(pos_1, 6)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_4a775ad1648cf6d79df915218def47122b33dabdc3d5ddc487404303cca0dce7__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := abi_encode_string_storage(value0, pos)\n        mstore(pos_1, \"4.json\")\n        end := add(pos_1, 6)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_stringliteral_6eea9a6de4c3985cf54063d4714fcf07fe5ed5060a46a71d2f0602caeb80fc5b__to_t_string_memory_ptr_t_bytes6__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := abi_encode_string_storage(value0, pos)\n        mstore(pos_1, \"5.json\")\n        end := add(pos_1, 6)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1609": [
									{
										"length": 32,
										"start": 652
									},
									{
										"length": 32,
										"start": 4233
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101bb575f3560e01c806370a08231116100f3578063c87b56dd11610093578063e0df5b6f1161006e578063e0df5b6f14610401578063e985e9c514610414578063f28ca1dd14610441578063f2fde38b14610449575f80fd5b8063c87b56dd146103bc578063d547cfb7146103cf578063dd62ed3e146103d7575f80fd5b80639b19251a116100ce5780639b19251a14610361578063a22cb46514610383578063a9059cbb14610396578063b88d4fde146103a9575f80fd5b806370a08231146103285780638da5cb5b1461034757806395d89b4114610359575f80fd5b8063313ce5671161015e578063504334c211610139578063504334c2146102dc57806353d6fd59146102ef5780636352211e14610302578063664dfa0114610315575f80fd5b8063313ce5671461028757806342842e0e146102c05780634f02c420146102d3575f80fd5b806318160ddd1161019957806318160ddd1461024057806318d217c31461025757806323b872dd1461026c5780632b9689581461027f575f80fd5b806306fdde03146101bf578063081812fc146101dd578063095ea7b31461021d575b5f80fd5b6101c761045c565b6040516101d49190611624565b60405180910390f35b6102056101eb366004611656565b60076020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101d4565b61023061022b366004611683565b6104e8565b60405190151581526020016101d4565b61024960035481565b6040519081526020016101d4565b61026a610265366004611748565b6106b4565b005b61023061027a366004611782565b6106ed565b61026a610a8f565b6102ae7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016101d4565b61026a6102ce366004611782565b610af3565b61024960045481565b61026a6102ea3660046117bb565b610bf6565b61026a6102fd36600461181b565b610c29565b610205610310366004611656565b610c7c565b61026a610323366004611656565b610cb6565b610249610336366004611854565b60056020525f908152604090205481565b5f54610205906001600160a01b031681565b6101c7610ce7565b61023061036f366004611854565b600c6020525f908152604090205460ff1681565b61026a61039136600461181b565b610cf4565b6102306103a4366004611683565b610d5f565b61026a6103b736600461186d565b610d6b565b6101c76103ca366004611656565b610e5f565b6101c7610f9a565b6102496103e5366004611900565b600660209081525f928352604080842090915290825290205481565b61026a61040f366004611748565b610fa7565b610230610422366004611900565b600860209081525f928352604080842090915290825290205460ff1681565b6101c7610fdc565b61026a610457366004611854565b610fe9565b6001805461046990611931565b80601f016020809104026020016040519081016040528092919081815260200182805461049590611931565b80156104e05780601f106104b7576101008083540402835291602001916104e0565b820191905f5260205f20905b8154815290600101906020018083116104c357829003601f168201915b505050505081565b5f60045482111580156104fa57505f82115b1561060f575f828152600960205260409020546001600160a01b031633811480159061054957506001600160a01b0381165f90815260086020908152604080832033845290915290205460ff16155b15610566576040516282b42960e81b815260040160405180910390fd5b5f8381526007602090815260409182902080546001600160a01b0319166001600160a01b038881169182179092559251868152908416917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a382846001600160a01b0316826001600160a01b03167f797365dabb18fa726ccbccbe18c6f24c34e3b0653f2e99ea873bd7b84763dde660405160405180910390a4506106aa565b335f8181526006602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a36040518281526001600160a01b0384169033907f1f01303a1ce9329d9963e1937c201e23c5543a9e3536e9edead087aec7dc6d839060200160405180910390a35b5060015b92915050565b5f546001600160a01b031633146106dd576040516282b42960e81b815260040160405180910390fd5b600d6106e982826119ad565b5050565b5f60045482111580156106ff57505f82115b15610a18575f828152600960205260409020546001600160a01b0385811691161461073d57604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b03831661076457604051634e46966960e11b815260040160405180910390fd5b336001600160a01b038516148015906107a057506001600160a01b0384165f90815260086020908152604080832033845290915290205460ff16155b80156107c257505f828152600760205260409020546001600160a01b03163314155b156107df576040516282b42960e81b815260040160405180910390fd5b6107e7611083565b6001600160a01b0385165f908152600560205260408120805490919061080e908490611a81565b9091555061081c9050611083565b6001600160a01b038085165f81815260056020908152604080832080549096019095558682526009815284822080546001600160a01b031990811690941790556007815284822080549093169092559187168252600a9052908120805461088590600190611a81565b8154811061089557610895611a94565b905f5260205f2001549050828114610906576001600160a01b0385165f908152600a60209081526040808320868452600b9092529091205481548392919081106108e1576108e1611a94565b5f918252602080832090910192909255848152600b9091526040808220548383529120555b6001600160a01b0385165f908152600a6020526040902080548061092c5761092c611aa8565b5f828152602080822083015f199081018390559092019092556001600160a01b038616808352600a825260408320805460018181018355828652938520018790559252905461097b9190611a81565b5f848152600b602052604080822092909255905184916001600160a01b0380881692908916917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4836001600160a01b0316856001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487610a01611083565b60405190815260200160405180910390a350610a84565b6001600160a01b0384165f9081526006602090815260408083203384529091529020545f198114610a7157610a4d8382611a81565b6001600160a01b0386165f9081526006602090815260408083203384529091529020555b610a7c8585856110b4565b915050610a88565b5060015b9392505050565b5f546001600160a01b03163314610ab8576040516282b42960e81b815260040160405180910390fd5b5f80546001600160a01b031916815560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b600454811180610b01575080155b15610b1f57604051631bf4348160e31b815260040160405180910390fd5b610b2a8383836106ed565b506001600160a01b0382163b15801590610bd35750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401525f608484015290919084169063150b7a029060a4016020604051808303815f875af1158015610ba2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bc69190611abc565b6001600160e01b03191614155b15610bf157604051633da6393160e01b815260040160405180910390fd5b505050565b5f546001600160a01b03163314610c1f576040516282b42960e81b815260040160405180910390fd5b6106e98282611259565b5f546001600160a01b03163314610c52576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03919091165f908152600c60205260409020805460ff1916911515919091179055565b5f818152600960205260409020546001600160a01b031680610cb15760405163c5723b5160e01b815260040160405180910390fd5b919050565b5f610cc15f83610d5f565b90508015156001036106e9578160035f828254610cde9190611a81565b90915550505050565b6002805461046990611931565b335f8181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b5f610a883384846110b4565b600454831180610d79575082155b15610d9757604051631bf4348160e31b815260040160405180910390fd5b610da28585856106ed565b506001600160a01b0384163b15801590610e3a5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610ded9033908a90899089908990600401611ae3565b6020604051808303815f875af1158015610e09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611abc565b6001600160e01b03191614155b15610e5857604051633da6393160e01b815260040160405180910390fd5b5050505050565b60605f600e8054610e6f90611931565b90501115610ea957600e610e8283611272565b604051602001610e93929190611ba4565b6040516020818303038152906040529050919050565b60605f83604051602001610ebf91815260200190565b6040516020818303038152906040528051906020012060f81c905060648160ff1611610f0d57600d604051602001610ef79190611bc8565b6040516020818303038152906040529150610f93565b60a08160ff1611610f2a57600d604051602001610ef79190611be9565b60d28160ff1611610f4757600d604051602001610ef79190611c0a565b60f08160ff1611610f6457600d604051602001610ef79190611c2b565b60ff8160ff1611610f9357600d604051602001610f819190611c4c565b60405160208183030381529060405291505b5092915050565b600e805461046990611931565b5f546001600160a01b03163314610fd0576040516282b42960e81b815260040160405180910390fd5b600e6106e982826119ad565b600d805461046990611931565b5f546001600160a01b03163314611012576040516282b42960e81b815260040160405180910390fd5b6001600160a01b038116611039576040516349e27cff60e01b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b0383169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b5f6110af7f0000000000000000000000000000000000000000000000000000000000000000600a611d4d565b905090565b5f806110be611083565b6001600160a01b038087165f818152600560205260408082208054948a16835290822054928252939450919290918691906110f98386611a81565b90915550506001600160a01b038087165f90815260056020908152604080832080548a019055928a168252600c9052205460ff16611188576001600160a01b0387165f90815260056020526040812054611154908590611d5b565b61115e8585611d5b565b6111689190611a81565b90505f5b818110156111855761117d89611302565b60010161116c565b50505b6001600160a01b0386165f908152600c602052604090205460ff166111ff575f6111b28483611d5b565b6001600160a01b0388165f908152600560205260409020546111d5908690611d5b565b6111df9190611a81565b90505f5b818110156111fc576111f488611423565b6001016111e3565b50505b856001600160a01b0316876001600160a01b03167fe59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e0314878760405161124491815260200190565b60405180910390a35060019695505050505050565b600161126583826119ad565b506002610bf182826119ad565b60605f61127e8361152b565b60010190505f8167ffffffffffffffff81111561129d5761129d6116ab565b6040519080825280601f01601f1916602001820160405280156112c7576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846112d157509392505050565b6001600160a01b03811661132957604051636edaef2f60e11b815260040160405180910390fd5b6001600160a01b0381165f908152600a60205260408120805461134e90600190611a81565b8154811061135e5761135e611a94565b905f5260205f2001549050600a5f836001600160a01b03166001600160a01b031681526020019081526020015f2080548061139b5761139b611aa8565b5f828152602080822083015f19908101839055909201909255828252600b815260408083208390556009825280832080546001600160a01b031990811690915560079092528083208054909216909155518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b03811661144a57604051634e46966960e11b815260040160405180910390fd5b60048054600101908190555f818152600960205260409020546001600160a01b03161561148a5760405163119b4fd360e11b815260040160405180910390fd5b5f81815260096020908152604080832080546001600160a01b0319166001600160a01b038716908117909155808452600a835290832080546001818101835582865293852001859055925290546114e19190611a81565b5f828152600b602052604080822092909255905182916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115695772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611595576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115b357662386f26fc10000830492506010015b6305f5e10083106115cb576305f5e100830492506008015b61271083106115df57612710830492506004015b606483106115f1576064830492506002015b600a83106106ae5760010192915050565b5f5b8381101561161c578181015183820152602001611604565b50505f910152565b602081525f8251806020840152611642816040850160208701611602565b601f01601f19169190910160400192915050565b5f60208284031215611666575f80fd5b5035919050565b80356001600160a01b0381168114610cb1575f80fd5b5f8060408385031215611694575f80fd5b61169d8361166d565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126116ce575f80fd5b813567ffffffffffffffff808211156116e9576116e96116ab565b604051601f8301601f19908116603f01168101908282118183101715611711576117116116ab565b81604052838152866020858801011115611729575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f60208284031215611758575f80fd5b813567ffffffffffffffff81111561176e575f80fd5b61177a848285016116bf565b949350505050565b5f805f60608486031215611794575f80fd5b61179d8461166d565b92506117ab6020850161166d565b9150604084013590509250925092565b5f80604083850312156117cc575f80fd5b823567ffffffffffffffff808211156117e3575f80fd5b6117ef868387016116bf565b93506020850135915080821115611804575f80fd5b50611811858286016116bf565b9150509250929050565b5f806040838503121561182c575f80fd5b6118358361166d565b915060208301358015158114611849575f80fd5b809150509250929050565b5f60208284031215611864575f80fd5b610a888261166d565b5f805f805f60808688031215611881575f80fd5b61188a8661166d565b94506118986020870161166d565b935060408601359250606086013567ffffffffffffffff808211156118bb575f80fd5b818801915088601f8301126118ce575f80fd5b8135818111156118dc575f80fd5b8960208285010111156118ed575f80fd5b9699959850939650602001949392505050565b5f8060408385031215611911575f80fd5b61191a8361166d565b91506119286020840161166d565b90509250929050565b600181811c9082168061194557607f821691505b60208210810361196357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610bf157805f5260205f20601f840160051c8101602085101561198e5750805b601f840160051c820191505b81811015610e58575f815560010161199a565b815167ffffffffffffffff8111156119c7576119c76116ab565b6119db816119d58454611931565b84611969565b602080601f831160018114611a0e575f84156119f75750858301515b5f19600386901b1c1916600185901b178555611a65565b5f85815260208120601f198616915b82811015611a3c57888601518255948401946001909101908401611a1d565b5085821015611a5957878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106ae576106ae611a6d565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215611acc575f80fd5b81516001600160e01b031981168114610a88575f80fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290525f828460a08401375f60a0848401015260a0601f19601f85011683010190509695505050505050565b5f8154611b4181611931565b60018281168015611b595760018114611b6e57611b9a565b60ff1984168752821515830287019450611b9a565b855f526020805f205f5b85811015611b915781548a820152908401908201611b78565b50505082870194505b5050505092915050565b5f611baf8285611b35565b8351611bbf818360208801611602565b01949350505050565b5f611bd38284611b35565b6518973539b7b760d11b81526006019392505050565b5f611bf48284611b35565b6519173539b7b760d11b81526006019392505050565b5f611c158284611b35565b6519973539b7b760d11b81526006019392505050565b5f611c368284611b35565b651a173539b7b760d11b81526006019392505050565b5f611c578284611b35565b651a973539b7b760d11b81526006019392505050565b600181815b80851115611ca757815f1904821115611c8d57611c8d611a6d565b80851615611c9a57918102915b93841c9390800290611c72565b509250929050565b5f82611cbd575060016106ae565b81611cc957505f6106ae565b8160018114611cdf5760028114611ce957611d05565b60019150506106ae565b60ff841115611cfa57611cfa611a6d565b50506001821b6106ae565b5060208310610133831016604e8410600b8410161715611d28575081810a6106ae565b611d328383611c6d565b805f1904821115611d4557611d45611a6d565b029392505050565b5f610a8860ff841683611caf565b5f82611d7557634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122004590b12c2c1197e74bd5954694bfe46a8ec288c2a1d66e9f9afada6930b3ac964736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0xF28CA1DD EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x449 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xD547CFB7 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x3A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x504334C2 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x504334C2 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x53D6FD59 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x664DFA01 EQ PUSH2 0x315 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x4F02C420 EQ PUSH2 0x2D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x18D217C3 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2B968958 EQ PUSH2 0x27F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x21D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH2 0x45C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x22B CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x26A PUSH2 0xA8F JUMP JUMPDEST PUSH2 0x2AE PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x249 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x17BB JUMP JUMPDEST PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xC7C JUMP JUMPDEST PUSH2 0x26A PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x205 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xCE7 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x3A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x26A PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x186D JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xF9A JUMP JUMPDEST PUSH2 0x249 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26A PUSH2 0x40F CALLDATASIZE PUSH1 0x4 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C7 PUSH2 0xFDC JUMP JUMPDEST PUSH2 0x26A PUSH2 0x457 CALLDATASIZE PUSH1 0x4 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x1931 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0x60F JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0x549 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP5 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x797365DABB18FA726CCBCCBE18C6F24C34E3B0653F2E99EA873BD7B84763DDE6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x6AA JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 CALLER SWAP1 PUSH32 0x1F01303A1CE9329D9963E1937C201E23C5543A9E3536E9EDEAD087AEC7DC6D83 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD DUP3 GT ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH0 DUP3 GT JUMPDEST ISZERO PUSH2 0xA18 JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x764 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x7A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x7C2 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x7DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E7 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x80E SWAP1 DUP5 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x81C SWAP1 POP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP7 ADD SWAP1 SWAP6 SSTORE DUP7 DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP5 OR SWAP1 SSTORE PUSH1 0x7 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SWAP2 DUP8 AND DUP3 MSTORE PUSH1 0xA SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x885 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0x1A94 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP3 DUP2 EQ PUSH2 0x906 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0xB SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SLOAD DUP4 SWAP3 SWAP2 SWAP1 DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0x1A94 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 DUP4 MSTORE SWAP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x1AA8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP8 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 SWAP1 DUP10 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 PUSH2 0xA01 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0xA71 JUMPI PUSH2 0xA4D DUP4 DUP3 PUSH2 0x1A81 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0xA7C DUP6 DUP6 DUP6 PUSH2 0x10B4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA88 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 GT DUP1 PUSH2 0xB01 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB1F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF43481 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2A DUP4 DUP4 DUP4 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xBD3 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH0 PUSH1 0x84 DUP5 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x1259 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xCB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xC5723B51 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC1 PUSH0 DUP4 PUSH2 0xD5F JUMP JUMPDEST SWAP1 POP DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x6E9 JUMPI DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDE SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 CALLER DUP5 DUP5 PUSH2 0x10B4 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP4 GT DUP1 PUSH2 0xD79 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0xD97 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BF43481 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA2 DUP6 DUP6 DUP6 PUSH2 0x6ED JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE3A JUMPI POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xDED SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1AE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE2D SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xE58 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3DA63931 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xE DUP1 SLOAD PUSH2 0xE6F SWAP1 PUSH2 0x1931 JUMP JUMPDEST SWAP1 POP GT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0xE PUSH2 0xE82 DUP4 PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE93 SWAP3 SWAP2 SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEBF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0xFF AND GT PUSH2 0xF0D JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH2 0xF93 JUMP JUMPDEST PUSH1 0xA0 DUP2 PUSH1 0xFF AND GT PUSH2 0xF2A JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0xD2 DUP2 PUSH1 0xFF AND GT PUSH2 0xF47 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0xF0 DUP2 PUSH1 0xFF AND GT PUSH2 0xF64 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND GT PUSH2 0xF93 JUMPI PUSH1 0xD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH2 0x6E9 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH2 0x469 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1012 JUMPI PUSH1 0x40 MLOAD PUSH3 0x82B429 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49E27CFF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 CALLER SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AF PUSH32 0x0 PUSH1 0xA PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x10BE PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP11 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 SLOAD SWAP3 DUP3 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 SWAP1 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x10F9 DUP4 DUP7 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP11 ADD SWAP1 SSTORE SWAP3 DUP11 AND DUP3 MSTORE PUSH1 0xC SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1188 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1154 SWAP1 DUP6 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x115E DUP6 DUP6 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x1168 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1185 JUMPI PUSH2 0x117D DUP10 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x116C JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x11FF JUMPI PUSH0 PUSH2 0x11B2 DUP5 DUP4 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x11D5 SWAP1 DUP7 SWAP1 PUSH2 0x1D5B JUMP JUMPDEST PUSH2 0x11DF SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11F4 DUP9 PUSH2 0x1423 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x11E3 JUMP JUMPDEST POP POP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xE59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1265 DUP4 DUP3 PUSH2 0x19AD JUMP JUMPDEST POP PUSH1 0x2 PUSH2 0xBF1 DUP3 DUP3 PUSH2 0x19AD JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x127E DUP4 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x12D1 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EDAEF2F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x134E SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x135E JUMPI PUSH2 0x135E PUSH2 0x1A94 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0xA PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x139B JUMPI PUSH2 0x139B PUSH2 0x1AA8 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE DUP3 DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x9 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE MLOAD DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x144A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4E469669 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x148A JUMPI PUSH1 0x40 MLOAD PUSH4 0x119B4FD3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0xA DUP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP4 DUP6 KECCAK256 ADD DUP6 SWAP1 SSTORE SWAP3 MSTORE SWAP1 SLOAD PUSH2 0x14E1 SWAP2 SWAP1 PUSH2 0x1A81 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1569 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1595 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x15B3 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x15CB JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x15DF JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x15F1 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x6AE JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x161C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1604 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1642 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1666 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCB1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1694 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x169D DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x16CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E9 JUMPI PUSH2 0x16E9 PUSH2 0x16AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1711 JUMPI PUSH2 0x1711 PUSH2 0x16AB JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1729 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1758 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x176E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x177A DUP5 DUP3 DUP6 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1794 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x179D DUP5 PUSH2 0x166D JUMP JUMPDEST SWAP3 POP PUSH2 0x17AB PUSH1 0x20 DUP6 ADD PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x17EF DUP7 DUP4 DUP8 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1804 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1811 DUP6 DUP3 DUP7 ADD PUSH2 0x16BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1835 DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1849 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP3 PUSH2 0x166D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x188A DUP7 PUSH2 0x166D JUMP JUMPDEST SWAP5 POP PUSH2 0x1898 PUSH1 0x20 DUP8 ADD PUSH2 0x166D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x18DC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x18ED JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x191A DUP4 PUSH2 0x166D JUMP JUMPDEST SWAP2 POP PUSH2 0x1928 PUSH1 0x20 DUP5 ADD PUSH2 0x166D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1945 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1963 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xBF1 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x198E JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x199A JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C7 JUMPI PUSH2 0x19C7 PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x19DB DUP2 PUSH2 0x19D5 DUP5 SLOAD PUSH2 0x1931 JUMP JUMPDEST DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A0E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x19F7 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1A65 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A3C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A1D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1A59 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6AE JUMPI PUSH2 0x6AE PUSH2 0x1A6D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 DUP3 DUP5 PUSH1 0xA0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xA0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xA0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SLOAD PUSH2 0x1B41 DUP2 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1B59 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B6E JUMPI PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1B9A JUMP JUMPDEST DUP6 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B91 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1B78 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAF DUP3 DUP6 PUSH2 0x1B35 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1BBF DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1602 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD3 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x18973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF4 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x19173539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C15 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x19973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x1A173539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C57 DUP3 DUP5 PUSH2 0x1B35 JUMP JUMPDEST PUSH6 0x1A973539B7B7 PUSH1 0xD1 SHL DUP2 MSTORE PUSH1 0x6 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1CA7 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1C8D JUMPI PUSH2 0x1C8D PUSH2 0x1A6D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1C9A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1C72 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1CBD JUMPI POP PUSH1 0x1 PUSH2 0x6AE JUMP JUMPDEST DUP2 PUSH2 0x1CC9 JUMPI POP PUSH0 PUSH2 0x6AE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1CDF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1CE9 JUMPI PUSH2 0x1D05 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6AE JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1CFA JUMPI PUSH2 0x1CFA PUSH2 0x1A6D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6AE JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1D28 JUMPI POP DUP2 DUP2 EXP PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x1D32 DUP4 DUP4 PUSH2 0x1C6D JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1D45 JUMPI PUSH2 0x1D45 PUSH2 0x1A6D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1CAF JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D75 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MSIZE SIGNEXTEND SLT 0xC2 0xC1 NOT PUSH31 0x74BD5954694BFE46A8EC288C2A1D66E9F9AFADA6930B3AC964736F6C634300 ADDMOD AND STOP CALLER ",
							"sourceMap": "139:1604:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2838:18:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3518:46;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3518:46:3;;;;;;-1:-1:-1;;;;;1019:32:5;;;1001:51;;989:2;974:18;3518:46:3;855:203:5;5298:747:3;;;;;;:::i;:::-;;:::i;:::-;;;1665:14:5;;1658:22;1640:41;;1628:2;1613:18;5298:747:3;1500:187:5;3065:26:3;;;;;;;;;1838:25:5;;;1826:2;1811:18;3065:26:3;1692:177:5;570:96:4;;;;;;:::i;:::-;;:::i;:::-;;6441:1864:3;;;;;;:::i;:::-;;:::i;764:147::-;;;:::i;2968:31::-;;;;;;;;3562:4:5;3550:17;;;3532:36;;3520:2;3505:18;2968:31:3;3390:184:5;8590:472:3;;;;;;:::i;:::-;;:::i;3187:21::-;;;;;;782:131:4;;;;;;:::i;:::-;;:::i;4645:109:3:-;;;;;;:::i;:::-;;:::i;4823:187::-;;;;;;:::i;:::-;;:::i;392:172:4:-;;;;;;:::i;:::-;;:::i;3290:44:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;229:20;;;;;-1:-1:-1;;;;;229:20:3;;;2889;;;:::i;4114:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6093:203;;;;;;:::i;:::-;;:::i;8361:155::-;;;;;;:::i;:::-;;:::i;9154:512::-;;;;;;:::i;:::-;;:::i;919:822:4:-;;;;;;:::i;:::-;;:::i;196:26::-;;;:::i;3401:64:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;672:104:4;;;;;;:::i;:::-;;:::i;3626:68:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;169:21:4;;;:::i;545:213:3:-;;;;;;:::i;:::-;;:::i;2838:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5298:747::-;5398:4;5432:6;;5418:10;:20;;:38;;;;;5455:1;5442:10;:14;5418:38;5414:603;;;5472:13;5488:20;;;:8;:20;;;;;;-1:-1:-1;;;;;5488:20:3;5527:10;:19;;;;;:59;;-1:-1:-1;;;;;;5551:23:3;;;;;;:16;:23;;;;;;;;5575:10;5551:35;;;;;;;;;;5550:36;5527:59;5523:119;;;5613:14;;-1:-1:-1;;;5613:14:3;;;;;;;;;;;5523:119;5656:23;;;;:11;:23;;;;;;;;;:33;;-1:-1:-1;;;;;;5656:33:3;-1:-1:-1;;;;;5656:33:3;;;;;;;;;5709:36;;1838:25:5;;;5709:36:3;;;;;;1811:18:5;5709:36:3;;;;;;;5795:10;5786:7;-1:-1:-1;;;;;5764:42:3;5779:5;-1:-1:-1;;;;;5764:42:3;;;;;;;;;;;5458:359;5414:603;;;5847:10;5837:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;5837:30:3;;;;;;;;;;;;:43;;;5900:41;1838:25:5;;;5837:30:3;;5847:10;5900:41;;1811:18:5;5900:41:3;;;;;;;5960:46;;1838:25:5;;;-1:-1:-1;;;;;5960:46:3;;;5974:10;;5960:46;;1826:2:5;1811:18;5960:46:3;;;;;;;5414:603;-1:-1:-1;6034:4:3;5298:747;;;;;:::o;570:96:4:-;313:5:3;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;641:7:4::1;:18;651:8:::0;641:7;:18:::1;:::i;:::-;;570:96:::0;:::o;6441:1864:3:-;6561:4;6595:6;;6581:10;:20;;:38;;;;;6618:1;6605:10;:14;6581:38;6577:1701;;;6647:20;;;;:8;:20;;;;;;-1:-1:-1;;;;;6639:28:3;;;6647:20;;6639:28;6635:89;;6694:15;;-1:-1:-1;;;6694:15:3;;;;;;;;;;;6635:89;-1:-1:-1;;;;;6742:16:3;;6738:80;;6785:18;;-1:-1:-1;;;6785:18:3;;;;;;;;;;;6738:80;6853:10;-1:-1:-1;;;;;6853:18:3;;;;;;:73;;-1:-1:-1;;;;;;6892:22:3;;;;;;:16;:22;;;;;;;;6915:10;6892:34;;;;;;;;;;6891:35;6853:73;:130;;;;-1:-1:-1;6960:23:3;;;;:11;:23;;;;;;-1:-1:-1;;;;;6960:23:3;6946:10;:37;;6853:130;6832:220;;;7023:14;;-1:-1:-1;;;7023:14:3;;;;;;;;;;;6832:220;7085:10;:8;:10::i;:::-;-1:-1:-1;;;;;7066:15:3;;;;;;:9;:15;;;;;:29;;:15;;;:29;;;;;:::i;:::-;;;;-1:-1:-1;7155:10:3;;-1:-1:-1;7155:8:3;:10::i;:::-;-1:-1:-1;;;;;7138:13:3;;;;;;;:9;:13;;;;;;;;:27;;;;;;;;7194:20;;;:8;:20;;;;;:25;;-1:-1:-1;;;;;;7194:25:3;;;;;;;;7240:11;:23;;;;;7233:30;;;;;;;;7338:12;;;;;:6;:12;;;;;7351:19;;:23;;-1:-1:-1;;7351:23:3;:::i;:::-;7338:37;;;;;;;;:::i;:::-;;;;;;;;;7318:57;;7419:10;7406:9;:23;7402:285;;-1:-1:-1;;;;;7508:12:3;;;;;;:6;:12;;;;;;;;7521:23;;;:11;:23;;;;;;;7508:37;;7548:9;;7508:12;7521:23;7508:37;;;;;;:::i;:::-;;;;;;;;;;;;:49;;;;7649:23;;;:11;:23;;;;;;;;7624:22;;;;;:48;7402:285;-1:-1:-1;;;;;7720:12:3;;;;;;:6;:12;;;;;:18;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;7720:18:3;;;;;;;;;;;;-1:-1:-1;;;;;7790:10:3;;;;;:6;:10;;;;;:27;;7720:18;7790:27;;;;;;;;;;;;;;;7898:10;;:17;;:21;;7720:18;7898:21;:::i;:::-;7872:23;;;;:11;:23;;;;;;:47;;;;7939:30;;7884:10;;-1:-1:-1;;;;;7939:30:3;;;;;;;;;;;8008:2;-1:-1:-1;;;;;7988:35:3;8002:4;-1:-1:-1;;;;;7988:35:3;;8012:10;:8;:10::i;:::-;7988:35;;1838:25:5;;;1826:2;1811:18;7988:35:3;;;;;;;6621:1413;6577:1701;;;-1:-1:-1;;;;;8072:15:3;;8054;8072;;;:9;:15;;;;;;;;8088:10;8072:27;;;;;;;;-1:-1:-1;;8118:28:3;;8114:100;;8194:20;8204:10;8194:7;:20;:::i;:::-;-1:-1:-1;;;;;8164:15:3;;;;;;:9;:15;;;;;;;;8180:10;8164:27;;;;;;;:50;8114:100;8236:31;8246:4;8252:2;8256:10;8236:9;:31::i;:::-;8229:38;;;;;6577:1701;-1:-1:-1;8294:4:3;6441:1864;;;;;;:::o;764:147::-;313:5;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;842:1:::1;826:18:::0;;-1:-1:-1;;;;;;826:18:3::1;::::0;;860:44:::1;::::0;881:10:::1;::::0;860:44:::1;::::0;842:1;;860:44:::1;764:147::o:0;8590:472::-;8718:6;;8713:2;:11;:22;;;-1:-1:-1;8728:7:3;;8713:22;8709:71;;;8758:11;;-1:-1:-1;;;8758:11:3;;;;;;;;;;;8709:71;8790:26;8803:4;8809:2;8813;8790:12;:26::i;:::-;-1:-1:-1;;;;;;8844:14:3;;;:19;;;;:152;;-1:-1:-1;8879:61:3;;-1:-1:-1;;;8879:61:3;;;8915:10;8879:61;;;9137:34:5;-1:-1:-1;;;;;9207:15:5;;;9187:18;;;9180:43;9239:18;;;9232:34;;;9302:3;9282:18;;;9275:31;-1:-1:-1;9322:19:5;;;9315:30;8956:40:3;;8879:35;;;;8956:40;;9362:19:5;;8879:61:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;8879:117:3;;;8844:152;8827:229;;;9028:17;;-1:-1:-1;;;9028:17:3;;;;;;;;;;;8827:229;8590:472;;;:::o;782:131:4:-;313:5:3;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;876:30:4::1;891:5;898:7;876:14;:30::i;4645:109:3:-:0;313:5;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;-1:-1:-1;;;;;4722:17:3;;;::::1;;::::0;;;:9:::1;:17;::::0;;;;:25;;-1:-1:-1;;4722:25:3::1;::::0;::::1;;::::0;;;::::1;::::0;;4645:109::o;4823:187::-;4881:13;4914:12;;;:8;:12;;;;;;-1:-1:-1;;;;;4914:12:3;;4937:67;;4983:10;;-1:-1:-1;;;4983:10:3;;;;;;;;;;;4937:67;4823:187;;;:::o;392:172:4:-;439:12;454:28;471:1;475:6;454:8;:28::i;:::-;439:43;-1:-1:-1;496:15:4;;;507:4;496:15;492:66;;541:6;526:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;429:135:4;392:172;:::o;2889:20:3:-;;;;;;;:::i;6093:203::-;6195:10;6178:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;6178:38:3;;;;;;;;;;;;:49;;-1:-1:-1;;6178:49:3;;;;;;;;;;6243:46;;1640:41:5;;;6178:38:3;;6195:10;6243:46;;1613:18:5;6243:46:3;;;;;;;6093:203;;:::o;8361:155::-;8453:4;8476:33;8486:10;8498:2;8502:6;8476:9;:33::i;9154:512::-;9312:6;;9307:2;:11;:22;;;-1:-1:-1;9322:7:3;;9307:22;9303:71;;;9352:11;;-1:-1:-1;;;9352:11:3;;;;;;;;;;;9303:71;9392:26;9405:4;9411:2;9415;9392:12;:26::i;:::-;-1:-1:-1;;;;;;9446:14:3;;;:19;;;;:154;;-1:-1:-1;9481:63:3;;-1:-1:-1;;;9481:63:3;;;9560:40;-1:-1:-1;;;;;9481:35:3;;;9560:40;;9481:63;;9517:10;;9529:4;;9535:2;;9539:4;;;;9481:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9481:119:3;;;9446:154;9429:231;;;9632:17;;-1:-1:-1;;;9632:17:3;;;;;;;;;;;9429:231;9154:512;;;;;:::o;919:822:4:-;979:13;1037:1;1014:12;1008:26;;;;;:::i;:::-;;;:30;1004:731;;;1075:12;1089:20;1106:2;1089:16;:20::i;:::-;1061:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1054:56;;919:822;;;:::o;1004:731::-;1141:17;1172:10;1225:2;1208:20;;;;;;11605:19:5;;11649:2;11640:12;;11476:182;1208:20:4;;;;;;;;;;;;;1198:31;;;;;;1185:46;;1172:59;;1257:3;1249:4;:11;;;1245:460;;1300:7;1286:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;1280:37;;1245:460;;;1350:3;1342:4;:11;;;1338:367;;1393:7;1379:31;;;;;;;;:::i;1338:367::-;1443:3;1435:4;:11;;;1431:274;;1486:7;1472:31;;;;;;;;:::i;1431:274::-;1536:3;1528:4;:11;;;1524:181;;1579:7;1565:31;;;;;;;;:::i;1524:181::-;1629:3;1621:4;:11;;;1617:88;;1672:7;1658:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;1652:37;;1617:88;-1:-1:-1;1721:3:4;919:822;-1:-1:-1;;919:822:4:o;196:26::-;;;;;;;:::i;672:104::-;313:5:3;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;745:12:4::1;:24;760:9:::0;745:12;:24:::1;:::i;169:21::-:0;;;;;;;:::i;545:213:3:-;313:5;;-1:-1:-1;;;;;313:5:3;299:10;:19;295:46;;327:14;;-1:-1:-1;;;327:14:3;;;;;;;;;;;295:46;-1:-1:-1;;;;;627:20:3;::::1;623:47;;656:14;;-1:-1:-1::0;;;656:14:3::1;;;;;;;;;;;623:47;681:5;:14:::0;;-1:-1:-1;;;;;;681:14:3::1;-1:-1:-1::0;;;;;681:14:3;::::1;::::0;;::::1;::::0;;711:40:::1;::::0;681:14;;732:10:::1;::::0;711:40:::1;::::0;681:5;711:40:::1;545:213:::0;:::o;10825:90::-;10868:7;10894:14;10900:8;10894:2;:14;:::i;:::-;10887:21;;10825:90;:::o;9731:1058::-;9840:4;9856:12;9871:10;:8;:10::i;:::-;-1:-1:-1;;;;;9921:15:3;;;9891:27;9921:15;;;:9;:15;;;;;;;;9978:13;;;;;;;;;10002:15;;;9856:25;;-1:-1:-1;9921:15:3;;9978:13;;10021:6;;9921:15;10002:25;10021:6;9921:15;10002:25;:::i;:::-;;;;-1:-1:-1;;;;;;;10062:13:3;;;;;;;:9;:13;;;;;;;;:23;;;;;;10166:15;;;;;:9;:15;;;;;;10161:245;;-1:-1:-1;;;;;10270:15:3;;10197:22;10270:15;;;:9;:15;;;;;;:22;;10288:4;;10270:22;:::i;:::-;10223:26;10245:4;10223:19;:26;:::i;:::-;10222:71;;;;:::i;:::-;10197:96;;10312:9;10307:89;10331:14;10327:1;:18;10307:89;;;10370:11;10376:4;10370:5;:11::i;:::-;10347:3;;10307:89;;;;10183:223;10161:245;-1:-1:-1;;;;;10479:13:3;;;;;;:9;:13;;;;;;;;10474:241;;10508:22;10575:28;10599:4;10575:21;:28;:::i;:::-;-1:-1:-1;;;;;10534:13:3;;;;;;:9;:13;;;;;;:20;;10550:4;;10534:20;:::i;:::-;10533:71;;;;:::i;:::-;10508:96;;10623:9;10618:87;10642:14;10638:1;:18;10618:87;;;10681:9;10687:2;10681:5;:9::i;:::-;10658:3;;10618:87;;;;10494:221;10474:241;10750:2;-1:-1:-1;;;;;10730:31:3;10744:4;-1:-1:-1;;;;;10730:31:3;;10754:6;10730:31;;;;1838:25:5;;1826:2;1811:18;;1692:177;10730:31:3;;;;;;;;-1:-1:-1;10778:4:3;;9731:1058;-1:-1:-1;;;;;;9731:1058:3:o;11785:154::-;11894:4;:12;11901:5;11894:4;:12;:::i;:::-;-1:-1:-1;11916:6:3;:16;11925:7;11916:6;:16;:::i;637:698:0:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:0;-1:-1:-1;794:41:0;-1:-1:-1;955:28:0;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:0;-1:-1:-1;;;1175:2:0;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:0;1010:282;1256:21;-1:-1:-1;1312:6:0;637:698;-1:-1:-1;;;637:698:0:o;11418:361:3:-;-1:-1:-1;;;;;11478:18:3;;11474:71;;11519:15;;-1:-1:-1;;;11519:15:3;;;;;;;;;;;11474:71;-1:-1:-1;;;;;11568:12:3;;11555:10;11568:12;;;:6;:12;;;;;11581:19;;:23;;11603:1;;11581:23;:::i;:::-;11568:37;;;;;;;;:::i;:::-;;;;;;;;;11555:50;;11615:6;:12;11622:4;-1:-1:-1;;;;;11615:12:3;-1:-1:-1;;;;;11615:12:3;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;11615:18:3;;;;;;;;;;;;11650:15;;;:11;:15;;;;;;11643:22;;;11682:8;:12;;;;;11675:19;;-1:-1:-1;;;;;;11675:19:3;;;;;;11711:11;:15;;;;;;11704:22;;;;;;;;11742:30;11662:2;;11615:18;-1:-1:-1;;;;;11742:30:3;;;;;11615:18;;11742:30;11464:315;11418:361;:::o;10921:491::-;-1:-1:-1;;;;;10979:16:3;;10975:72;;11018:18;;-1:-1:-1;;;11018:18:3;;;;;;;;;;;10975:72;11081:6;:8;;;;;;;;:6;11181:12;;;:8;:12;;;;;;-1:-1:-1;;;;;11181:12:3;:26;11177:79;;11230:15;;-1:-1:-1;;;11230:15:3;;;;;;;;;;;11177:79;11266:12;;;;:8;:12;;;;;;;;:17;;-1:-1:-1;;;;;;11266:17:3;-1:-1:-1;;;;;11266:17:3;;;;;;;;11293:10;;;:6;:10;;;;;:19;;-1:-1:-1;11293:19:3;;;;;;;;;;;;;;;11340:10;;:17;;:21;;-1:-1:-1;11340:21:3;:::i;:::-;11322:15;;;;:11;:15;;;;;;:39;;;;11377:28;;11334:2;;-1:-1:-1;;;;;11377:28:3;;;;;11322:15;;11377:28;10965:447;10921:491;:::o;12214:916:1:-;12267:7;;-1:-1:-1;;;12342:17:1;;12338:103;;-1:-1:-1;;;12379:17:1;;;-1:-1:-1;12424:2:1;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:1;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:1;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:1;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:1;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:1;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:1:o;14:250:5:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:5;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:5;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:5:o;670:180::-;729:6;782:2;770:9;761:7;757:23;753:32;750:52;;;798:1;795;788:12;750:52;-1:-1:-1;821:23:5;;670:180;-1:-1:-1;670:180:5:o;1063:173::-;1131:20;;-1:-1:-1;;;;;1180:31:5;;1170:42;;1160:70;;1226:1;1223;1216:12;1241:254;1309:6;1317;1370:2;1358:9;1349:7;1345:23;1341:32;1338:52;;;1386:1;1383;1376:12;1338:52;1409:29;1428:9;1409:29;:::i;:::-;1399:39;1485:2;1470:18;;;;1457:32;;-1:-1:-1;;;1241:254:5:o;1874:127::-;1935:10;1930:3;1926:20;1923:1;1916:31;1966:4;1963:1;1956:15;1990:4;1987:1;1980:15;2006:719;2049:5;2102:3;2095:4;2087:6;2083:17;2079:27;2069:55;;2120:1;2117;2110:12;2069:55;2156:6;2143:20;2182:18;2219:2;2215;2212:10;2209:36;;;2225:18;;:::i;:::-;2300:2;2294:9;2268:2;2354:13;;-1:-1:-1;;2350:22:5;;;2374:2;2346:31;2342:40;2330:53;;;2398:18;;;2418:22;;;2395:46;2392:72;;;2444:18;;:::i;:::-;2484:10;2480:2;2473:22;2519:2;2511:6;2504:18;2565:3;2558:4;2553:2;2545:6;2541:15;2537:26;2534:35;2531:55;;;2582:1;2579;2572:12;2531:55;2646:2;2639:4;2631:6;2627:17;2620:4;2612:6;2608:17;2595:54;2693:1;2686:4;2681:2;2673:6;2669:15;2665:26;2658:37;2713:6;2704:15;;;;;;2006:719;;;;:::o;2730:322::-;2799:6;2852:2;2840:9;2831:7;2827:23;2823:32;2820:52;;;2868:1;2865;2858:12;2820:52;2908:9;2895:23;2941:18;2933:6;2930:30;2927:50;;;2973:1;2970;2963:12;2927:50;2996;3038:7;3029:6;3018:9;3014:22;2996:50;:::i;:::-;2986:60;2730:322;-1:-1:-1;;;;2730:322:5:o;3057:328::-;3134:6;3142;3150;3203:2;3191:9;3182:7;3178:23;3174:32;3171:52;;;3219:1;3216;3209:12;3171:52;3242:29;3261:9;3242:29;:::i;:::-;3232:39;;3290:38;3324:2;3313:9;3309:18;3290:38;:::i;:::-;3280:48;;3375:2;3364:9;3360:18;3347:32;3337:42;;3057:328;;;;;:::o;3579:543::-;3667:6;3675;3728:2;3716:9;3707:7;3703:23;3699:32;3696:52;;;3744:1;3741;3734:12;3696:52;3784:9;3771:23;3813:18;3854:2;3846:6;3843:14;3840:34;;;3870:1;3867;3860:12;3840:34;3893:50;3935:7;3926:6;3915:9;3911:22;3893:50;:::i;:::-;3883:60;;3996:2;3985:9;3981:18;3968:32;3952:48;;4025:2;4015:8;4012:16;4009:36;;;4041:1;4038;4031:12;4009:36;;4064:52;4108:7;4097:8;4086:9;4082:24;4064:52;:::i;:::-;4054:62;;;3579:543;;;;;:::o;4127:347::-;4192:6;4200;4253:2;4241:9;4232:7;4228:23;4224:32;4221:52;;;4269:1;4266;4259:12;4221:52;4292:29;4311:9;4292:29;:::i;:::-;4282:39;;4371:2;4360:9;4356:18;4343:32;4418:5;4411:13;4404:21;4397:5;4394:32;4384:60;;4440:1;4437;4430:12;4384:60;4463:5;4453:15;;;4127:347;;;;;:::o;4479:186::-;4538:6;4591:2;4579:9;4570:7;4566:23;4562:32;4559:52;;;4607:1;4604;4597:12;4559:52;4630:29;4649:9;4630:29;:::i;4670:808::-;4767:6;4775;4783;4791;4799;4852:3;4840:9;4831:7;4827:23;4823:33;4820:53;;;4869:1;4866;4859:12;4820:53;4892:29;4911:9;4892:29;:::i;:::-;4882:39;;4940:38;4974:2;4963:9;4959:18;4940:38;:::i;:::-;4930:48;;5025:2;5014:9;5010:18;4997:32;4987:42;;5080:2;5069:9;5065:18;5052:32;5103:18;5144:2;5136:6;5133:14;5130:34;;;5160:1;5157;5150:12;5130:34;5198:6;5187:9;5183:22;5173:32;;5243:7;5236:4;5232:2;5228:13;5224:27;5214:55;;5265:1;5262;5255:12;5214:55;5305:2;5292:16;5331:2;5323:6;5320:14;5317:34;;;5347:1;5344;5337:12;5317:34;5392:7;5387:2;5378:6;5374:2;5370:15;5366:24;5363:37;5360:57;;;5413:1;5410;5403:12;5360:57;4670:808;;;;-1:-1:-1;4670:808:5;;-1:-1:-1;5444:2:5;5436:11;;5466:6;4670:808;-1:-1:-1;;;4670:808:5:o;5483:260::-;5551:6;5559;5612:2;5600:9;5591:7;5587:23;5583:32;5580:52;;;5628:1;5625;5618:12;5580:52;5651:29;5670:9;5651:29;:::i;:::-;5641:39;;5699:38;5733:2;5722:9;5718:18;5699:38;:::i;:::-;5689:48;;5483:260;;;;;:::o;5748:380::-;5827:1;5823:12;;;;5870;;;5891:61;;5945:4;5937:6;5933:17;5923:27;;5891:61;5998:2;5990:6;5987:14;5967:18;5964:38;5961:161;;6044:10;6039:3;6035:20;6032:1;6025:31;6079:4;6076:1;6069:15;6107:4;6104:1;6097:15;5961:161;;5748:380;;;:::o;6259:518::-;6361:2;6356:3;6353:11;6350:421;;;6397:5;6394:1;6387:16;6441:4;6438:1;6428:18;6511:2;6499:10;6495:19;6492:1;6488:27;6482:4;6478:38;6547:4;6535:10;6532:20;6529:47;;;-1:-1:-1;6570:4:5;6529:47;6625:2;6620:3;6616:12;6613:1;6609:20;6603:4;6599:31;6589:41;;6680:81;6698:2;6691:5;6688:13;6680:81;;;6757:1;6743:16;;6724:1;6713:13;6680:81;;6953:1345;7079:3;7073:10;7106:18;7098:6;7095:30;7092:56;;;7128:18;;:::i;:::-;7157:97;7247:6;7207:38;7239:4;7233:11;7207:38;:::i;:::-;7201:4;7157:97;:::i;:::-;7309:4;;7366:2;7355:14;;7383:1;7378:663;;;;8085:1;8102:6;8099:89;;;-1:-1:-1;8154:19:5;;;8148:26;8099:89;-1:-1:-1;;6910:1:5;6906:11;;;6902:24;6898:29;6888:40;6934:1;6930:11;;;6885:57;8201:81;;7348:944;;7378:663;6206:1;6199:14;;;6243:4;6230:18;;-1:-1:-1;;7414:20:5;;;7532:236;7546:7;7543:1;7540:14;7532:236;;;7635:19;;;7629:26;7614:42;;7727:27;;;;7695:1;7683:14;;;;7562:19;;7532:236;;;7536:3;7796:6;7787:7;7784:19;7781:201;;;7857:19;;;7851:26;-1:-1:-1;;7940:1:5;7936:14;;;7952:3;7932:24;7928:37;7924:42;7909:58;7894:74;;7781:201;;;8028:1;8019:6;8016:1;8012:14;8008:22;8002:4;7995:36;7348:944;;;;;6953:1345;;:::o;8303:127::-;8364:10;8359:3;8355:20;8352:1;8345:31;8395:4;8392:1;8385:15;8419:4;8416:1;8409:15;8435:128;8502:9;;;8523:11;;;8520:37;;;8537:18;;:::i;8568:127::-;8629:10;8624:3;8620:20;8617:1;8610:31;8660:4;8657:1;8650:15;8684:4;8681:1;8674:15;8700:127;8761:10;8756:3;8752:20;8749:1;8742:31;8792:4;8789:1;8782:15;8816:4;8813:1;8806:15;9392:290;9461:6;9514:2;9502:9;9493:7;9489:23;9485:32;9482:52;;;9530:1;9527;9520:12;9482:52;9556:16;;-1:-1:-1;;;;;;9601:32:5;;9591:43;;9581:71;;9648:1;9645;9638:12;9687:662;-1:-1:-1;;;;;9966:15:5;;;9948:34;;10018:15;;10013:2;9998:18;;9991:43;10065:2;10050:18;;10043:34;;;10113:3;10108:2;10093:18;;10086:31;;;10133:19;;10126:35;;;9891:4;10154:6;10204;9928:3;10183:19;;10170:49;10269:1;10263:3;10254:6;10243:9;10239:22;10235:32;10228:43;10339:3;10332:2;10328:7;10323:2;10315:6;10311:15;10307:29;10296:9;10292:45;10288:55;10280:63;;9687:662;;;;;;;;:::o;10354:723::-;10404:3;10445:5;10439:12;10474:36;10500:9;10474:36;:::i;:::-;10529:1;10546:17;;;10572:133;;;;10719:1;10714:357;;;;10539:532;;10572:133;-1:-1:-1;;10605:24:5;;10593:37;;10678:14;;10671:22;10659:35;;10650:45;;;-1:-1:-1;10572:133:5;;10714:357;10745:5;10742:1;10735:16;10774:4;10819;10816:1;10806:18;10846:1;10860:165;10874:6;10871:1;10868:13;10860:165;;;10952:14;;10939:11;;;10932:35;10995:16;;;;10889:10;;10860:165;;;10864:3;;;11054:6;11049:3;11045:16;11038:23;;10539:532;;;;;10354:723;;;;:::o;11082:389::-;11258:3;11286:38;11320:3;11312:6;11286:38;:::i;:::-;11353:6;11347:13;11369:65;11427:6;11423:2;11416:4;11408:6;11404:17;11369:65;:::i;:::-;11450:15;;11082:389;-1:-1:-1;;;;11082:389:5:o;11663:354::-;11881:3;11912:38;11946:3;11938:6;11912:38;:::i;:::-;-1:-1:-1;;;11959:23:5;;12009:1;11998:13;;11663:354;-1:-1:-1;;;11663:354:5:o;12022:::-;12240:3;12271:38;12305:3;12297:6;12271:38;:::i;:::-;-1:-1:-1;;;12318:23:5;;12368:1;12357:13;;12022:354;-1:-1:-1;;;12022:354:5:o;12381:::-;12599:3;12630:38;12664:3;12656:6;12630:38;:::i;:::-;-1:-1:-1;;;12677:23:5;;12727:1;12716:13;;12381:354;-1:-1:-1;;;12381:354:5:o;12740:::-;12958:3;12989:38;13023:3;13015:6;12989:38;:::i;:::-;-1:-1:-1;;;13036:23:5;;13086:1;13075:13;;12740:354;-1:-1:-1;;;12740:354:5:o;13099:::-;13317:3;13348:38;13382:3;13374:6;13348:38;:::i;:::-;-1:-1:-1;;;13395:23:5;;13445:1;13434:13;;13099:354;-1:-1:-1;;;13099:354:5:o;13458:416::-;13547:1;13584:5;13547:1;13598:270;13619:7;13609:8;13606:21;13598:270;;;13678:4;13674:1;13670:6;13666:17;13660:4;13657:27;13654:53;;;13687:18;;:::i;:::-;13737:7;13727:8;13723:22;13720:55;;;13757:16;;;;13720:55;13836:22;;;;13796:15;;;;13598:270;;;13602:3;13458:416;;;;;:::o;13879:806::-;13928:5;13958:8;13948:80;;-1:-1:-1;13999:1:5;14013:5;;13948:80;14047:4;14037:76;;-1:-1:-1;14084:1:5;14098:5;;14037:76;14129:4;14147:1;14142:59;;;;14215:1;14210:130;;;;14122:218;;14142:59;14172:1;14163:10;;14186:5;;;14210:130;14247:3;14237:8;14234:17;14231:43;;;14254:18;;:::i;:::-;-1:-1:-1;;14310:1:5;14296:16;;14325:5;;14122:218;;14424:2;14414:8;14411:16;14405:3;14399:4;14396:13;14392:36;14386:2;14376:8;14373:16;14368:2;14362:4;14359:12;14355:35;14352:77;14349:159;;;-1:-1:-1;14461:19:5;;;14493:5;;14349:159;14540:34;14565:8;14559:4;14540:34;:::i;:::-;14610:6;14606:1;14602:6;14598:19;14589:7;14586:32;14583:58;;;14621:18;;:::i;:::-;14659:20;;13879:806;-1:-1:-1;;;13879:806:5:o;14690:140::-;14748:5;14777:47;14818:4;14808:8;14804:19;14798:4;14777:47;:::i;14967:217::-;15007:1;15033;15023:132;;15077:10;15072:3;15068:20;15065:1;15058:31;15112:4;15109:1;15102:15;15140:4;15137:1;15130:15;15023:132;-1:-1:-1;15169:9:5;;14967:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1520000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "35270",
								"balanceOf(address)": "2562",
								"baseTokenURI()": "infinite",
								"dataURI()": "infinite",
								"decimals()": "infinite",
								"getApproved(uint256)": "2543",
								"isApprovedForAll(address,address)": "infinite",
								"minted()": "2384",
								"name()": "infinite",
								"owner()": "2403",
								"ownerOf(uint256)": "2597",
								"revokeOwnership()": "28146",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26649",
								"setDataURI(string)": "infinite",
								"setNameSymbol(string,string)": "infinite",
								"setTokenURI(string)": "infinite",
								"setWhitelist(address,bool)": "26897",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2340",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28371",
								"whitelist(address)": "2573",
								"yeet(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 229,
									"end": 386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 229,
									"end": 386,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 229,
									"end": 386,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "159BDA59"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1593D251"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4181,
									"end": 4506,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 284,
									"end": 289,
									"name": "PUSH",
									"source": 4,
									"value": "2710"
								},
								{
									"begin": 291,
									"end": 297,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4352,
									"end": 4358,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 428,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 408,
									"end": 414,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 428,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 408,
									"end": 428,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 404,
									"end": 451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 404,
									"end": 451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 437,
									"end": 451,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "49E27CFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 437,
									"end": 451,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 437,
									"end": 451,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 437,
									"end": 451,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 437,
									"end": 451,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 404,
									"end": 451,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 404,
									"end": 451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 462,
									"end": 467,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 476,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 462,
									"end": 476,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 462,
									"end": 476,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 492,
									"end": 532,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 492,
									"end": 532,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 462,
									"end": 476,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 462,
									"end": 467,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 492,
									"end": 532,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 492,
									"end": 532,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 462,
									"end": 467,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 462,
									"end": 467,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 492,
									"end": 532,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4370,
									"end": 4374,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4370,
									"end": 4382,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 4377,
									"end": 4382,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4382,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 4370,
									"end": 4382,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4370,
									"end": 4382,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 4370,
									"end": 4382,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4392,
									"end": 4398,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 4392,
									"end": 4408,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 4401,
									"end": 4408,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4392,
									"end": 4398,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4392,
									"end": 4408,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 4392,
									"end": 4408,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4392,
									"end": 4408,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 4392,
									"end": 4408,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4418,
									"end": 4438,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 4418,
									"end": 4438,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4418,
									"end": 4438,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 4418,
									"end": 4438,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 4418,
									"end": 4438,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4418,
									"end": 4438,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4418,
									"end": 4438,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4484,
									"end": 4498,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 4484,
									"end": 4498,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4484,
									"end": 4486,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 4484,
									"end": 4498,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 4484,
									"end": 4498,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4484,
									"end": 4498,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 4484,
									"end": 4498,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4499,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4480,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4499,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 4462,
									"end": 4499,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 4462,
									"end": 4499,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 4462,
									"end": 4499,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4448,
									"end": 4459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 4448,
									"end": 4499,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 309,
									"end": 326,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 326,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 309,
									"end": 318,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 309,
									"end": 326,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 309,
									"end": 326,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 326,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 309,
									"end": 326,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 329,
									"end": 345,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "21E19E0C9BAB2400000"
								},
								{
									"begin": 309,
									"end": 345,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 309,
									"end": 345,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 355,
									"end": 364,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "C"
								},
								{
									"begin": 355,
									"end": 372,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 355,
									"end": 372,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 355,
									"end": 372,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 355,
									"end": 372,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 355,
									"end": 372,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 355,
									"end": 379,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 355,
									"end": 379,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 375,
									"end": 379,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 355,
									"end": 379,
									"modifierDepth": 1,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 355,
									"end": 379,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 355,
									"end": 379,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 309,
									"end": 436,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 309,
									"end": 436,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 370,
									"end": 380,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 365,
									"end": 368,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 361,
									"end": 381,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 358,
									"end": 359,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 382,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 401,
									"end": 405,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 398,
									"end": 399,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 391,
									"end": 406,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 425,
									"end": 429,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 430,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 441,
									"end": 821,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 520,
									"end": 521,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 516,
									"end": 528,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 563,
									"end": 575,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 584,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 638,
									"end": 642,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 630,
									"end": 636,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 626,
									"end": 643,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 616,
									"end": 643,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 616,
									"end": 643,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 584,
									"end": 645,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 584,
									"end": 645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 691,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 683,
									"end": 689,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 694,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 657,
									"end": 695,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 737,
									"end": 747,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 732,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 728,
									"end": 748,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 772,
									"end": 776,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 762,
									"end": 777,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 800,
									"end": 804,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 797,
									"end": 798,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 790,
									"end": 805,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 654,
									"end": 815,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 654,
									"end": 815,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 441,
									"end": 821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1054,
									"end": 1056,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1049,
									"end": 1052,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1046,
									"end": 1057,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1095,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1088,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1096,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1139,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1204,
									"end": 1206,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1207,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1185,
									"end": 1186,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1181,
									"end": 1208,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1179,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1209,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1240,
									"end": 1244,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1228,
									"end": 1238,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1225,
									"end": 1245,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1263,
									"end": 1267,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1269,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1318,
									"end": 1320,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1313,
									"end": 1316,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1321,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1306,
									"end": 1307,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1302,
									"end": 1322,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1300,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1323,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1282,
									"end": 1323,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1384,
									"end": 1389,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1394,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1452,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1373,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1377,
									"end": 1380,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1043,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1470,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 952,
									"end": 1470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1766,
									"end": 1776,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1788,
									"end": 1818,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1785,
									"end": 1841,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1821,
									"end": 1839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1821,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1932,
									"end": 1936,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1926,
									"end": 1937,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1900,
									"end": 1938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1900,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1894,
									"end": 1898,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1850,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1850,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2002,
									"end": 2006,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2048,
									"end": 2062,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2076,
									"end": 2077,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2801,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2847,
									"end": 2866,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2841,
									"end": 2867,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 2792,
									"end": 2881,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1599,
									"end": 1610,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1595,
									"end": 1619,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1591,
									"end": 1620,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1581,
									"end": 1621,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1627,
									"end": 1628,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1623,
									"end": 1634,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1578,
									"end": 1635,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2894,
									"end": 2975,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2071,
									"end": 2734,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 899,
									"end": 900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 892,
									"end": 906,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 892,
									"end": 906,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 936,
									"end": 940,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 923,
									"end": 941,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2107,
									"end": 2127,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2239,
									"end": 2246,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2233,
									"end": 2247,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2347,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2322,
									"end": 2348,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2307,
									"end": 2349,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2420,
									"end": 2447,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 2388,
									"end": 2389,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2225,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2229,
									"end": 2232,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2489,
									"end": 2495,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2477,
									"end": 2496,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2550,
									"end": 2569,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2544,
									"end": 2570,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2634,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2629,
									"end": 2643,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2645,
									"end": 2648,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 2625,
									"end": 2649,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2621,
									"end": 2658,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2617,
									"end": 2659,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2602,
									"end": 2660,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2587,
									"end": 2661,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2474,
									"end": 2675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2721,
									"end": 2722,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2712,
									"end": 2718,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2705,
									"end": 2719,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2695,
									"end": 2699,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2688,
									"end": 2724,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2985,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 2991,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 2991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2996,
									"end": 3123,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2996,
									"end": 3123,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3057,
									"end": 3067,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 3052,
									"end": 3055,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 3048,
									"end": 3068,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3045,
									"end": 3046,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3038,
									"end": 3069,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3088,
									"end": 3092,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 3085,
									"end": 3086,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3078,
									"end": 3093,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3109,
									"end": 3110,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3102,
									"end": 3117,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 3218,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3254,
									"end": 3259,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3217,
									"end": 3218,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3289,
									"end": 3296,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3279,
									"end": 3287,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3276,
									"end": 3297,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3348,
									"end": 3352,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3346,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3336,
									"end": 3353,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3330,
									"end": 3334,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3327,
									"end": 3354,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3324,
									"end": 3377,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3324,
									"end": 3377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3324,
									"end": 3377,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3357,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3357,
									"end": 3375,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3357,
									"end": 3375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3357,
									"end": 3375,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 3357,
									"end": 3375,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3407,
									"end": 3414,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3397,
									"end": 3405,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3393,
									"end": 3415,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3445,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3445,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 3390,
									"end": 3445,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3427,
									"end": 3443,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3427,
									"end": 3443,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3427,
									"end": 3443,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3427,
									"end": 3443,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3445,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 3390,
									"end": 3445,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3528,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3528,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3528,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3506,
									"end": 3528,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3481,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3481,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3481,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3481,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3268,
									"end": 3538,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3272,
									"end": 3275,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3128,
									"end": 3544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3598,
									"end": 3603,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3628,
									"end": 3636,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3618,
									"end": 3698,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3618,
									"end": 3698,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3669,
									"end": 3670,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3683,
									"end": 3688,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3683,
									"end": 3688,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3618,
									"end": 3698,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3618,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3717,
									"end": 3721,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3707,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3707,
									"end": 3783,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3754,
									"end": 3755,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3773,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3768,
									"end": 3773,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3707,
									"end": 3783,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3707,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3799,
									"end": 3803,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3817,
									"end": 3818,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3885,
									"end": 3886,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3792,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3792,
									"end": 4010,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3812,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3842,
									"end": 3843,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3833,
									"end": 3843,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3833,
									"end": 3843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3861,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3861,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3856,
									"end": 3861,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3880,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3917,
									"end": 3920,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 3907,
									"end": 3915,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3904,
									"end": 3921,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3944,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3901,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3901,
									"end": 3944,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3924,
									"end": 3942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3924,
									"end": 3942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3924,
									"end": 3942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3924,
									"end": 3942,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3924,
									"end": 3942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3980,
									"end": 3981,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3966,
									"end": 3982,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3966,
									"end": 3982,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3995,
									"end": 4000,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3995,
									"end": 4000,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3792,
									"end": 4010,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3792,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3792,
									"end": 4010,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4084,
									"end": 4092,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4081,
									"end": 4097,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4075,
									"end": 4078,
									"name": "PUSH",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 4069,
									"end": 4073,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4066,
									"end": 4079,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4062,
									"end": 4098,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4056,
									"end": 4058,
									"name": "PUSH",
									"source": 5,
									"value": "4E"
								},
								{
									"begin": 4046,
									"end": 4054,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4043,
									"end": 4059,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4038,
									"end": 4040,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4029,
									"end": 4041,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4025,
									"end": 4060,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4022,
									"end": 4099,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4019,
									"end": 4178,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4019,
									"end": 4178,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4019,
									"end": 4178,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4131,
									"end": 4150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4131,
									"end": 4150,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4131,
									"end": 4150,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4019,
									"end": 4178,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4019,
									"end": 4178,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4210,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 4235,
									"end": 4243,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4229,
									"end": 4233,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4210,
									"end": 4244,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 4210,
									"end": 4244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4210,
									"end": 4244,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 4210,
									"end": 4244,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4276,
									"end": 4277,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4272,
									"end": 4278,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4268,
									"end": 4287,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4259,
									"end": 4266,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4256,
									"end": 4288,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4253,
									"end": 4311,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4253,
									"end": 4311,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4253,
									"end": 4311,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4291,
									"end": 4309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4291,
									"end": 4309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4291,
									"end": 4309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4291,
									"end": 4309,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4291,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4329,
									"end": 4349,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4329,
									"end": 4349,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3549,
									"end": 4355,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4360,
									"end": 4500,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 4360,
									"end": 4500,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4418,
									"end": 4423,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4447,
									"end": 4494,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 4488,
									"end": 4492,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 4478,
									"end": 4486,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4474,
									"end": 4493,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4468,
									"end": 4472,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4447,
									"end": 4494,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 4447,
									"end": 4494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4505,
									"end": 4673,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 4505,
									"end": 4673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4578,
									"end": 4587,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4578,
									"end": 4587,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4578,
									"end": 4587,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 4609,
									"end": 4618,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4609,
									"end": 4618,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4626,
									"end": 4641,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4626,
									"end": 4641,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4626,
									"end": 4641,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 4620,
									"end": 4642,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 4620,
									"end": 4642,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4606,
									"end": 4643,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4596,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4596,
									"end": 4667,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4647,
									"end": 4665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 4647,
									"end": 4665,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4647,
									"end": 4665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4505,
									"end": 4673,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 4505,
									"end": 4673,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "1609"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 1743,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004590b12c2c1197e74bd5954694bfe46a8ec288c2a1d66e9f9afada6930b3ac964736f6c63430008160033",
									".code": [
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "E0DF5B6F"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "E0DF5B6F"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "F28CA1DD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "D547CFB7"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "9B19251A"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "9B19251A"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "504334C2"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "504334C2"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "53D6FD59"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "664DFA01"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "4F02C420"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "18D217C3"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "2B968958"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 1743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2838,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2838,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3518,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1019,
											"end": 1051,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 855,
											"end": 1058,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5298,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5298,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1679,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1680,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1500,
											"end": 1687,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 570,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 570,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 570,
											"end": 666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 6441,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 6441,
											"end": 8305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 764,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 764,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 764,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 764,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 764,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "1609"
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2968,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3574,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8590,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 8590,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 782,
											"end": 913,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 913,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 782,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 913,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 782,
											"end": 913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4645,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4645,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4823,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4823,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 564,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 392,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 392,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3290,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3334,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 229,
											"end": 249,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 229,
											"end": 249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 229,
											"end": 249,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 249,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 229,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 229,
											"end": 249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 229,
											"end": 249,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 229,
											"end": 249,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 229,
											"end": 249,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2889,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4114,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4114,
											"end": 4155,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6093,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6093,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 8361,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 8361,
											"end": 8516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 9154,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 9154,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 919,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 919,
											"end": 1741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 196,
											"end": 222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 196,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 196,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3401,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3401,
											"end": 3465,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 672,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 672,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 672,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 672,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 3626,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3694,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 169,
											"end": 190,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 169,
											"end": 190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 169,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 169,
											"end": 190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 758,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 545,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 545,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2838,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2838,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5432,
											"end": 5438,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5428,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5438,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5442,
											"end": 5456,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5496,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5488,
											"end": 5508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5537,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5527,
											"end": 5586,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5574,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5575,
											"end": 5585,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5551,
											"end": 5586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5550,
											"end": 5586,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5586,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 5527,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5642,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5523,
											"end": 5642,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5613,
											"end": 5627,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5523,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 5523,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5667,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5679,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5689,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5709,
											"end": 5745,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5795,
											"end": 5805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5786,
											"end": 5793,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5779,
											"end": 5784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "797365DABB18FA726CCBCCBE18C6F24C34E3B0653F2E99EA873BD7B84763DDE6"
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5764,
											"end": 5806,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 5458,
											"end": 5817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5857,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5846,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5858,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5880,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5880,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5837,
											"end": 5867,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5900,
											"end": 5941,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "PUSH",
											"source": 3,
											"value": "1F01303A1CE9329D9963E1937C201E23C5543A9E3536E9EDEAD087AEC7DC6D83"
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6006,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 5414,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6038,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 6045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 570,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 570,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 641,
											"end": 659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 651,
											"end": 659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 641,
											"end": 648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 641,
											"end": 659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 641,
											"end": 659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 641,
											"end": 659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 570,
											"end": 666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6601,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6601,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6618,
											"end": 6619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6619,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6581,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6655,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6639,
											"end": 6667,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6667,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6667,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6639,
											"end": 6667,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6635,
											"end": 6724,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EDAEF2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6694,
											"end": 6709,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6635,
											"end": 6724,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6635,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6758,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6742,
											"end": 6758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6738,
											"end": 6818,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6738,
											"end": 6818,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 6738,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6863,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6853,
											"end": 6926,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6908,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6915,
											"end": 6925,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6892,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6891,
											"end": 6926,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6926,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 6853,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6971,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6956,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6983,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6946,
											"end": 6983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 6853,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 7052,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 7052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6832,
											"end": 7052,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7023,
											"end": 7037,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6832,
											"end": 7052,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6832,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7085,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7085,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 7085,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7075,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7066,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7066,
											"end": 7095,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7155,
											"end": 7165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7155,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 7155,
											"end": 7165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7165,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 7155,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7147,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7151,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 7138,
											"end": 7165,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7202,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7214,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7194,
											"end": 7219,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7263,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7370,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7370,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7351,
											"end": 7374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 7351,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7338,
											"end": 7375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7338,
											"end": 7375,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7318,
											"end": 7375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7419,
											"end": 7429,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7406,
											"end": 7429,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7402,
											"end": 7687,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7532,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7548,
											"end": 7557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7520,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7508,
											"end": 7545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7545,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7557,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7557,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7508,
											"end": 7557,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7660,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7672,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7646,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7672,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7402,
											"end": 7687,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7402,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7732,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 7720,
											"end": 7738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7796,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7817,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7908,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 7898,
											"end": 7919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7919,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7919,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7919,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7919,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7894,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7884,
											"end": 7894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7939,
											"end": 7969,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 8008,
											"end": 8010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "E59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487"
										},
										{
											"begin": 8012,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8012,
											"end": 8020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 8012,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8012,
											"end": 8022,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8012,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7988,
											"end": 8023,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6621,
											"end": 8034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8069,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8081,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8087,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8088,
											"end": 8098,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8072,
											"end": 8099,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8118,
											"end": 8146,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8118,
											"end": 8146,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8114,
											"end": 8214,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8204,
											"end": 8214,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 8194,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8194,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8173,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8179,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8190,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8191,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8164,
											"end": 8214,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8214,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8114,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8252,
											"end": 8254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8256,
											"end": 8266,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8236,
											"end": 8267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8236,
											"end": 8267,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8236,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8267,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8229,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8229,
											"end": 8267,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6577,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8294,
											"end": 8298,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 8305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 764,
											"end": 911,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 764,
											"end": 911,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 826,
											"end": 844,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 826,
											"end": 844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 826,
											"end": 844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 826,
											"end": 844,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 860,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 904,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 881,
											"end": 891,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 881,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 860,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 860,
											"end": 904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 843,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 842,
											"end": 843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 860,
											"end": 904,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 764,
											"end": 911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8715,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8724,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8728,
											"end": 8735,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8728,
											"end": 8735,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 8713,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8780,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8709,
											"end": 8780,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BF43481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8758,
											"end": 8769,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8709,
											"end": 8780,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8709,
											"end": 8780,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8803,
											"end": 8807,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8809,
											"end": 8811,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8813,
											"end": 8815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8790,
											"end": 8816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8790,
											"end": 8816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8844,
											"end": 8858,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8858,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8858,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8844,
											"end": 8996,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8915,
											"end": 8925,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9137,
											"end": 9171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9207,
											"end": 9222,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9222,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9187,
											"end": 9205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9266,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9232,
											"end": 9266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9302,
											"end": 9305,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9282,
											"end": 9300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9275,
											"end": 9306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9322,
											"end": 9341,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 9322,
											"end": 9341,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9322,
											"end": 9341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9315,
											"end": 9345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8956,
											"end": 8996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8914,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8914,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8914,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8956,
											"end": 8996,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 8956,
											"end": 8996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9362,
											"end": 9381,
											"name": "PUSH",
											"source": 5,
											"value": "A4"
										},
										{
											"begin": 9362,
											"end": 9381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8879,
											"end": 8940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 8879,
											"end": 8940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8879,
											"end": 8996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8996,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8879,
											"end": 8996,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8844,
											"end": 8996,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8844,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9056,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8827,
											"end": 9056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DA63931"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9028,
											"end": 9045,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8827,
											"end": 9056,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8827,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8590,
											"end": 9062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 782,
											"end": 913,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 782,
											"end": 913,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 876,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 891,
											"end": 896,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 905,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 876,
											"end": 890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 876,
											"end": 906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4645,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 4722,
											"end": 4739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4722,
											"end": 4747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4747,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4881,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4922,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C5723B51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4993,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 392,
											"end": 564,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 392,
											"end": 564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 454,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 454,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 454,
											"end": 482,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 454,
											"end": 482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 439,
											"end": 482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 496,
											"end": 511,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 496,
											"end": 511,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 496,
											"end": 511,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 507,
											"end": 511,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 511,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 492,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 492,
											"end": 558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 541,
											"end": 547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 526,
											"end": 537,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 526,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 526,
											"end": 547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 526,
											"end": 547,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 429,
											"end": 564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 392,
											"end": 564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2889,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2889,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6205,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6194,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6206,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6227,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6216,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6205,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "PUSH",
											"source": 3,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1631,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6289,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 8361,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8453,
											"end": 8457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8486,
											"end": 8496,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8498,
											"end": 8500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8476,
											"end": 8485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8476,
											"end": 8509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9309,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9318,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9322,
											"end": 9329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9322,
											"end": 9329,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9307,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BF43481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9352,
											"end": 9363,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9303,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9411,
											"end": 9413,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9392,
											"end": 9404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 9392,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9392,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9446,
											"end": 9460,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9460,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9460,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9465,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9446,
											"end": 9600,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9516,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9516,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9600,
											"name": "PUSH",
											"source": 3,
											"value": "150B7A02"
										},
										{
											"begin": 9560,
											"end": 9600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9517,
											"end": 9527,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9517,
											"end": 9527,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 9529,
											"end": 9533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9535,
											"end": 9537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 9539,
											"end": 9543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9481,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 9481,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9481,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9481,
											"end": 9600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9600,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9481,
											"end": 9600,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9446,
											"end": 9600,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9446,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9429,
											"end": 9660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DA63931"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9429,
											"end": 9660,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 9429,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9154,
											"end": 9666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 979,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1037,
											"end": 1038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1014,
											"end": 1026,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1008,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1038,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1735,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1004,
											"end": 1735,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1087,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 1106,
											"end": 1108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1089,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 1089,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 1061,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1061,
											"end": 1110,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1054,
											"end": 1110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1054,
											"end": 1110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1735,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1004,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1141,
											"end": 1158,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1172,
											"end": 1182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11605,
											"end": 11624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11605,
											"end": 11624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11649,
											"end": 11651,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11640,
											"end": 11652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11640,
											"end": 11652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11476,
											"end": 11658,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1229,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1185,
											"end": 1231,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 1185,
											"end": 1231,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1172,
											"end": 1231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1260,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1249,
											"end": 1260,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1260,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 1286,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1280,
											"end": 1317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 1245,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1353,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1342,
											"end": 1346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1353,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1342,
											"end": 1353,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1353,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 1338,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1400,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1379,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 1379,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1338,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 1338,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "PUSH",
											"source": 4,
											"value": "D2"
										},
										{
											"begin": 1435,
											"end": 1439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1431,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 1472,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1431,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 1431,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1539,
											"name": "PUSH",
											"source": 4,
											"value": "F0"
										},
										{
											"begin": 1528,
											"end": 1532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 1524,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1586,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 1565,
											"end": 1596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 1524,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 1632,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1625,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 1632,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1617,
											"end": 1705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1679,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 1658,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1689,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 1689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 1689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 1617,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1724,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 919,
											"end": 1741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 196,
											"end": 222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 196,
											"end": 222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 196,
											"end": 222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 196,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 196,
											"end": 222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 672,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 745,
											"end": 757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 745,
											"end": 769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 760,
											"end": 769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 757,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 745,
											"end": 769,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 169,
											"end": 190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 169,
											"end": 190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 169,
											"end": 190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 169,
											"end": 190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 169,
											"end": 190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 758,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 545,
											"end": 758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82B429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 341,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 341,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 295,
											"end": 341,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 295,
											"end": 341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 627,
											"end": 647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 627,
											"end": 647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 623,
											"end": 670,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 623,
											"end": 670,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "49E27CFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 670,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 670,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 623,
											"end": 670,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 681,
											"end": 686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 681,
											"end": 695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 711,
											"end": 751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 751,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 681,
											"end": 695,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 732,
											"end": 742,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 732,
											"end": 742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 711,
											"end": 751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 711,
											"end": 751,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 681,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 711,
											"end": 751,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 545,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 10915,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 10825,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10868,
											"end": 10875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10900,
											"end": 10908,
											"name": "PUSHIMMUTABLE",
											"source": 3,
											"value": "1609"
										},
										{
											"begin": 10894,
											"end": 10896,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 10894,
											"end": 10908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10887,
											"end": 10908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10887,
											"end": 10908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 10915,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10825,
											"end": 10915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10789,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 9731,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9840,
											"end": 9844,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9871,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 9871,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9881,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 9871,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9891,
											"end": 9918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9930,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10017,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10017,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 9881,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9856,
											"end": 9881,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9978,
											"end": 9991,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10021,
											"end": 10027,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10002,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10071,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10075,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10062,
											"end": 10085,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10175,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 10166,
											"end": 10181,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10161,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10161,
											"end": 10406,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10197,
											"end": 10219,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10279,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10285,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10270,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 10245,
											"end": 10249,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10242,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10223,
											"end": 10249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10222,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 10222,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10197,
											"end": 10293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10197,
											"end": 10293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10312,
											"end": 10321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10331,
											"end": 10345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10328,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10370,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10376,
											"end": 10380,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 10370,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 10370,
											"end": 10381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10370,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 10370,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10307,
											"end": 10396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10183,
											"end": 10406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10161,
											"end": 10406,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 10161,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10488,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 10479,
											"end": 10492,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10474,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10474,
											"end": 10715,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10599,
											"end": 10603,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10596,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10575,
											"end": 10603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10575,
											"end": 10603,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 10575,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10543,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10547,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10550,
											"end": 10554,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10550,
											"end": 10554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 10534,
											"end": 10554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 10534,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 10533,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "tag",
											"source": 3,
											"value": "315"
										},
										{
											"begin": 10533,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10508,
											"end": 10604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10623,
											"end": 10632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10642,
											"end": 10656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10681,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10687,
											"end": 10689,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10681,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10681,
											"end": 10690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10681,
											"end": 10690,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 10681,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10658,
											"end": 10661,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10658,
											"end": 10661,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10618,
											"end": 10705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10494,
											"end": 10715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10474,
											"end": 10715,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 10474,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10744,
											"end": 10748,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "PUSH",
											"source": 3,
											"value": "E59FDD36D0D223C0C7D996DB7AD796880F45E1936CB0BB7AC102E7082E031487"
										},
										{
											"begin": 10754,
											"end": 10760,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1826,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 1869,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10730,
											"end": 10761,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 10789,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9731,
											"end": 10789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11785,
											"end": 11939,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 11785,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 11898,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11894,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 11901,
											"end": 11906,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 11898,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 11894,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11894,
											"end": 11906,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 11894,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11916,
											"end": 11922,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11916,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 11925,
											"end": 11932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11916,
											"end": 11922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11916,
											"end": 11932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 11916,
											"end": 11932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11418,
											"end": 11779,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 11418,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11474,
											"end": 11545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 11474,
											"end": 11545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EDAEF2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11519,
											"end": 11534,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11474,
											"end": 11545,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 11474,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11555,
											"end": 11565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11580,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11600,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 11581,
											"end": 11604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11603,
											"end": 11604,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11603,
											"end": 11604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11581,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11581,
											"end": 11604,
											"name": "tag",
											"source": 3,
											"value": "340"
										},
										{
											"begin": 11581,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 11568,
											"end": 11605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11605,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11555,
											"end": 11605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11555,
											"end": 11605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11621,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11626,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11627,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 11615,
											"end": 11633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11661,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11650,
											"end": 11665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11665,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11665,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11690,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 11682,
											"end": 11694,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11694,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11694,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11675,
											"end": 11694,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11722,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11711,
											"end": 11726,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11726,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11742,
											"end": 11772,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 11464,
											"end": 11779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11418,
											"end": 11779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10921,
											"end": 11412,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 10921,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10979,
											"end": 10995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10979,
											"end": 10995,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E469669"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 10975,
											"end": 11047,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11089,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11081,
											"end": 11087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11189,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11181,
											"end": 11193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11177,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11177,
											"end": 11256,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "119B4FD3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11245,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11177,
											"end": 11256,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 11177,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11274,
											"name": "PUSH",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11278,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11266,
											"end": 11283,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11299,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11293,
											"end": 11312,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11350,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11357,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11340,
											"end": 11361,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11340,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 11340,
											"end": 11361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11340,
											"end": 11361,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 11340,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11333,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11361,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11361,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11361,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11361,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11337,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11377,
											"end": 11405,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 10965,
											"end": 11412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10921,
											"end": 11412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10921,
											"end": 11412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 269,
											"end": 665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 421,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 381,
											"end": 385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 456,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 457,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 499,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 477,
											"end": 486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 473,
											"end": 491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 466,
											"end": 500,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 576,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 574,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 561,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 554,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 544,
											"end": 559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 509,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 509,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 624,
											"end": 653,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 609,
											"end": 654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 605,
											"end": 659,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 269,
											"end": 665,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 670,
											"end": 850,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 670,
											"end": 850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 729,
											"end": 735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 761,
											"end": 768,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 757,
											"end": 780,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 753,
											"end": 785,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 750,
											"end": 802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 798,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 796,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 788,
											"end": 800,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 750,
											"end": 802,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 750,
											"end": 802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 821,
											"end": 844,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 821,
											"end": 844,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 670,
											"end": 850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1063,
											"end": 1236,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 1063,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1151,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1151,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1170,
											"end": 1212,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1160,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1160,
											"end": 1230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1228,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1241,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1356,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1341,
											"end": 1373,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1376,
											"end": 1388,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 1338,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 1409,
											"end": 1438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 1409,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1438,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1489,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1241,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 2001,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 1874,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1935,
											"end": 1945,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1930,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1926,
											"end": 1946,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1995,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2099,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2087,
											"end": 2093,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2106,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2122,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 2069,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2143,
											"end": 2163,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 2209,
											"end": 2245,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 2225,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 2225,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 2346,
											"end": 2377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2342,
											"end": 2382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2441,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2392,
											"end": 2464,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 2444,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 2444,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2480,
											"end": 2482,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2473,
											"end": 2495,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2568,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2555,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2563,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2569,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 2531,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2646,
											"end": 2648,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2643,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2649,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2669,
											"end": 2684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2665,
											"end": 2691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 2838,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2855,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2870,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 2820,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2895,
											"end": 2918,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2959,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2960,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 2975,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "tag",
											"source": 5,
											"value": "409"
										},
										{
											"begin": 2927,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 3038,
											"end": 3045,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 2996,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 2996,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2986,
											"end": 3046,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 3052,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2730,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3178,
											"end": 3201,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3174,
											"end": 3206,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3171,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 3242,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3242,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3271,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3309,
											"end": 3327,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 3290,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 3290,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3379,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3337,
											"end": 3379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3681,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3716,
											"end": 3725,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3726,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3731,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3742,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3746,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 3696,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3771,
											"end": 3794,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3872,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 3935,
											"end": 3942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3911,
											"end": 3933,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 3893,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 3893,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3996,
											"end": 3998,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3985,
											"end": 3994,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 3999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3952,
											"end": 4000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4012,
											"end": 4028,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4043,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4097,
											"end": 4105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4086,
											"end": 4095,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 4064,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 4064,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4054,
											"end": 4116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3579,
											"end": 4122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4255,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4250,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4239,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4224,
											"end": 4256,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4271,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 4221,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 4311,
											"end": 4320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 4292,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 4292,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4356,
											"end": 4374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4375,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4424,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4426,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4440,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4430,
											"end": 4442,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 4384,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4468,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4127,
											"end": 4474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4479,
											"end": 4665,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4479,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4593,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4588,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4577,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4566,
											"end": 4589,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4594,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4607,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "tag",
											"source": 5,
											"value": "427"
										},
										{
											"begin": 4559,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4630,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 4630,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4840,
											"end": 4849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4838,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4856,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 4867,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4859,
											"end": 4871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "tag",
											"source": 5,
											"value": "430"
										},
										{
											"begin": 4820,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 4892,
											"end": 4921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 4892,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4921,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4882,
											"end": 4921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 4974,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 4972,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 4940,
											"end": 4978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 4940,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4978,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4997,
											"end": 5029,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5029,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5080,
											"end": 5082,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5069,
											"end": 5078,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5052,
											"end": 5084,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5103,
											"end": 5121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5144,
											"end": 5146,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5136,
											"end": 5142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5147,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5162,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 5130,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5198,
											"end": 5204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5250,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5228,
											"end": 5241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5224,
											"end": 5251,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5255,
											"end": 5267,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 5214,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5331,
											"end": 5333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5337,
											"end": 5349,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5399,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5387,
											"end": 5389,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5376,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5363,
											"end": 5400,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5415,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 5360,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5436,
											"end": 5447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5436,
											"end": 5447,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5472,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4670,
											"end": 5478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5600,
											"end": 5609,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5598,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5615,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 5580,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 5651,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "tag",
											"source": 5,
											"value": "439"
										},
										{
											"begin": 5651,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5680,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5641,
											"end": 5680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 5733,
											"end": 5735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5718,
											"end": 5736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 5699,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 5699,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5828,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 5882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5949,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5937,
											"end": 5943,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5933,
											"end": 5950,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 5891,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5998,
											"end": 6000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5990,
											"end": 5996,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5987,
											"end": 6001,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6044,
											"end": 6054,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 6035,
											"end": 6055,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6083,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6069,
											"end": 6084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6111,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6104,
											"end": 6105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "tag",
											"source": 5,
											"value": "443"
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5961,
											"end": 6122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 6128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6777,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 6259,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6361,
											"end": 6363,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6356,
											"end": 6359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6353,
											"end": 6364,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6771,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6350,
											"end": 6771,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6438,
											"end": 6439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6446,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6499,
											"end": 6509,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6493,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6488,
											"end": 6515,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6482,
											"end": 6486,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6478,
											"end": 6516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6552,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "tag",
											"source": 5,
											"value": "447"
										},
										{
											"begin": 6529,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 6620,
											"end": 6623,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6616,
											"end": 6628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6614,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6609,
											"end": 6629,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6607,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6599,
											"end": 6630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6698,
											"end": 6700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6691,
											"end": 6696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6713,
											"end": 6726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 8298,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6953,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7079,
											"end": 7082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7073,
											"end": 7083,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7098,
											"end": 7104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7125,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7148,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 7092,
											"end": 7148,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 7128,
											"end": 7146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "tag",
											"source": 5,
											"value": "454"
										},
										{
											"begin": 7128,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 7239,
											"end": 7243,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7244,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7207,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7207,
											"end": 7245,
											"name": "tag",
											"source": 5,
											"value": "456"
										},
										{
											"begin": 7207,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7205,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 7157,
											"end": 7254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7254,
											"name": "tag",
											"source": 5,
											"value": "455"
										},
										{
											"begin": 7157,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7309,
											"end": 7313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7366,
											"end": 7368,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7355,
											"end": 7369,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8086,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8188,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 8099,
											"end": 8188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8174,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8188,
											"name": "tag",
											"source": 5,
											"value": "459"
										},
										{
											"begin": 8099,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6911,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 6917,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6902,
											"end": 6926,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 6898,
											"end": 6927,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6888,
											"end": 6928,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 6935,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6930,
											"end": 6941,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8282,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8201,
											"end": 8282,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "tag",
											"source": 5,
											"value": "458"
										},
										{
											"begin": 7378,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6199,
											"end": 6213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6243,
											"end": 6247,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6230,
											"end": 6248,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7414,
											"end": 7434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "tag",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7540,
											"end": 7554,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7654,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7654,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7614,
											"end": 7656,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7754,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7754,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7754,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7695,
											"end": 7696,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7683,
											"end": 7697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7697,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7683,
											"end": 7697,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7562,
											"end": 7581,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7562,
											"end": 7581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "462"
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "tag",
											"source": 5,
											"value": "464"
										},
										{
											"begin": 7532,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7536,
											"end": 7539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7796,
											"end": 7802,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7803,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 7876,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7877,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7940,
											"end": 7941,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7936,
											"end": 7950,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7936,
											"end": 7950,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 7955,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 7932,
											"end": 7956,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7928,
											"end": 7965,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 7924,
											"end": 7966,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7909,
											"end": 7967,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7894,
											"end": 7968,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "tag",
											"source": 5,
											"value": "465"
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8019,
											"end": 8025,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8012,
											"end": 8026,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8002,
											"end": 8006,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7995,
											"end": 8031,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "tag",
											"source": 5,
											"value": "457"
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 8292,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 8298,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 8298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8303,
											"end": 8430,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 8303,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8374,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8359,
											"end": 8362,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8355,
											"end": 8375,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8352,
											"end": 8353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8399,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8385,
											"end": 8400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8419,
											"end": 8423,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8416,
											"end": 8417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8424,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8435,
											"end": 8563,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8435,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8502,
											"end": 8511,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8523,
											"end": 8534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8523,
											"end": 8534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8523,
											"end": 8534,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8520,
											"end": 8557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8520,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8520,
											"end": 8557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 8537,
											"end": 8555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8568,
											"end": 8695,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8568,
											"end": 8695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8629,
											"end": 8639,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8624,
											"end": 8627,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8620,
											"end": 8640,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8660,
											"end": 8664,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 8657,
											"end": 8658,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8650,
											"end": 8665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8684,
											"end": 8688,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8689,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8700,
											"end": 8827,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8700,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8761,
											"end": 8771,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8756,
											"end": 8759,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8752,
											"end": 8772,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8742,
											"end": 8773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8792,
											"end": 8796,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8789,
											"end": 8790,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8782,
											"end": 8797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8820,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8813,
											"end": 8814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8821,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9682,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 9392,
											"end": 9682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9461,
											"end": 9467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9502,
											"end": 9511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9493,
											"end": 9500,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9512,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9517,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 9482,
											"end": 9534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9527,
											"end": 9528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9532,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9534,
											"name": "tag",
											"source": 5,
											"value": "474"
										},
										{
											"begin": 9482,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9556,
											"end": 9572,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9601,
											"end": 9633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9633,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9634,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9581,
											"end": 9652,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9638,
											"end": 9650,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9966,
											"end": 9981,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9966,
											"end": 9981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9966,
											"end": 9981,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9948,
											"end": 9982,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10033,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10013,
											"end": 10015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9991,
											"end": 10034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10050,
											"end": 10068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10077,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10113,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10108,
											"end": 10110,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10093,
											"end": 10111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10086,
											"end": 10117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10086,
											"end": 10117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10086,
											"end": 10117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10126,
											"end": 10161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10126,
											"end": 10161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10126,
											"end": 10161,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10160,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10204,
											"end": 10210,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10183,
											"end": 10202,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10183,
											"end": 10202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10170,
											"end": 10219,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 10269,
											"end": 10270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10266,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10254,
											"end": 10260,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10243,
											"end": 10252,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10239,
											"end": 10261,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10235,
											"end": 10267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10339,
											"end": 10342,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 10332,
											"end": 10334,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10328,
											"end": 10335,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 10323,
											"end": 10325,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10315,
											"end": 10321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10307,
											"end": 10336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10292,
											"end": 10337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10288,
											"end": 10343,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9687,
											"end": 10349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10451,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 10500,
											"end": 10509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 10474,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10474,
											"end": 10510,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 10474,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10546,
											"end": 10563,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10563,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10546,
											"end": 10563,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10719,
											"end": 10720,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10629,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10605,
											"end": 10629,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10692,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10671,
											"end": 10693,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10694,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10694,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10695,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 10572,
											"end": 10705,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "tag",
											"source": 5,
											"value": "481"
										},
										{
											"begin": 10714,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10745,
											"end": 10750,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 10743,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10774,
											"end": 10778,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10819,
											"end": 10823,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "tag",
											"source": 5,
											"value": "482"
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10874,
											"end": 10880,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10871,
											"end": 10872,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10868,
											"end": 10881,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10952,
											"end": 10966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10952,
											"end": 10966,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10939,
											"end": 10950,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10939,
											"end": 10950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10939,
											"end": 10950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10932,
											"end": 10967,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11011,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10995,
											"end": 11011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10889,
											"end": 10899,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10889,
											"end": 10899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "482"
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "tag",
											"source": 5,
											"value": "484"
										},
										{
											"begin": 10860,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10867,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11054,
											"end": 11060,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11049,
											"end": 11052,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11061,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11061,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "tag",
											"source": 5,
											"value": "479"
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10539,
											"end": 11071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10354,
											"end": 11077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11471,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 11082,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11258,
											"end": 11261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11286,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 11320,
											"end": 11323,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11312,
											"end": 11318,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 11286,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11286,
											"end": 11324,
											"name": "tag",
											"source": 5,
											"value": "486"
										},
										{
											"begin": 11286,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11353,
											"end": 11359,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11347,
											"end": 11360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 11427,
											"end": 11433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11423,
											"end": 11425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11416,
											"end": 11420,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11408,
											"end": 11414,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11404,
											"end": 11421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 11369,
											"end": 11434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11369,
											"end": 11434,
											"name": "tag",
											"source": 5,
											"value": "487"
										},
										{
											"begin": 11369,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 11082,
											"end": 11471,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11082,
											"end": 11471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11663,
											"end": 12017,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11663,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11881,
											"end": 11884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 11946,
											"end": 11949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11938,
											"end": 11944,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 11912,
											"end": 11950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11912,
											"end": 11950,
											"name": "tag",
											"source": 5,
											"value": "490"
										},
										{
											"begin": 11912,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18973539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11959,
											"end": 11982,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11959,
											"end": 11982,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12010,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 11998,
											"end": 12011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11998,
											"end": 12011,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 11663,
											"end": 12017,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 12017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12376,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 12022,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12240,
											"end": 12243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 12305,
											"end": 12308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12271,
											"end": 12309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "tag",
											"source": 5,
											"value": "492"
										},
										{
											"begin": 12271,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12318,
											"end": 12341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12318,
											"end": 12341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12357,
											"end": 12370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12357,
											"end": 12370,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12022,
											"end": 12376,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12022,
											"end": 12376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12381,
											"end": 12735,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 12381,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12630,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "494"
										},
										{
											"begin": 12664,
											"end": 12667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12656,
											"end": 12662,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12630,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12630,
											"end": 12668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12630,
											"end": 12668,
											"name": "tag",
											"source": 5,
											"value": "494"
										},
										{
											"begin": 12630,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19973539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12677,
											"end": 12700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12677,
											"end": 12700,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12727,
											"end": 12728,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 12716,
											"end": 12729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12716,
											"end": 12729,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12381,
											"end": 12735,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12381,
											"end": 12735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12740,
											"end": 13094,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 12740,
											"end": 13094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12958,
											"end": 12961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "496"
										},
										{
											"begin": 13023,
											"end": 13026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13015,
											"end": 13021,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12989,
											"end": 13027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12989,
											"end": 13027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12989,
											"end": 13027,
											"name": "tag",
											"source": 5,
											"value": "496"
										},
										{
											"begin": 12989,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13036,
											"end": 13059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13036,
											"end": 13059,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13075,
											"end": 13088,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12740,
											"end": 13094,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12740,
											"end": 13094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13099,
											"end": 13453,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 13099,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13317,
											"end": 13320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 13382,
											"end": 13385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13374,
											"end": 13380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13348,
											"end": 13386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 13348,
											"end": 13386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13348,
											"end": 13386,
											"name": "tag",
											"source": 5,
											"value": "498"
										},
										{
											"begin": 13348,
											"end": 13386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A973539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13395,
											"end": 13418,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13395,
											"end": 13418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13445,
											"end": 13446,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 13434,
											"end": 13447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13434,
											"end": 13447,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13099,
											"end": 13453,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13099,
											"end": 13453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13547,
											"end": 13548,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13584,
											"end": 13589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13547,
											"end": 13548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "tag",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13619,
											"end": 13626,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13609,
											"end": 13617,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13606,
											"end": 13627,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13678,
											"end": 13682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 13675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13670,
											"end": 13676,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 13666,
											"end": 13683,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 13660,
											"end": 13664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13657,
											"end": 13684,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13654,
											"end": 13707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 13654,
											"end": 13707,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 13687,
											"end": 13705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "tag",
											"source": 5,
											"value": "504"
										},
										{
											"begin": 13687,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13737,
											"end": 13744,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13727,
											"end": 13735,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13723,
											"end": 13745,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13720,
											"end": 13775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13720,
											"end": 13775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 13720,
											"end": 13775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13757,
											"end": 13773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13757,
											"end": 13773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13757,
											"end": 13773,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 13757,
											"end": 13773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13720,
											"end": 13775,
											"name": "tag",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 13720,
											"end": 13775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13836,
											"end": 13858,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13836,
											"end": 13858,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13836,
											"end": 13858,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 13836,
											"end": 13858,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "500"
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 13598,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13602,
											"end": 13605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13458,
											"end": 13874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13879,
											"end": 14685,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 13879,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13928,
											"end": 13933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13958,
											"end": 13966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13948,
											"end": 14028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "507"
										},
										{
											"begin": 13948,
											"end": 14028,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14013,
											"end": 14018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14013,
											"end": 14018,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13948,
											"end": 14028,
											"name": "tag",
											"source": 5,
											"value": "507"
										},
										{
											"begin": 13948,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14047,
											"end": 14051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14037,
											"end": 14113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 14037,
											"end": 14113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14084,
											"end": 14085,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14098,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14098,
											"end": 14103,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14037,
											"end": 14113,
											"name": "tag",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 14037,
											"end": 14113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14129,
											"end": 14133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14215,
											"end": 14216,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14122,
											"end": 14340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 14122,
											"end": 14340,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "tag",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 14142,
											"end": 14201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14172,
											"end": 14173,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14163,
											"end": 14173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14163,
											"end": 14173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14186,
											"end": 14191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14186,
											"end": 14191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14186,
											"end": 14191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "tag",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 14210,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14247,
											"end": 14250,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 14237,
											"end": 14245,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14234,
											"end": 14251,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14231,
											"end": 14274,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14231,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "513"
										},
										{
											"begin": 14231,
											"end": 14274,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "513"
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 14254,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "tag",
											"source": 5,
											"value": "513"
										},
										{
											"begin": 14254,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14310,
											"end": 14311,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 14296,
											"end": 14312,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14296,
											"end": 14312,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 14325,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14325,
											"end": 14330,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14122,
											"end": 14340,
											"name": "tag",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 14122,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14122,
											"end": 14340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14414,
											"end": 14422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14411,
											"end": 14427,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14405,
											"end": 14408,
											"name": "PUSH",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 14399,
											"end": 14403,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14396,
											"end": 14409,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14392,
											"end": 14428,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14386,
											"end": 14388,
											"name": "PUSH",
											"source": 5,
											"value": "4E"
										},
										{
											"begin": 14376,
											"end": 14384,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14373,
											"end": 14389,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14368,
											"end": 14370,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 14362,
											"end": 14366,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14359,
											"end": 14371,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 14355,
											"end": 14390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14352,
											"end": 14429,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14508,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "514"
										},
										{
											"begin": 14349,
											"end": 14508,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14461,
											"end": 14480,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14480,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14461,
											"end": 14480,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 14493,
											"end": 14498,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 14493,
											"end": 14498,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14349,
											"end": 14508,
											"name": "tag",
											"source": 5,
											"value": "514"
										},
										{
											"begin": 14349,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 14565,
											"end": 14573,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14559,
											"end": 14563,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 14540,
											"end": 14574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "tag",
											"source": 5,
											"value": "515"
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14610,
											"end": 14616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14606,
											"end": 14607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14602,
											"end": 14608,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 14598,
											"end": 14617,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 14589,
											"end": 14596,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14586,
											"end": 14618,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 14583,
											"end": 14641,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 14621,
											"end": 14639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 14621,
											"end": 14639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14639,
											"name": "tag",
											"source": 5,
											"value": "517"
										},
										{
											"begin": 14621,
											"end": 14639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14659,
											"end": 14679,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14659,
											"end": 14679,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13879,
											"end": 14685,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13879,
											"end": 14685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14690,
											"end": 14830,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 14690,
											"end": 14830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14748,
											"end": 14753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14777,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 14818,
											"end": 14822,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 14808,
											"end": 14816,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14804,
											"end": 14823,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14798,
											"end": 14802,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14777,
											"end": 14824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 14777,
											"end": 14824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14967,
											"end": 15184,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 14967,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15007,
											"end": 15008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15033,
											"end": 15034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15023,
											"end": 15155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "522"
										},
										{
											"begin": 15023,
											"end": 15155,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15077,
											"end": 15087,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 15072,
											"end": 15075,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 15068,
											"end": 15088,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15065,
											"end": 15066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15112,
											"end": 15116,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15102,
											"end": 15117,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15140,
											"end": 15144,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 15137,
											"end": 15138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15130,
											"end": 15145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15023,
											"end": 15155,
											"name": "tag",
											"source": 5,
											"value": "522"
										},
										{
											"begin": 15023,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14967,
											"end": 15184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"src/ERC404.sol",
								"src/Void.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseTokenURI()": "d547cfb7",
							"dataURI()": "f28ca1dd",
							"decimals()": "313ce567",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"minted()": "4f02c420",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"revokeOwnership()": "2b968958",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setDataURI(string)": "18d217c3",
							"setNameSymbol(string,string)": "504334c2",
							"setTokenURI(string)": "e0df5b6f",
							"setWhitelist(address,bool)": "53d6fd59",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a",
							"yeet(uint256)": "664dfa01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsafeRecipient\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ERC721Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataURI\",\"type\":\"string\"}],\"name\":\"setDataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setNameSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"yeet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"},\"transferFrom(address,address,uint256)\":{\"details\":\"This function assumes id / native if amount less than or equal to current max id\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Function for token approvals\"},\"ownerOf(uint256)\":{\"notice\":\"Function to find owner of a given native token\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Function for native transfers with contract support\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Function for native transfers with contract support and callback data\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Function native approvals\"},\"setWhitelist(address,bool)\":{\"notice\":\"Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets\"},\"tokenURI(uint256)\":{\"notice\":\"tokenURI must be implemented by child contract\"},\"transfer(address,uint256)\":{\"notice\":\"Function for fractional transfers\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Function for mixed transfers\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Void.sol\":\"Void\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/ERC404.sol\":{\"keccak256\":\"0xf229a06127af076ca773f84de0d572a179de9ebe79ce76ee62e186671d14c497\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfdcebe5f31a9914981cd41cd66d68a19bdc46a567d502887b6f825d0b6e955\",\"dweb:/ipfs/QmbdDbUFzzYBG94qxRiQYf5Kvm4MRxyH18urriNH7K4eVo\"]},\"src/Void.sol\":{\"keccak256\":\"0x8c8e9fb884896a3ce2c88b9dfae403b9e686662799c0c6eadf8db0c8117f463b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4b207d9efe0fc8c9b45e5373623d10c8f25519fbdec453ca720af12a6203de47\",\"dweb:/ipfs/QmZCVXvqAD5JXYxMnrLUJPBUCvHiiDTv7odvZyRLbSWPck\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1427,
								"contract": "src/Void.sol:Void",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1603,
								"contract": "src/Void.sol:Void",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1606,
								"contract": "src/Void.sol:Void",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1612,
								"contract": "src/Void.sol:Void",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1615,
								"contract": "src/Void.sol:Void",
								"label": "minted",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1620,
								"contract": "src/Void.sol:Void",
								"label": "balanceOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1627,
								"contract": "src/Void.sol:Void",
								"label": "allowance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1632,
								"contract": "src/Void.sol:Void",
								"label": "getApproved",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1639,
								"contract": "src/Void.sol:Void",
								"label": "isApprovedForAll",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1644,
								"contract": "src/Void.sol:Void",
								"label": "_ownerOf",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1650,
								"contract": "src/Void.sol:Void",
								"label": "_owned",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1655,
								"contract": "src/Void.sol:Void",
								"label": "_ownedIndex",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1660,
								"contract": "src/Void.sol:Void",
								"label": "whitelist",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2481,
								"contract": "src/Void.sol:Void",
								"label": "dataURI",
								"offset": 0,
								"slot": "13",
								"type": "t_string_storage"
							},
							{
								"astId": 2483,
								"contract": "src/Void.sol:Void",
								"label": "baseTokenURI",
								"offset": 0,
								"slot": "14",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"approve(address,uint256)": {
								"notice": "Function for token approvals"
							},
							"ownerOf(uint256)": {
								"notice": "Function to find owner of a given native token"
							},
							"safeTransferFrom(address,address,uint256)": {
								"notice": "Function for native transfers with contract support"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Function for native transfers with contract support and callback data"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Function native approvals"
							},
							"setWhitelist(address,bool)": {
								"notice": "Initialization function to set pairs / etc         saving gas by avoiding mint / burn on unnecessary targets"
							},
							"tokenURI(uint256)": {
								"notice": "tokenURI must be implemented by child contract"
							},
							"transfer(address,uint256)": {
								"notice": "Function for fractional transfers"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Function for mixed transfers"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1308
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1309,
							"src": "127:37:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "135:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 1414,
							"src": "165:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1413,
										"src": "173:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "Strings",
							"nameLocation": "259:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "273:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 7,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 12,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "335:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 10,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 19,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "520:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:0"
									},
									"src": "470:66:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "708:627:0",
										"statements": [
											{
												"id": 65,
												"nodeType": "UncheckedBlock",
												"src": "718:611:0",
												"statements": [
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "742:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 31,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "770:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 29,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "759:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1128,
																	"src": "759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:0"
													},
													{
														"assignments": [
															37
														],
														"declarations": [
															{
																"constant": false,
																"id": 37,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "794:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 36,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 42,
														"initialValue": {
															"arguments": [
																{
																	"id": 40,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "828:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 38,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:0"
													},
													{
														"assignments": [
															44
														],
														"declarations": [
															{
																"constant": false,
																"id": 44,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 65,
																"src": "849:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 43,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 45,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:0"
													},
													{
														"AST": {
															"nativeSrc": "930:67:0",
															"nodeType": "YulBlock",
															"src": "930:67:0",
															"statements": [
																{
																	"nativeSrc": "948:35:0",
																	"nodeType": "YulAssignment",
																	"src": "948:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:0",
																						"nodeType": "YulLiteral",
																						"src": "971:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:0"
																				},
																				"nativeSrc": "967:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:0"
																		},
																		"nativeSrc": "955:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 37,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:0",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:0",
																"valueSize": 1
															},
															{
																"declaration": 44,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:0",
																"valueSize": 1
															}
														],
														"id": 46,
														"nodeType": "InlineAssembly",
														"src": "921:76:0"
													},
													{
														"body": {
															"id": 61,
															"nodeType": "Block",
															"src": "1023:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:0",
																		"subExpression": {
																			"id": 48,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "1041:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 50,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:0",
																		"nodeType": "YulBlock",
																		"src": "1124:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:0",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:0"
																									},
																									"nativeSrc": "1164:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:0"
																							},
																							"nativeSrc": "1159:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:0"
																					},
																					"nativeSrc": "1146:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:0"
																				},
																				"nativeSrc": "1146:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 9,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 44,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 51,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:0"
																},
																{
																	"expression": {
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 52,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1227:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 55,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 56,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 22,
																			"src": "1260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 60,
																	"nodeType": "IfStatement",
																	"src": "1256:21:0",
																	"trueBody": {
																		"id": 59,
																		"nodeType": "Break",
																		"src": "1272:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 62,
														"nodeType": "WhileStatement",
														"src": "1010:282:0"
													},
													{
														"expression": {
															"id": 63,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1312:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 26,
														"id": 64,
														"nodeType": "Return",
														"src": "1305:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "655:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:0"
									},
									"scope": 254,
									"src": "637:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1511:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 78,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1542:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 87,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 70,
																			"src": "1588:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 85,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "1573:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1413_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1412,
																		"src": "1573:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 84,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1564:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 75,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 74,
												"id": 91,
												"nodeType": "Return",
												"src": "1521:75:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1459:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 69,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1496:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:0"
									},
									"scope": 254,
									"src": "1435:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1782:100:0",
										"statements": [
											{
												"id": 111,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1835:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 105,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 96,
																				"src": "1854:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 103,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1308,
																				"src": "1842:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1308_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1250,
																			"src": "1842:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 101,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	113,
																	196,
																	216
																],
																"referencedDeclaration": 196,
																"src": "1823:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 100,
														"id": 110,
														"nodeType": "Return",
														"src": "1816:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 98,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:0"
									},
									"scope": 254,
									"src": "1708:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2095:435:0",
										"statements": [
											{
												"assignments": [
													124
												],
												"declarations": [
													{
														"constant": false,
														"id": 124,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2105:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"id": 125,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 195,
														"src": "2141:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 127,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 132,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 129,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 140,
														"indexExpression": {
															"hexValue": "30",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:0"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 144,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 146,
														"indexExpression": {
															"hexValue": "31",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:0"
											},
											{
												"body": {
													"id": 178,
													"nodeType": "Block",
													"src": "2293:95:0",
													"statements": [
														{
															"expression": {
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 164,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 128,
																		"src": "2307:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 166,
																	"indexExpression": {
																		"id": 165,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 151,
																		"src": "2314:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 167,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "2319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 171,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "2330:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 173,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:0"
														},
														{
															"expression": {
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 174,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "2361:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 158,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 179,
															"src": "2253:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 157,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 153,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "2269:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:0",
														"subExpression": {
															"id": 161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2290:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2401:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 189,
												"nodeType": "IfStatement",
												"src": "2397:96:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "2418:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "2468:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 185,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2475:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 183,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "2439:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 187,
															"nodeType": "RevertStatement",
															"src": "2432:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "2516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 190,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 194,
												"nodeType": "Return",
												"src": "2502:21:0"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2026:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2041:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2080:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:0"
									},
									"scope": 254,
									"src": "2005:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2762:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 209,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 199,
																			"src": "2807:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 207,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 205,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 212,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2815:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 204,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															113,
															196,
															216
														],
														"referencedDeclaration": 196,
														"src": "2779:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 203,
												"id": 214,
												"nodeType": "Return",
												"src": "2772:58:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "2747:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:0"
									},
									"scope": 254,
									"src": "2689:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "2992:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "3015:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "3034:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 240,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3063:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 238,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 237,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 246,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "3086:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 244,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 243,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 225,
												"id": 251,
												"nodeType": "Return",
												"src": "3002:87:0"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2929:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2946:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 220,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:0"
									},
									"scope": 254,
									"src": "2914:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "251:2847:0",
							"usedErrors": [
								19
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 257,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "Math",
							"nameLocation": "211:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:1",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 260,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:1"
									},
									"src": "277:29:1"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 265,
									"members": [
										{
											"id": 261,
											"name": "Floor",
											"nameLocation": "336:5:1",
											"nodeType": "EnumValue",
											"src": "336:5:1"
										},
										{
											"id": 262,
											"name": "Ceil",
											"nameLocation": "379:4:1",
											"nodeType": "EnumValue",
											"src": "379:4:1"
										},
										{
											"id": 263,
											"name": "Trunc",
											"nameLocation": "421:5:1",
											"nodeType": "EnumValue",
											"src": "421:5:1"
										},
										{
											"id": 264,
											"name": "Expand",
											"nameLocation": "451:6:1",
											"nodeType": "EnumValue",
											"src": "451:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:1",
									"nodeType": "EnumDefinition",
									"src": "312:169:1"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "661:140:1",
										"statements": [
											{
												"id": 295,
												"nodeType": "UncheckedBlock",
												"src": "671:124:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 295,
																"src": "695:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "707:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "711:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "730:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 284,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "726:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 289,
															"nodeType": "Return",
															"src": "737:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 292,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "782:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 276,
														"id": 294,
														"nodeType": "Return",
														"src": "768:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "646:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "652:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:1"
									},
									"scope": 1308,
									"src": "585:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "984:113:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "994:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "1022:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 300,
																"src": "1026:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 316,
														"nodeType": "IfStatement",
														"src": "1018:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 308,
															"id": 315,
															"nodeType": "Return",
															"src": "1029:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 318,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 300,
																		"src": "1074:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 319,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "1078:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 321,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 308,
														"id": 322,
														"nodeType": "Return",
														"src": "1060:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "924:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "935:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "969:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "975:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:1"
									},
									"scope": 1308,
									"src": "908:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "1283:417:1",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1551:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 344,
														"nodeType": "IfStatement",
														"src": "1547:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 342,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 343,
															"nodeType": "Return",
															"src": "1559:16:1"
														}
													},
													{
														"assignments": [
															346
														],
														"declarations": [
															{
																"constant": false,
																"id": 346,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 365,
																"src": "1589:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 345,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 350,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "1601:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 348,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1605:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 351,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 352,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "1628:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 354,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "1633:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "1620:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 336,
															"id": 359,
															"nodeType": "Return",
															"src": "1636:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 362,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "1681:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 363,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 336,
														"id": 364,
														"nodeType": "Return",
														"src": "1667:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1223:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1234:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1268:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "1274:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:1"
									},
									"scope": 1308,
									"src": "1207:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1887:114:1",
										"statements": [
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "1925:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 386,
														"nodeType": "IfStatement",
														"src": "1921:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 378,
															"id": 385,
															"nodeType": "Return",
															"src": "1933:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 388,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "1978:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 389,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1982:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 391,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 378,
														"id": 392,
														"nodeType": "Return",
														"src": "1964:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1827:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1838:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1872:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:1"
									},
									"scope": 1308,
									"src": "1811:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "2198:114:1",
										"statements": [
											{
												"id": 421,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "2236:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 414,
														"nodeType": "IfStatement",
														"src": "2232:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 406,
															"id": 413,
															"nodeType": "Return",
															"src": "2244:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "2289:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 417,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "2293:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 419,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 406,
														"id": 420,
														"nodeType": "Return",
														"src": "2275:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2138:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2183:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2189:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:1"
									},
									"scope": 1308,
									"src": "2122:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2449:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 433,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "2466:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 434,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "2470:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 437,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "2478:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:1",
													"trueExpression": {
														"id": 436,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2474:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 439,
												"nodeType": "Return",
												"src": "2459:20:1"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2395:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2406:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2440:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:1"
									},
									"scope": 1308,
									"src": "2382:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "2624:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 451,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2641:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 452,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "2645:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 455,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2653:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:1",
													"trueExpression": {
														"id": 454,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2649:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 457,
												"nodeType": "Return",
												"src": "2634:20:1"
											}
										]
									},
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2570:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2581:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "2615:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:1"
									},
									"scope": 1308,
									"src": "2557:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2845:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 469,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "2900:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 470,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "2904:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 472,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "2910:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 474,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2914:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 476,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 468,
												"id": 480,
												"nodeType": "Return",
												"src": "2892:28:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2791:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2802:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:1"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "2836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:1"
									},
									"scope": 1308,
									"src": "2774:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3219:260:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3233:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "3229:127:1",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "3241:115:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 495,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3340:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 496,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 491,
															"id": 498,
															"nodeType": "Return",
															"src": "3333:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 501,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3444:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 505,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3458:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 509,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3467:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 491,
												"id": 514,
												"nodeType": "Return",
												"src": "3437:35:1"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3165:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3176:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:1"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3210:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:1"
									},
									"scope": 1308,
									"src": "3148:331:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3901:4018:1",
										"statements": [
											{
												"id": 640,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:1",
												"statements": [
													{
														"assignments": [
															529
														],
														"declarations": [
															{
																"constant": false,
																"id": 529,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4232:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 533,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "4248:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 531,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "4252:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:1"
													},
													{
														"assignments": [
															535
														],
														"declarations": [
															{
																"constant": false,
																"id": 535,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "4312:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 534,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 536,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:1"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:1",
															"nodeType": "YulBlock",
															"src": "4392:122:1",
															"statements": [
																{
																	"nativeSrc": "4410:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:1"
																				},
																				"nativeSrc": "4433:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:1"
																		},
																		"nativeSrc": "4420:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:1",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:1",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:1"
																				},
																				"nativeSrc": "4470:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:1"
																				},
																				"nativeSrc": "4486:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:1"
																		},
																		"nativeSrc": "4466:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:1",
																"valueSize": 1
															}
														],
														"id": 537,
														"nodeType": "InlineAssembly",
														"src": "4383:131:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4595:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 546,
														"nodeType": "IfStatement",
														"src": "4591:368:1",
														"trueBody": {
															"id": 545,
															"nodeType": "Block",
															"src": "4607:352:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 529,
																			"src": "4925:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 542,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "4933:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 527,
																	"id": 544,
																	"nodeType": "Return",
																	"src": "4918:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5065:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 548,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "5080:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 554,
														"nodeType": "IfStatement",
														"src": "5061:88:1",
														"trueBody": {
															"id": 553,
															"nodeType": "Block",
															"src": "5087:62:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 550,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "5112:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 552,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:1"
																}
															]
														}
													},
													{
														"assignments": [
															556
														],
														"declarations": [
															{
																"constant": false,
																"id": 556,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5404:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 555,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 557,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:1"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:1",
															"nodeType": "YulBlock",
															"src": "5444:291:1",
															"statements": [
																{
																	"nativeSrc": "5513:38:1",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:1"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:1"
																		},
																		"nativeSrc": "5526:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:1",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:1"
																				},
																				"nativeSrc": "5653:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:1"
																		},
																		"nativeSrc": "5642:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:1",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:1"
																		},
																		"nativeSrc": "5700:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:1",
																"valueSize": 1
															},
															{
																"declaration": 535,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:1",
																"valueSize": 1
															},
															{
																"declaration": 556,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:1",
																"valueSize": 1
															},
															{
																"declaration": 519,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:1",
																"valueSize": 1
															},
															{
																"declaration": 521,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:1",
																"valueSize": 1
															}
														],
														"id": 558,
														"nodeType": "InlineAssembly",
														"src": "5435:300:1"
													},
													{
														"assignments": [
															560
														],
														"declarations": [
															{
																"constant": false,
																"id": 560,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "5939:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 559,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 567,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "5954:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "5973:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:1"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:1",
															"nodeType": "YulBlock",
															"src": "6008:362:1",
															"statements": [
																{
																	"nativeSrc": "6073:37:1",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:1"
																		},
																		"nativeSrc": "6088:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:1",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:1"
																		},
																		"nativeSrc": "6186:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:1",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:1",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:1"
																						},
																						"nativeSrc": "6333:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:1"
																				},
																				"nativeSrc": "6329:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:1"
																		},
																		"nativeSrc": "6325:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:1",
																"valueSize": 1
															},
															{
																"declaration": 523,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:1",
																"valueSize": 1
															},
															{
																"declaration": 560,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:1",
																"valueSize": 1
															}
														],
														"id": 568,
														"nodeType": "InlineAssembly",
														"src": "5999:371:1"
													},
													{
														"expression": {
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "6436:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 570,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6445:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 571,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6453:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:1"
													},
													{
														"assignments": [
															576
														],
														"declarations": [
															{
																"constant": false,
																"id": 576,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 640,
																"src": "6775:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 575,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 583,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 578,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6798:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:1"
													},
													{
														"expression": {
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 584,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7031:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7046:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 587,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7060:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:1"
													},
													{
														"expression": {
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 592,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7100:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 594,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7115:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 595,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 599,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:1"
													},
													{
														"expression": {
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 600,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7170:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 602,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7185:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 603,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7199:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 607,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:1"
													},
													{
														"expression": {
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 608,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7240:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 610,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7255:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 611,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7269:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 615,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:1"
													},
													{
														"expression": {
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 616,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7310:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 618,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7325:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 619,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7339:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 623,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:1"
													},
													{
														"expression": {
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 624,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7381:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 626,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7396:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 627,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7410:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:1"
													},
													{
														"expression": {
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "7851:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 633,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "7860:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 634,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7868:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 637,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:1"
													},
													{
														"expression": {
															"id": 638,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7896:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 527,
														"id": 639,
														"nodeType": "Return",
														"src": "7889:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3819:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3830:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3841:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:1"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "3885:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:1"
									},
									"scope": 1308,
									"src": "3803:4116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "8161:192:1",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 684,
														"src": "8171:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "8195:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 661,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8198:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 662,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8201:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															642,
															685
														],
														"referencedDeclaration": 642,
														"src": "8188:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 666,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8244:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$265",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 665,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "8227:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 669,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "8264:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 670,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "8267:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 671,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "8270:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 668,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 681,
												"nodeType": "IfStatement",
												"src": "8223:101:1",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "8288:36:1",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 676,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "8302:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 682,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 658,
													"src": "8340:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 683,
												"nodeType": "Return",
												"src": "8333:13:1"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8067:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8078:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8089:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8110:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 651,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 650,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "8110:8:1"
													},
													"referencedDeclaration": 265,
													"src": "8110:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "8152:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:1"
									},
									"scope": 1308,
									"src": "8051:302:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "8644:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 693,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "8658:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "8654:45:1",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "8666:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 692,
															"id": 697,
															"nodeType": "Return",
															"src": "8680:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													701
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "9378:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 704,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 688,
																			"src": "9406:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 703,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			964,
																			999
																		],
																		"referencedDeclaration": 964,
																		"src": "9401:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 708,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:1"
											},
											{
												"id": 795,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:1",
												"statements": [
													{
														"expression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 711,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9839:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 712,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9849:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 715,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 713,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9858:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 714,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9862:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 717,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:1"
													},
													{
														"expression": {
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9888:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 723,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9898:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 724,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9907:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 725,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9911:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 732,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:1"
													},
													{
														"expression": {
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 733,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9937:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 734,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9947:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 735,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "9956:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 736,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "9960:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 739,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 743,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:1"
													},
													{
														"expression": {
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 744,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "9986:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 745,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "9996:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 746,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10005:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 747,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10009:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 754,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:1"
													},
													{
														"expression": {
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 755,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10035:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 756,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10045:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 757,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10054:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 758,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10058:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 761,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 765,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:1"
													},
													{
														"expression": {
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 766,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10084:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 767,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10094:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 768,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10103:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 769,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10107:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 772,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 776,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:1"
													},
													{
														"expression": {
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 777,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10133:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 778,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 701,
																				"src": "10143:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 779,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "10152:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 780,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 701,
																					"src": "10156:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 783,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 787,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 789,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "10193:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 790,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 688,
																		"src": "10201:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 791,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 701,
																		"src": "10205:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 788,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "10189:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 692,
														"id": 794,
														"nodeType": "Return",
														"src": "10182:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "8635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:1"
									},
									"scope": 1308,
									"src": "8587:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "10405:164:1",
										"statements": [
											{
												"id": 830,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:1",
												"statements": [
													{
														"assignments": [
															809
														],
														"declarations": [
															{
																"constant": false,
																"id": 809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 830,
																"src": "10439:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 813,
														"initialValue": {
															"arguments": [
																{
																	"id": 811,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "10461:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 810,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	797,
																	832
																],
																"referencedDeclaration": 797,
																"src": "10456:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "10484:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 803,
																						"src": "10511:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "10494:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 818,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10524:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 809,
																						"src": "10533:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 821,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "10542:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 807,
														"id": 829,
														"nodeType": "Return",
														"src": "10477:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10343:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10354:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 801,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "10354:8:1"
													},
													"referencedDeclaration": 265,
													"src": "10354:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:1"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "10396:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:1"
									},
									"scope": 1308,
									"src": "10329:240:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "10760:922:1",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "10770:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:1"
											},
											{
												"id": 960,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "10822:99:1",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "10844:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10862:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:1"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "10893:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "10938:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "10934:96:1",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "10955:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "10973:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:1"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11003:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11047:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "11043:96:1",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "11064:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11082:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:1"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11112:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11156:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "11152:96:1",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "11173:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11191:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:1"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11221:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11265:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "11261:93:1",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "11281:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11299:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:1"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11328:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11371:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "11367:93:1",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "11387:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11405:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:1"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11434:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11477:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 948,
														"nodeType": "IfStatement",
														"src": "11473:93:1",
														"trueBody": {
															"id": 947,
															"nodeType": "Block",
															"src": "11493:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 835,
																			"src": "11511:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:1"
																},
																{
																	"expression": {
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 943,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11540:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 946,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 949,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "11583:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "11579:64:1",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "11599:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 841,
																			"src": "11617:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 961,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 841,
													"src": "11669:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 839,
												"id": 962,
												"nodeType": "Return",
												"src": "11662:13:1"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10713:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "10751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:1"
									},
									"scope": 1308,
									"src": "10699:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11915:168:1",
										"statements": [
											{
												"id": 997,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:1",
												"statements": [
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 997,
																"src": "11949:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 980,
														"initialValue": {
															"arguments": [
																{
																	"id": 978,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "11971:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 977,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	964,
																	999
																],
																"referencedDeclaration": 964,
																"src": "11966:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 981,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11998:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 983,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 970,
																						"src": "12025:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 982,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "12008:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 987,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 985,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 986,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 976,
																						"src": "12043:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 988,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 967,
																					"src": "12052:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 994,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 974,
														"id": 996,
														"nodeType": "Return",
														"src": "11991:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11849:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11864:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 969,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 968,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "11864:8:1"
													},
													"referencedDeclaration": 265,
													"src": "11864:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:1"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:1"
									},
									"scope": 1308,
									"src": "11835:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "12276:854:1",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "12286:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1007,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"hexValue": "30",
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:1"
											},
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1011,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12342:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1027,
														"nodeType": "IfStatement",
														"src": "12338:103:1",
														"trueBody": {
															"id": 1026,
															"nodeType": "Block",
															"src": "12361:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12379:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1021,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:1"
																},
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1022,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12414:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12458:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1044,
														"nodeType": "IfStatement",
														"src": "12454:103:1",
														"trueBody": {
															"id": 1043,
															"nodeType": "Block",
															"src": "12477:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12495:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:1"
																},
																{
																	"expression": {
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12530:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1042,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12574:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1061,
														"nodeType": "IfStatement",
														"src": "12570:103:1",
														"trueBody": {
															"id": 1060,
															"nodeType": "Block",
															"src": "12593:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12611:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1055,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:1"
																},
																{
																	"expression": {
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12646:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1059,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12690:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1078,
														"nodeType": "IfStatement",
														"src": "12686:100:1",
														"trueBody": {
															"id": 1077,
															"nodeType": "Block",
															"src": "12708:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1072,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:1"
																},
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12760:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12803:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1095,
														"nodeType": "IfStatement",
														"src": "12799:100:1",
														"trueBody": {
															"id": 1094,
															"nodeType": "Block",
															"src": "12821:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12839:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1089,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:1"
																},
																{
																	"expression": {
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12873:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1093,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "12916:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "12912:100:1",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "12934:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "12952:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:1"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "12986:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "13029:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1123,
														"nodeType": "IfStatement",
														"src": "13025:66:1",
														"trueBody": {
															"id": 1122,
															"nodeType": "Block",
															"src": "13047:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1008,
																			"src": "13065:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1125,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1008,
													"src": "13117:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1126,
												"nodeType": "Return",
												"src": "13110:13:1"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12229:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:1"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "12267:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:1"
									},
									"scope": 1308,
									"src": "12214:916:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "13365:170:1",
										"statements": [
											{
												"id": 1161,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:1",
												"statements": [
													{
														"assignments": [
															1140
														],
														"declarations": [
															{
																"constant": false,
																"id": 1140,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1161,
																"src": "13399:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1139,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1144,
														"initialValue": {
															"arguments": [
																{
																	"id": 1142,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1131,
																	"src": "13422:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1141,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1128,
																	1163
																],
																"referencedDeclaration": 1128,
																"src": "13416:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1145,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "13449:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1147,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "13476:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1146,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "13459:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1150,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "13495:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1152,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1131,
																					"src": "13504:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1138,
														"id": 1160,
														"nodeType": "Return",
														"src": "13442:76:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13299:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13314:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "13314:8:1"
													},
													"referencedDeclaration": 265,
													"src": "13314:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:1"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "13356:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:1"
									},
									"scope": 1308,
									"src": "13284:251:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "13855:600:1",
										"statements": [
											{
												"assignments": [
													1172
												],
												"declarations": [
													{
														"constant": false,
														"id": 1172,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "13865:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1174,
												"initialValue": {
													"hexValue": "30",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:1"
											},
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "13921:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "13917:98:1",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "13939:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "13957:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:1"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "13988:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14032:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "14028:95:1",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "14049:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14067:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:1"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14097:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14140:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "14136:95:1",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "14157:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:1"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14205:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1234,
														"nodeType": "IfStatement",
														"src": "14244:95:1",
														"trueBody": {
															"id": 1233,
															"nodeType": "Block",
															"src": "14265:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "14283:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:1"
																},
																{
																	"expression": {
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1229,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14313:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1232,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "14356:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "14352:64:1",
														"trueBody": {
															"id": 1244,
															"nodeType": "Block",
															"src": "14372:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1240,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "14390:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1243,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1247,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1172,
													"src": "14442:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1248,
												"nodeType": "Return",
												"src": "14435:13:1"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13808:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:1"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "13846:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:1"
									},
									"scope": 1308,
									"src": "13792:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "14692:177:1",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:1",
												"statements": [
													{
														"assignments": [
															1262
														],
														"declarations": [
															{
																"constant": false,
																"id": 1262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1286,
																"src": "14726:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1266,
														"initialValue": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "14750:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1263,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1250,
																	1288
																],
																"referencedDeclaration": 1250,
																"src": "14743:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "14777:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1269,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "14804:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$265",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1268,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1307,
																					"src": "14787:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$265_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1271,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1274,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1272,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1262,
																									"src": "14823:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1273,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1275,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1277,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "14838:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1260,
														"id": 1285,
														"nodeType": "Return",
														"src": "14770:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14626:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14641:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "14641:8:1"
													},
													"referencedDeclaration": 265,
													"src": "14641:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:1"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "14683:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:1"
									},
									"scope": 1308,
									"src": "14610:259:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "15067:48:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "15090:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$265",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1296,
												"id": 1305,
												"nodeType": "Return",
												"src": "15077:31:1"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15019:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$265",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1290,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "15019:8:1"
													},
													"referencedDeclaration": 265,
													"src": "15019:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$265",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:1"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15061:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1294,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:1"
									},
									"scope": 1308,
									"src": "14993:122:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1309,
							"src": "203:14914:1",
							"usedErrors": [
								260
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1413
						]
					},
					"id": 1414,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1413,
							"linearizedBaseContracts": [
								1413
							],
							"name": "SignedMath",
							"nameLocation": "224:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "376:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1321,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "393:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1322,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "397:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "405:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:2",
													"trueExpression": {
														"id": 1324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "401:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1327,
												"nodeType": "Return",
												"src": "386:20:2"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "325:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "335:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1315,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:2"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "368:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:2"
									},
									"scope": 1413,
									"src": "312:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "555:37:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1339,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "572:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1340,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "576:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "584:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:2",
													"trueExpression": {
														"id": 1342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "580:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1338,
												"id": 1345,
												"nodeType": "Return",
												"src": "565:20:2"
											}
										]
									},
									"documentation": {
										"id": 1330,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "504:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1331,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "514:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1333,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:2"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "547:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1336,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:2"
									},
									"scope": 1413,
									"src": "491:101:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "797:162:2",
										"statements": [
											{
												"assignments": [
													1358
												],
												"declarations": [
													{
														"constant": false,
														"id": 1358,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "859:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1357,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1359,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "871:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1360,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "875:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1362,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1363,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "882:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1364,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "886:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1369,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "911:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1377,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1358,
																						"src": "931:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1376,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1375,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1373,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1382,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "945:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1383,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1352,
																				"src": "949:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1387,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1389,
												"nodeType": "Return",
												"src": "904:48:2"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "746:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1349,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "756:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1351,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:2"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "789:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1354,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:2"
									},
									"scope": 1413,
									"src": "729:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "1103:158:2",
										"statements": [
											{
												"id": 1410,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1401,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1228:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:2",
																		"subExpression": {
																			"id": 1405,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1394,
																			"src": "1242:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:2",
																	"trueExpression": {
																		"id": 1404,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1394,
																		"src": "1237:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1398,
														"id": 1409,
														"nodeType": "Return",
														"src": "1213:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1061:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:2"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "1094:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:2"
									},
									"scope": 1413,
									"src": "1048:213:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1414,
							"src": "216:1047:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:2"
				},
				"id": 2
			},
			"src/ERC404.sol": {
				"ast": {
					"absolutePath": "src/ERC404.sol",
					"exportedSymbols": {
						"ERC404": [
							2473
						],
						"ERC721Receiver": [
							1537
						],
						"Ownable": [
							1518
						]
					},
					"id": 2474,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1518,
							"linearizedBaseContracts": [
								1518
							],
							"name": "Ownable",
							"nameLocation": "81:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1421,
									"name": "OwnershipTransferred",
									"nameLocation": "101:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "138:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "122:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "121:48:3"
									},
									"src": "95:75:3"
								},
								{
									"errorSelector": "82b42900",
									"id": 1423,
									"name": "Unauthorized",
									"nameLocation": "182:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:3"
									},
									"src": "176:21:3"
								},
								{
									"errorSelector": "49e27cff",
									"id": 1425,
									"name": "InvalidOwner",
									"nameLocation": "208:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:3"
									},
									"src": "202:21:3"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1427,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "244:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1518,
									"src": "229:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1426,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "229:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "285:75:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1429,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "299:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "303:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "299:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1431,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "313:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "299:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "295:46:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1433,
															"name": "Unauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "327:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "327:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1435,
													"nodeType": "RevertStatement",
													"src": "320:21:3"
												}
											},
											{
												"id": 1437,
												"nodeType": "PlaceholderStatement",
												"src": "352:1:3"
											}
										]
									},
									"id": 1439,
									"name": "onlyOwner",
									"nameLocation": "265:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:3"
									},
									"src": "256:104:3",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "394:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1444,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "408:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "426:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1445,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "418:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "418:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "408:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "404:47:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1450,
															"name": "InvalidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "437:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "437:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1452,
													"nodeType": "RevertStatement",
													"src": "430:21:3"
												}
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "462:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1455,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "470:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "462:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "462:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "521:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "513:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1459,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "513:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "513:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1463,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "525:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1458,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "492:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1465,
												"nodeType": "EmitStatement",
												"src": "487:45:3"
											}
										]
									},
									"id": 1467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "386:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "378:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:16:3"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:0:3"
									},
									"scope": 1518,
									"src": "366:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1474,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "627:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "645:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "637:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1475,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "637:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "637:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "627:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "623:47:3",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1480,
															"name": "InvalidOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "656:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "656:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1482,
													"nodeType": "RevertStatement",
													"src": "649:21:3"
												}
											},
											{
												"expression": {
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1484,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "681:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1485,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "689:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "681:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "681:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "732:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "736:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "732:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1491,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "744:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1488,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "711:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "711:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "EmitStatement",
												"src": "706:45:3"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1472,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1471,
												"name": "onlyOwner",
												"nameLocations": [
													"603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "554:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "580:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "572:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:16:3"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:3"
									},
									"scope": 1518,
									"src": "545:213:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "816:95:3",
										"statements": [
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1500,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "826:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "842:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "834:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1501,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "834:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "834:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "826:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "826:18:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "881:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "885:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "881:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "901:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "893:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1510,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "893:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "893:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1507,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "860:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "860:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "EmitStatement",
												"src": "855:49:3"
											}
										]
									},
									"functionSelector": "2b968958",
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1498,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1497,
												"name": "onlyOwner",
												"nameLocations": [
													"806:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "806:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "806:9:3"
										}
									],
									"name": "revokeOwnership",
									"nameLocation": "773:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:3"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "816:0:3"
									},
									"scope": 1518,
									"src": "764:147:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2474,
							"src": "63:850:3",
							"usedErrors": [
								1423,
								1425
							],
							"usedEvents": [
								1421
							]
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC721Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1537,
							"linearizedBaseContracts": [
								1537
							],
							"name": "ERC721Receiver",
							"nameLocation": "933:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "1095:64:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1531,
															"name": "ERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "1112:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1537_$",
																"typeString": "type(contract ERC721Receiver)"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1127:16:3",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1536,
														"src": "1112:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1144:8:3",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1112:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1530,
												"id": 1534,
												"nodeType": "Return",
												"src": "1105:47:3"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "963:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "989:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1006:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1023:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:81:3"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "1087:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:8:3"
									},
									"scope": 1537,
									"src": "954:205:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 2474,
							"src": "915:246:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1539,
										"name": "Ownable",
										"nameLocations": [
											"1894:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1518,
										"src": "1894:7:3"
									},
									"id": 1540,
									"nodeType": "InheritanceSpecifier",
									"src": "1894:7:3"
								}
							],
							"canonicalName": "ERC404",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1538,
								"nodeType": "StructuredDocumentation",
								"src": "1163:703:3",
								"text": "@notice ERC404\n         A gas-efficient, mixed ERC20 / ERC721 implementation\n         with native liquidity and fractionalization.\n         This is an experimental standard designed to integrate\n         with pre-existing ERC20 / ERC721 support as smoothly as\n         possible.\n @dev    In order to support full functionality of ERC20 and ERC721\n         supply assumptions are made that slightly constraint usage.\n         Ensure decimals are sufficiently large (standard 18 recommended)\n         as ids are effectively encoded in the lowest range of amounts.\n         NFTs are spent on ERC20 functions in a FILO queue, this is by\n         design."
							},
							"fullyImplemented": false,
							"id": 2473,
							"linearizedBaseContracts": [
								2473,
								1518
							],
							"name": "ERC404",
							"nameLocation": "1884:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e59fdd36d0d223c0c7d996db7ad796880f45e1936cb0bb7ac102e7082e031487",
									"id": 1548,
									"name": "ERC20Transfer",
									"nameLocation": "1928:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1967:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1951:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1997:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1981:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2017:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2009:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:88:3"
									},
									"src": "1922:108:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1556,
									"name": "Approval",
									"nameLocation": "2041:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2075:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2059:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2106:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2090:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2131:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "2123:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:94:3"
									},
									"src": "2035:109:3"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1564,
									"name": "Transfer",
									"nameLocation": "2155:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2189:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2173:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2203:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2247:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "2231:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2163:92:3"
									},
									"src": "2149:107:3"
								},
								{
									"anonymous": false,
									"eventSelector": "797365dabb18fa726ccbccbe18c6f24c34e3b0653f2e99ea873bd7b84763dde6",
									"id": 1572,
									"name": "ERC721Approval",
									"nameLocation": "2267:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "2291:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2338:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "2322:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2371:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "2355:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:98:3"
									},
									"src": "2261:119:3"
								},
								{
									"anonymous": false,
									"eventSelector": "1f01303a1ce9329d9963e1937c201e23c5543a9e3536e9edead087aec7dc6d83",
									"id": 1580,
									"name": "ERC20Approval",
									"nameLocation": "2391:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2414:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2445:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2486:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2478:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:94:3"
									},
									"src": "2385:114:3"
								},
								{
									"anonymous": false,
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1588,
									"name": "ApprovalForAll",
									"nameLocation": "2510:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2550:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "2534:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2534:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2581:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "2565:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2604:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "2599:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2599:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:94:3"
									},
									"src": "2504:115:3"
								},
								{
									"errorSelector": "c5723b51",
									"id": 1590,
									"name": "NotFound",
									"nameLocation": "2645:8:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2653:2:3"
									},
									"src": "2639:17:3"
								},
								{
									"errorSelector": "23369fa6",
									"id": 1592,
									"name": "AlreadyExists",
									"nameLocation": "2667:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:2:3"
									},
									"src": "2661:22:3"
								},
								{
									"errorSelector": "9c8d2cd2",
									"id": 1594,
									"name": "InvalidRecipient",
									"nameLocation": "2694:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:3"
									},
									"src": "2688:25:3"
								},
								{
									"errorSelector": "ddb5de5e",
									"id": 1596,
									"name": "InvalidSender",
									"nameLocation": "2724:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2737:2:3"
									},
									"src": "2718:22:3"
								},
								{
									"errorSelector": "3da63931",
									"id": 1598,
									"name": "UnsafeRecipient",
									"nameLocation": "2751:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2766:2:3"
									},
									"src": "2745:24:3"
								},
								{
									"errorSelector": "dfa1a408",
									"id": 1600,
									"name": "InvalidId",
									"nameLocation": "2780:9:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2789:2:3"
									},
									"src": "2774:18:3"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "2814:19:3",
										"text": "@dev Token name"
									},
									"functionSelector": "06fdde03",
									"id": 1603,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "2852:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "2838:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1602,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2838:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2863:21:3",
										"text": "@dev Token symbol"
									},
									"functionSelector": "95d89b41",
									"id": 1606,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "2903:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "2889:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1605,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2889:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "2916:47:3",
										"text": "@dev Decimals for fractional representation"
									},
									"functionSelector": "313ce567",
									"id": 1609,
									"mutability": "immutable",
									"name": "decimals",
									"nameLocation": "2991:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "2968:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1608,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2968:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "3006:54:3",
										"text": "@dev Total supply in fractionalized representation"
									},
									"functionSelector": "18160ddd",
									"id": 1612,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "3080:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3065:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1611,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3065:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3098:84:3",
										"text": "@dev Current mint counter, monotonically increasing to ensure accurate ownership"
									},
									"functionSelector": "4f02c420",
									"id": 1615,
									"mutability": "mutable",
									"name": "minted",
									"nameLocation": "3202:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3187:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1614,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3187:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "3232:53:3",
										"text": "@dev Balance of user in fractional representation"
									},
									"functionSelector": "70a08231",
									"id": 1620,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "3325:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3290:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1619,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1617,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3298:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3290:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1618,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3309:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "3341:55:3",
										"text": "@dev Allowance of user in fractional representation"
									},
									"functionSelector": "dd62ed3e",
									"id": 1627,
									"mutability": "mutable",
									"name": "allowance",
									"nameLocation": "3456:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3401:64:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1626,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1622,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3409:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3401:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1625,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1623,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3428:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3420:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1624,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3439:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "3472:41:3",
										"text": "@dev Approval in native representaion"
									},
									"functionSelector": "081812fc",
									"id": 1632,
									"mutability": "mutable",
									"name": "getApproved",
									"nameLocation": "3553:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3518:46:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1631,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1629,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3526:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3518:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1630,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3537:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "3571:50:3",
										"text": "@dev Approval for all in native representation"
									},
									"functionSelector": "e985e9c5",
									"id": 1639,
									"mutability": "mutable",
									"name": "isApprovedForAll",
									"nameLocation": "3678:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3626:68:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1638,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1634,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3634:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3626:44:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1637,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1635,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3653:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3645:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1636,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3664:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "3701:45:3",
										"text": "@dev Owner of id in native representation"
									},
									"id": 1644,
									"mutability": "mutable",
									"name": "_ownerOf",
									"nameLocation": "3788:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3751:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1643,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1641,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3759:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3751:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1642,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3770:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "3803:52:3",
										"text": "@dev Array of owned ids in native representation"
									},
									"id": 1650,
									"mutability": "mutable",
									"name": "_owned",
									"nameLocation": "3899:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3860:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1649,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1646,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3868:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3860:29:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1647,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3879:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1648,
											"nodeType": "ArrayTypeName",
											"src": "3879:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "3912:46:3",
										"text": "@dev Tracks indices for the _owned mapping"
									},
									"id": 1655,
									"mutability": "mutable",
									"name": "_ownedIndex",
									"nameLocation": "4000:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "3963:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1654,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1652,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3971:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "3963:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1653,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3982:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "4018:91:3",
										"text": "@dev Addresses whitelisted from minting / burning for gas savings (pairs, routers, etc)"
									},
									"functionSelector": "9b19251a",
									"id": 1660,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "4146:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 2473,
									"src": "4114:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1659,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1657,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4122:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4114:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1658,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "4133:4:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "4360:146:3",
										"statements": [
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1676,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "4370:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1677,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "4377:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4370:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "4370:12:3"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1680,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "4392:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1681,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "4401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4392:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "4392:16:3"
											},
											{
												"expression": {
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1684,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4418:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1685,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "4429:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4418:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "4418:20:3"
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1688,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "4448:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1689,
															"name": "_totalNativeSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "4462:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4484:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1691,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "4490:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "4484:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1693,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4483:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4462:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4448:51:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "4448:51:3"
											}
										]
									},
									"id": 1698,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1673,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1670,
													"src": "4352:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1674,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1672,
												"name": "Ownable",
												"nameLocations": [
													"4344:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1518,
												"src": "4344:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4344:15:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "4216:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4202:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4202:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "4245:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4231:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4231:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "4268:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1665,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_totalNativeSupply",
												"nameLocation": "4295:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4287:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4287:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "4323:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:151:3"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4360:0:3"
									},
									"scope": 2473,
									"src": "4181:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "4712:42:3",
										"statements": [
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1708,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "4722:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1710,
														"indexExpression": {
															"id": 1709,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1701,
															"src": "4732:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4722:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1711,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1703,
														"src": "4742:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4722:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "4722:25:3"
											}
										]
									},
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "4512:128:3",
										"text": "@notice Initialization function to set pairs / etc\n         saving gas by avoiding mint / burn on unnecessary targets"
									},
									"functionSelector": "53d6fd59",
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1706,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1705,
												"name": "onlyOwner",
												"nameLocations": [
													"4702:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "4702:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4702:9:3"
										}
									],
									"name": "setWhitelist",
									"nameLocation": "4654:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4675:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "4667:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "4688:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "4683:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4683:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:28:3"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4712:0:3"
									},
									"scope": 2473,
									"src": "4645:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "4896:114:3",
										"statements": [
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1723,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "4906:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1724,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "4914:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1726,
														"indexExpression": {
															"id": 1725,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "4923:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4914:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4906:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "4906:20:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1729,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "4941:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4958:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4950:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1730,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4950:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4950:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4941:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1739,
												"nodeType": "IfStatement",
												"src": "4937:67:3",
												"trueBody": {
													"id": 1738,
													"nodeType": "Block",
													"src": "4962:42:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1735,
																	"name": "NotFound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "4983:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4983:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1737,
															"nodeType": "RevertStatement",
															"src": "4976:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "4760:58:3",
										"text": "@notice Function to find owner of a given native token"
									},
									"functionSelector": "6352211e",
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4832:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4848:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "4840:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4840:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4839:12:3"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4889:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "4881:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4881:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4880:15:3"
									},
									"scope": 2473,
									"src": "4823:187:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "5016:58:3",
										"text": "@notice tokenURI must be implemented by child contract"
									},
									"functionSelector": "c87b56dd",
									"id": 1749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "5088:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5105:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5097:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5097:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5096:12:3"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "5138:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5138:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5137:15:3"
									},
									"scope": 2473,
									"src": "5079:74:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1835,
										"nodeType": "Block",
										"src": "5404:641:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1759,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "5418:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1760,
															"name": "minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "5432:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5418:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1762,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "5442:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5455:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5442:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5418:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "5823:194:3",
													"statements": [
														{
															"expression": {
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1808,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "5837:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1812,
																		"indexExpression": {
																			"expression": {
																				"id": 1809,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5847:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5851:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5847:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5837:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1813,
																	"indexExpression": {
																		"id": 1811,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5859:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5837:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1814,
																	"name": "amountOrId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "5870:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5837:43:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1816,
															"nodeType": "ExpressionStatement",
															"src": "5837:43:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1818,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5909:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5913:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5909:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1820,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5921:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1821,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "5930:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1817,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "5900:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5900:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1823,
															"nodeType": "EmitStatement",
															"src": "5895:46:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1825,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5974:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5978:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5974:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1827,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5986:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1828,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "5995:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1824,
																	"name": "ERC20Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "5960:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:46:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1830,
															"nodeType": "EmitStatement",
															"src": "5955:51:3"
														}
													]
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "5414:603:3",
												"trueBody": {
													"id": 1807,
													"nodeType": "Block",
													"src": "5458:359:3",
													"statements": [
														{
															"assignments": [
																1767
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1767,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "5480:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1807,
																	"src": "5472:13:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5472:7:3",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1771,
															"initialValue": {
																"baseExpression": {
																	"id": 1768,
																	"name": "_ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "5488:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1770,
																"indexExpression": {
																	"id": 1769,
																	"name": "amountOrId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "5497:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5488:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5472:36:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1772,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5527:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5531:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5527:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1774,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "5541:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "5527:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "5550:36:3",
																	"subExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1776,
																				"name": "isApprovedForAll",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "5551:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 1778,
																			"indexExpression": {
																				"id": 1777,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1767,
																				"src": "5568:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5551:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1781,
																		"indexExpression": {
																			"expression": {
																				"id": 1779,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5575:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5579:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5575:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5551:35:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5527:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1788,
															"nodeType": "IfStatement",
															"src": "5523:119:3",
															"trueBody": {
																"id": 1787,
																"nodeType": "Block",
																"src": "5588:54:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1784,
																				"name": "Unauthorized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "5613:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5613:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1786,
																		"nodeType": "RevertStatement",
																		"src": "5606:21:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1789,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "5656:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1791,
																	"indexExpression": {
																		"id": 1790,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "5668:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5656:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1792,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1752,
																	"src": "5682:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5656:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1794,
															"nodeType": "ExpressionStatement",
															"src": "5656:33:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1796,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "5718:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1797,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5725:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1798,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "5734:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1795,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "5709:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5709:36:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "EmitStatement",
															"src": "5704:41:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1802,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "5779:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1803,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "5786:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1804,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "5795:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1801,
																	"name": "ERC721Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "5764:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5764:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1806,
															"nodeType": "EmitStatement",
															"src": "5759:47:3"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6034:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1758,
												"id": 1834,
												"nodeType": "Return",
												"src": "6027:11:3"
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "5159:134:3",
										"text": "@notice Function for token approvals\n @dev This function assumes id / native if amount less than or equal to current max id"
									},
									"functionSelector": "095ea7b3",
									"id": 1836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5307:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5332:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "5324:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5324:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "amountOrId",
												"nameLocation": "5357:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "5349:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5314:59:3"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "5398:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5398:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:6:3"
									},
									"scope": 2473,
									"src": "5298:747:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "6168:128:3",
										"statements": [
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1844,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "6178:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1848,
															"indexExpression": {
																"expression": {
																	"id": 1845,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6195:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6199:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6195:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6178:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1849,
														"indexExpression": {
															"id": 1847,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6207:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6178:38:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1850,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "6219:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6178:49:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "6178:49:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1854,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6258:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6262:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1856,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "6270:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "6280:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1853,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "6243:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6243:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "EmitStatement",
												"src": "6238:51:3"
											}
										]
									},
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "6051:37:3",
										"text": "@notice Function native approvals"
									},
									"functionSelector": "a22cb465",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6102:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6128:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6120:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "6143:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "6138:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6138:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6119:33:3"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6168:0:3"
									},
									"scope": 2473,
									"src": "6093:203:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "6567:1738:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1873,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "6581:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1874,
															"name": "minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "6595:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6581:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1876,
															"name": "amountOrId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "6605:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6605:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6581:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2059,
													"nodeType": "Block",
													"src": "8040:238:3",
													"statements": [
														{
															"assignments": [
																2026
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2026,
																	"mutability": "mutable",
																	"name": "allowed",
																	"nameLocation": "8062:7:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2059,
																	"src": "8054:15:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2025,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8054:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2033,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2027,
																		"name": "allowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "8072:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 2029,
																	"indexExpression": {
																		"id": 2028,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "8082:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8072:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2032,
																"indexExpression": {
																	"expression": {
																		"id": 2030,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8088:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8092:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8088:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8072:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8054:45:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2034,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2026,
																	"src": "8118:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8134:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2036,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "8134:7:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 2035,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8129:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8129:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8143:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8129:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8118:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2052,
															"nodeType": "IfStatement",
															"src": "8114:100:3",
															"trueBody": {
																"expression": {
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 2041,
																				"name": "allowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1627,
																				"src": "8164:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 2045,
																			"indexExpression": {
																				"id": 2042,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1864,
																				"src": "8174:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8164:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2046,
																		"indexExpression": {
																			"expression": {
																				"id": 2043,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "8180:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8184:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "8180:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8164:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2047,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2026,
																			"src": "8194:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2048,
																			"name": "amountOrId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1868,
																			"src": "8204:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8194:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8164:50:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2051,
																"nodeType": "ExpressionStatement",
																"src": "8164:50:3"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2054,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "8246:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2055,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "8252:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2056,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "8256:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2053,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "8236:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) returns (bool)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8236:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 1872,
															"id": 2058,
															"nodeType": "Return",
															"src": "8229:38:3"
														}
													]
												},
												"id": 2060,
												"nodeType": "IfStatement",
												"src": "6577:1701:3",
												"trueBody": {
													"id": 2024,
													"nodeType": "Block",
													"src": "6621:1413:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1880,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "6639:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1881,
																		"name": "_ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "6647:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1883,
																	"indexExpression": {
																		"id": 1882,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "6656:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6647:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6639:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1889,
															"nodeType": "IfStatement",
															"src": "6635:89:3",
															"trueBody": {
																"id": 1888,
																"nodeType": "Block",
																"src": "6669:55:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1885,
																				"name": "InvalidSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1596,
																				"src": "6694:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6694:15:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1887,
																		"nodeType": "RevertStatement",
																		"src": "6687:22:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1890,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "6742:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6756:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6748:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1891,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6748:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6748:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6742:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1900,
															"nodeType": "IfStatement",
															"src": "6738:80:3",
															"trueBody": {
																"id": 1899,
																"nodeType": "Block",
																"src": "6760:58:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1896,
																				"name": "InvalidRecipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "6785:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6785:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1898,
																		"nodeType": "RevertStatement",
																		"src": "6778:25:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1901,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6853:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6857:6:3",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6853:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1903,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "6867:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6853:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 1911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "6891:35:3",
																		"subExpression": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1905,
																					"name": "isApprovedForAll",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1639,
																					"src": "6892:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																						"typeString": "mapping(address => mapping(address => bool))"
																					}
																				},
																				"id": 1907,
																				"indexExpression": {
																					"id": 1906,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1864,
																					"src": "6909:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6892:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1910,
																			"indexExpression": {
																				"expression": {
																					"id": 1908,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6915:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6919:6:3",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6915:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6892:34:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6853:73:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1913,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6946:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6950:6:3",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6946:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1915,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "6960:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 1917,
																		"indexExpression": {
																			"id": 1916,
																			"name": "amountOrId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1868,
																			"src": "6972:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6960:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6946:37:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6853:130:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1924,
															"nodeType": "IfStatement",
															"src": "6832:220:3",
															"trueBody": {
																"id": 1923,
																"nodeType": "Block",
																"src": "6998:54:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1920,
																				"name": "Unauthorized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1423,
																				"src": "7023:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7023:14:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1922,
																		"nodeType": "RevertStatement",
																		"src": "7016:21:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1925,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1620,
																		"src": "7066:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1927,
																	"indexExpression": {
																		"id": 1926,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "7076:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7066:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1928,
																		"name": "_getUnit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "7085:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7085:10:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7066:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1931,
															"nodeType": "ExpressionStatement",
															"src": "7066:29:3"
														},
														{
															"id": 1939,
															"nodeType": "UncheckedBlock",
															"src": "7110:70:3",
															"statements": [
																{
																	"expression": {
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1932,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1620,
																				"src": "7138:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1934,
																			"indexExpression": {
																				"id": 1933,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1866,
																				"src": "7148:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7138:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1935,
																				"name": "_getUnit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2325,
																				"src": "7155:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7155:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7138:27:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1938,
																	"nodeType": "ExpressionStatement",
																	"src": "7138:27:3"
																}
															]
														},
														{
															"expression": {
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1940,
																		"name": "_ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "7194:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1942,
																	"indexExpression": {
																		"id": 1941,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "7203:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7194:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1943,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "7217:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7194:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1945,
															"nodeType": "ExpressionStatement",
															"src": "7194:25:3"
														},
														{
															"expression": {
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "7233:30:3",
																"subExpression": {
																	"baseExpression": {
																		"id": 1946,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "7240:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1948,
																	"indexExpression": {
																		"id": 1947,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "7252:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7240:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1950,
															"nodeType": "ExpressionStatement",
															"src": "7233:30:3"
														},
														{
															"assignments": [
																1952
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1952,
																	"mutability": "mutable",
																	"name": "updatedId",
																	"nameLocation": "7326:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2024,
																	"src": "7318:17:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1951,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7318:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1963,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1953,
																		"name": "_owned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "7338:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1955,
																	"indexExpression": {
																		"id": 1954,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "7345:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7338:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1962,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1956,
																				"name": "_owned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1650,
																				"src": "7351:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																					"typeString": "mapping(address => uint256[] storage ref)"
																				}
																			},
																			"id": 1958,
																			"indexExpression": {
																				"id": 1957,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1864,
																				"src": "7358:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7351:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7364:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7351:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7373:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7351:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7338:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7318:57:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1964,
																	"name": "updatedId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "7406:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1965,
																	"name": "amountOrId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "7419:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7406:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1986,
															"nodeType": "IfStatement",
															"src": "7402:285:3",
															"trueBody": {
																"id": 1985,
																"nodeType": "Block",
																"src": "7431:256:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1967,
																						"name": "_owned",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1650,
																						"src": "7508:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																							"typeString": "mapping(address => uint256[] storage ref)"
																						}
																					},
																					"id": 1972,
																					"indexExpression": {
																						"id": 1968,
																						"name": "from",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1864,
																						"src": "7515:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7508:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 1973,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1969,
																						"name": "_ownedIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1655,
																						"src": "7521:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																							"typeString": "mapping(uint256 => uint256)"
																						}
																					},
																					"id": 1971,
																					"indexExpression": {
																						"id": 1970,
																						"name": "amountOrId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1868,
																						"src": "7533:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7521:23:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7508:37:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1974,
																				"name": "updatedId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1952,
																				"src": "7548:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7508:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1976,
																		"nodeType": "ExpressionStatement",
																		"src": "7508:49:3"
																	},
																	{
																		"expression": {
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1977,
																					"name": "_ownedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1655,
																					"src": "7624:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1979,
																				"indexExpression": {
																					"id": 1978,
																					"name": "updatedId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1952,
																					"src": "7636:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "7624:22:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1980,
																					"name": "_ownedIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1655,
																					"src": "7649:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1982,
																				"indexExpression": {
																					"id": 1981,
																					"name": "amountOrId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1868,
																					"src": "7661:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "7649:23:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7624:48:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1984,
																		"nodeType": "ExpressionStatement",
																		"src": "7624:48:3"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"baseExpression": {
																			"id": 1987,
																			"name": "_owned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "7720:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1989,
																		"indexExpression": {
																			"id": 1988,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "7727:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7720:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7733:3:3",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "7720:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer)"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7720:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1992,
															"nodeType": "ExpressionStatement",
															"src": "7720:18:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1997,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "7806:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1993,
																			"name": "_owned",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1650,
																			"src": "7790:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1995,
																		"indexExpression": {
																			"id": 1994,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "7797:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7790:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7801:4:3",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "7790:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7790:27:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1999,
															"nodeType": "ExpressionStatement",
															"src": "7790:27:3"
														},
														{
															"expression": {
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2000,
																		"name": "_ownedIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "7872:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2002,
																	"indexExpression": {
																		"id": 2001,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "7884:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7872:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2003,
																				"name": "_owned",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1650,
																				"src": "7898:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																					"typeString": "mapping(address => uint256[] storage ref)"
																				}
																			},
																			"id": 2005,
																			"indexExpression": {
																				"id": 2004,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1866,
																				"src": "7905:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7898:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7909:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "7898:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7918:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7898:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7872:47:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2010,
															"nodeType": "ExpressionStatement",
															"src": "7872:47:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2012,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "7948:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2013,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "7954:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2014,
																		"name": "amountOrId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1868,
																		"src": "7958:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2011,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "7939:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7939:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2016,
															"nodeType": "EmitStatement",
															"src": "7934:35:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2018,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1864,
																		"src": "8002:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2019,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1866,
																		"src": "8008:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2020,
																			"name": "_getUnit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "8012:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8012:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2017,
																	"name": "ERC20Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1548,
																	"src": "7988:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7988:35:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2023,
															"nodeType": "EmitStatement",
															"src": "7983:40:3"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8294:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1872,
												"id": 2062,
												"nodeType": "Return",
												"src": "8287:11:3"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "6302:134:3",
										"text": "@notice Function for mixed transfers\n @dev This function assumes id / native if amount less than or equal to current max id"
									},
									"functionSelector": "23b872dd",
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6450:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6480:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "6472:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6502:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "6494:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "amountOrId",
												"nameLocation": "6522:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "6514:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6462:75:3"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "6561:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6561:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6560:6:3"
									},
									"scope": 2473,
									"src": "6441:1864:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "8459:57:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2075,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8486:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8490:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8486:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2077,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "8498:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "8502:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2074,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "8476:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8476:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2080,
												"nodeType": "Return",
												"src": "8469:40:3"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "8311:45:3",
										"text": "@notice Function for fractional transfers"
									},
									"functionSelector": "a9059cbb",
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8370:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8396:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "8388:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8416:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "8408:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8378:50:3"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "8453:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2071,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8453:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8452:6:3"
									},
									"scope": 2473,
									"src": "8361:155:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "8699:363:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2092,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "8713:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2093,
															"name": "minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "8718:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8713:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2095,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "8728:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8734:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8713:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2103,
												"nodeType": "IfStatement",
												"src": "8709:71:3",
												"trueBody": {
													"id": 2102,
													"nodeType": "Block",
													"src": "8737:43:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2099,
																	"name": "InvalidId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "8758:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8758:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2101,
															"nodeType": "RevertStatement",
															"src": "8751:18:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2105,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "8803:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "8809:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "8813:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2104,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "8790:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8790:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "8790:26:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 2110,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "8844:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8847:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8844:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8852:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8844:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8862:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8844:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2119,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8915:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8919:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8915:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2121,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2085,
																	"src": "8927:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2122,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2089,
																	"src": "8933:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "",
																	"id": 2123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8937:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2116,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "8894:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2115,
																		"name": "ERC721Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "8879:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1537_$",
																			"typeString": "type(contract ERC721Receiver)"
																		}
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8879:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Receiver_$1537",
																		"typeString": "contract ERC721Receiver"
																	}
																},
																"id": 2118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8898:16:3",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1536,
																"src": "8879:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8879:61:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2125,
																	"name": "ERC721Receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "8956:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1537_$",
																		"typeString": "type(contract ERC721Receiver)"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8971:16:3",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1536,
																"src": "8956:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "8988:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "8956:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "8879:117:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8844:152:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "8827:229:3",
												"trueBody": {
													"id": 2133,
													"nodeType": "Block",
													"src": "9007:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2130,
																	"name": "UnsafeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9028:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9028:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2132,
															"nodeType": "RevertStatement",
															"src": "9021:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "8522:63:3",
										"text": "@notice Function for native transfers with contract support"
									},
									"functionSelector": "42842e0e",
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8599:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8633:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "8625:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8625:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8655:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "8647:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "8667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8667:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8615:68:3"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 2473,
									"src": "8590:472:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "9292:374:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2148,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "9307:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2149,
															"name": "minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "9312:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9307:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2151,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "9322:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9328:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9322:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9307:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2159,
												"nodeType": "IfStatement",
												"src": "9303:71:3",
												"trueBody": {
													"id": 2158,
													"nodeType": "Block",
													"src": "9331:43:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2155,
																	"name": "InvalidId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "9352:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9352:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2157,
															"nodeType": "RevertStatement",
															"src": "9345:18:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2161,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2139,
															"src": "9405:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2162,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "9411:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2163,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "9415:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2160,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2064,
														"src": "9392:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9392:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2165,
												"nodeType": "ExpressionStatement",
												"src": "9392:26:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 2166,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "9446:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9449:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "9446:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9454:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "9446:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9464:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9446:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2175,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9517:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9521:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9517:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2177,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "9529:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2178,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "9535:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2179,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2145,
																	"src": "9539:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2172,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2141,
																			"src": "9496:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2171,
																		"name": "ERC721Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "9481:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1537_$",
																			"typeString": "type(contract ERC721Receiver)"
																		}
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9481:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Receiver_$1537",
																		"typeString": "contract ERC721Receiver"
																	}
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9500:16:3",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1536,
																"src": "9481:35:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																}
															},
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9481:63:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2181,
																	"name": "ERC721Receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "9560:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721Receiver_$1537_$",
																		"typeString": "type(contract ERC721Receiver)"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9575:16:3",
																"memberName": "onERC721Received",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1536,
																"src": "9560:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																	"typeString": "function ERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9592:8:3",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "9560:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "9481:119:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9446:154:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2190,
												"nodeType": "IfStatement",
												"src": "9429:231:3",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "9611:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2186,
																	"name": "UnsafeRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1598,
																	"src": "9632:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9632:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2188,
															"nodeType": "RevertStatement",
															"src": "9625:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "9068:81:3",
										"text": "@notice Function for native transfers with contract support and callback data"
									},
									"functionSelector": "b88d4fde",
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "9163:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9197:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "9189:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9189:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "9211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "9239:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "9231:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9266:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "9251:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9251:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:97:3"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9292:0:3"
									},
									"scope": 2473,
									"src": "9154:512:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "9846:943:3",
										"statements": [
											{
												"assignments": [
													2205
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "unit",
														"nameLocation": "9864:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 2314,
														"src": "9856:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9856:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2206,
														"name": "_getUnit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "9871:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9871:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9856:25:3"
											},
											{
												"assignments": [
													2210
												],
												"declarations": [
													{
														"constant": false,
														"id": 2210,
														"mutability": "mutable",
														"name": "balanceBeforeSender",
														"nameLocation": "9899:19:3",
														"nodeType": "VariableDeclaration",
														"scope": 2314,
														"src": "9891:27:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9891:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"baseExpression": {
														"id": 2211,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "9921:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2213,
													"indexExpression": {
														"id": 2212,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "9931:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9921:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9891:45:3"
											},
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "balanceBeforeReceiver",
														"nameLocation": "9954:21:3",
														"nodeType": "VariableDeclaration",
														"scope": 2314,
														"src": "9946:29:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9946:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2220,
												"initialValue": {
													"baseExpression": {
														"id": 2217,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "9978:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2219,
													"indexExpression": {
														"id": 2218,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "9988:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9978:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9946:45:3"
											},
											{
												"expression": {
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2221,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "10002:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2223,
														"indexExpression": {
															"id": 2222,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "10012:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10002:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2224,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "10021:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10002:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "10002:25:3"
											},
											{
												"id": 2233,
												"nodeType": "UncheckedBlock",
												"src": "10038:58:3",
												"statements": [
													{
														"expression": {
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2227,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "10062:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2229,
																"indexExpression": {
																	"id": 2228,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "10072:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10062:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2230,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "10079:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10062:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2232,
														"nodeType": "ExpressionStatement",
														"src": "10062:23:3"
													}
												]
											},
											{
												"condition": {
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10165:16:3",
													"subExpression": {
														"baseExpression": {
															"id": 2234,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "10166:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2236,
														"indexExpression": {
															"id": 2235,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "10176:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10166:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2269,
												"nodeType": "IfStatement",
												"src": "10161:245:3",
												"trueBody": {
													"id": 2268,
													"nodeType": "Block",
													"src": "10183:223:3",
													"statements": [
														{
															"assignments": [
																2239
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2239,
																	"mutability": "mutable",
																	"name": "tokens_to_burn",
																	"nameLocation": "10205:14:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2268,
																	"src": "10197:22:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2238,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10197:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2251,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2240,
																				"name": "balanceBeforeSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2210,
																				"src": "10223:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2241,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "10245:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10223:26:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2243,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10222:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2244,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "10270:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2246,
																				"indexExpression": {
																					"id": 2245,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "10280:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10270:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2247,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "10288:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10270:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2249,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10269:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10222:71:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10197:96:3"
														},
														{
															"body": {
																"id": 2266,
																"nodeType": "Block",
																"src": "10352:44:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2263,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "10376:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2262,
																				"name": "_burn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2456,
																				"src": "10370:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10370:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2265,
																		"nodeType": "ExpressionStatement",
																		"src": "10370:11:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2256,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "10327:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2257,
																	"name": "tokens_to_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "10331:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10327:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2267,
															"initializationExpression": {
																"assignments": [
																	2253
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2253,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10320:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 2267,
																		"src": "10312:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2252,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10312:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2255,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10324:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10312:13:3"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10347:3:3",
																	"subExpression": {
																		"id": 2259,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "10347:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2261,
																"nodeType": "ExpressionStatement",
																"src": "10347:3:3"
															},
															"nodeType": "ForStatement",
															"src": "10307:89:3"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10478:14:3",
													"subExpression": {
														"baseExpression": {
															"id": 2270,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "10479:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2272,
														"indexExpression": {
															"id": 2271,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "10489:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10479:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2305,
												"nodeType": "IfStatement",
												"src": "10474:241:3",
												"trueBody": {
													"id": 2304,
													"nodeType": "Block",
													"src": "10494:221:3",
													"statements": [
														{
															"assignments": [
																2275
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2275,
																	"mutability": "mutable",
																	"name": "tokens_to_mint",
																	"nameLocation": "10516:14:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2304,
																	"src": "10508:22:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2274,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2287,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2276,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1620,
																					"src": "10534:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2278,
																				"indexExpression": {
																					"id": 2277,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2197,
																					"src": "10544:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "10534:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2279,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "10550:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10534:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2281,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10533:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2282,
																				"name": "balanceBeforeReceiver",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "10575:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2283,
																				"name": "unit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "10599:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10575:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2285,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10574:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10533:71:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10508:96:3"
														},
														{
															"body": {
																"id": 2302,
																"nodeType": "Block",
																"src": "10663:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2299,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2197,
																					"src": "10687:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2298,
																				"name": "_mint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2396,
																				"src": "10681:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10681:9:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2301,
																		"nodeType": "ExpressionStatement",
																		"src": "10681:9:3"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2289,
																	"src": "10638:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2293,
																	"name": "tokens_to_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "10642:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10638:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2303,
															"initializationExpression": {
																"assignments": [
																	2289
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2289,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "10631:1:3",
																		"nodeType": "VariableDeclaration",
																		"scope": 2303,
																		"src": "10623:9:3",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2288,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10623:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2291,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10623:13:3"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "10658:3:3",
																	"subExpression": {
																		"id": 2295,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2289,
																		"src": "10658:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2297,
																"nodeType": "ExpressionStatement",
																"src": "10658:3:3"
															},
															"nodeType": "ForStatement",
															"src": "10618:87:3"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2307,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "10744:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2308,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "10750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2309,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "10754:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2306,
														"name": "ERC20Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "10730:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10730:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2311,
												"nodeType": "EmitStatement",
												"src": "10725:36:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10778:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2203,
												"id": 2313,
												"nodeType": "Return",
												"src": "10771:11:3"
											}
										]
									},
									"documentation": {
										"id": 2193,
										"nodeType": "StructuredDocumentation",
										"src": "9672:54:3",
										"text": "@notice Internal function for fractional transfers"
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "9740:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9767:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9759:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9789:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9781:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9781:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9809:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9801:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9801:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9749:72:3"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "9840:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2201,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9840:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:6:3"
									},
									"scope": 2473,
									"src": "9731:1058:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "10877:38:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10894:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 2321,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "10900:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10894:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2323,
												"nodeType": "Return",
												"src": "10887:21:3"
											}
										]
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUnit",
									"nameLocation": "10834:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10842:2:3"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "10868:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10867:9:3"
									},
									"scope": 2473,
									"src": "10825:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2395,
										"nodeType": "Block",
										"src": "10965:447:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2330,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "10979:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10993:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10985:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2331,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10985:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10985:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10979:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2340,
												"nodeType": "IfStatement",
												"src": "10975:72:3",
												"trueBody": {
													"id": 2339,
													"nodeType": "Block",
													"src": "10997:50:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2336,
																	"name": "InvalidRecipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "11018:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11018:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2338,
															"nodeType": "RevertStatement",
															"src": "11011:25:3"
														}
													]
												}
											},
											{
												"id": 2344,
												"nodeType": "UncheckedBlock",
												"src": "11057:43:3",
												"statements": [
													{
														"expression": {
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "11081:8:3",
															"subExpression": {
																"id": 2341,
																"name": "minted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "11081:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2343,
														"nodeType": "ExpressionStatement",
														"src": "11081:8:3"
													}
												]
											},
											{
												"assignments": [
													2346
												],
												"declarations": [
													{
														"constant": false,
														"id": 2346,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "11118:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 2395,
														"src": "11110:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11110:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2348,
												"initialValue": {
													"id": 2347,
													"name": "minted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1615,
													"src": "11123:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11110:19:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2349,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "11181:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2351,
														"indexExpression": {
															"id": 2350,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "11190:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11205:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11197:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2352,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11197:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11197:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11181:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2361,
												"nodeType": "IfStatement",
												"src": "11177:79:3",
												"trueBody": {
													"id": 2360,
													"nodeType": "Block",
													"src": "11209:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2357,
																	"name": "AlreadyExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "11230:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11230:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2359,
															"nodeType": "RevertStatement",
															"src": "11223:22:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2362,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "11266:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2364,
														"indexExpression": {
															"id": 2363,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "11275:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11266:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2365,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "11281:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11266:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "11266:17:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2372,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "11309:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2368,
																"name": "_owned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "11293:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2370,
															"indexExpression": {
																"id": 2369,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2327,
																"src": "11300:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11293:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11304:4:3",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "11293:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11293:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2374,
												"nodeType": "ExpressionStatement",
												"src": "11293:19:3"
											},
											{
												"expression": {
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2375,
															"name": "_ownedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "11322:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2377,
														"indexExpression": {
															"id": 2376,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "11334:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11322:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2378,
																	"name": "_owned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "11340:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																		"typeString": "mapping(address => uint256[] storage ref)"
																	}
																},
																"id": 2380,
																"indexExpression": {
																	"id": 2379,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "11347:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11340:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11351:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11340:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11360:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11340:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11322:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2385,
												"nodeType": "ExpressionStatement",
												"src": "11322:39:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11394:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11386:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11386:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11386:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2391,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "11398:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2392,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "11402:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2386,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "11377:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11377:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "EmitStatement",
												"src": "11372:33:3"
											}
										]
									},
									"id": 2396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10930:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10944:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "10936:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10936:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10935:12:3"
									},
									"returnParameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10965:0:3"
									},
									"scope": 2473,
									"src": "10921:491:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2455,
										"nodeType": "Block",
										"src": "11464:315:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2401,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2398,
														"src": "11478:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11494:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11486:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2402,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11486:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11486:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11478:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2411,
												"nodeType": "IfStatement",
												"src": "11474:71:3",
												"trueBody": {
													"id": 2410,
													"nodeType": "Block",
													"src": "11498:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2407,
																	"name": "InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "11519:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11519:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2409,
															"nodeType": "RevertStatement",
															"src": "11512:22:3"
														}
													]
												}
											},
											{
												"assignments": [
													2413
												],
												"declarations": [
													{
														"constant": false,
														"id": 2413,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "11563:2:3",
														"nodeType": "VariableDeclaration",
														"scope": 2455,
														"src": "11555:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11555:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2424,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2414,
															"name": "_owned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "11568:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 2416,
														"indexExpression": {
															"id": 2415,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "11575:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11568:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2423,
													"indexExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2417,
																	"name": "_owned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "11581:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																		"typeString": "mapping(address => uint256[] storage ref)"
																	}
																},
																"id": 2419,
																"indexExpression": {
																	"id": 2418,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "11588:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11581:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																	"typeString": "uint256[] storage ref"
																}
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11594:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11581:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11603:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11581:23:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11568:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11555:50:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 2425,
																"name": "_owned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "11615:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 2427,
															"indexExpression": {
																"id": 2426,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "11622:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11615:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11628:3:3",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "11615:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11615:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2430,
												"nodeType": "ExpressionStatement",
												"src": "11615:18:3"
											},
											{
												"expression": {
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11643:22:3",
													"subExpression": {
														"baseExpression": {
															"id": 2431,
															"name": "_ownedIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "11650:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2433,
														"indexExpression": {
															"id": 2432,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "11662:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11650:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2435,
												"nodeType": "ExpressionStatement",
												"src": "11643:22:3"
											},
											{
												"expression": {
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11675:19:3",
													"subExpression": {
														"baseExpression": {
															"id": 2436,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "11682:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2438,
														"indexExpression": {
															"id": 2437,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "11691:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11682:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2440,
												"nodeType": "ExpressionStatement",
												"src": "11675:19:3"
											},
											{
												"expression": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11704:22:3",
													"subExpression": {
														"baseExpression": {
															"id": 2441,
															"name": "getApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "11711:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2443,
														"indexExpression": {
															"id": 2442,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "11723:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11711:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "11704:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "11751:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11765:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11757:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2448,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11757:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11757:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2452,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2413,
															"src": "11769:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1564,
														"src": "11742:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11742:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "EmitStatement",
												"src": "11737:35:3"
											}
										]
									},
									"id": 2456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11427:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11441:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "11433:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11432:14:3"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11464:0:3"
									},
									"scope": 2473,
									"src": "11418:361:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2471,
										"nodeType": "Block",
										"src": "11884:55:3",
										"statements": [
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2463,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "11894:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2464,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "11901:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11894:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "11894:12:3"
											},
											{
												"expression": {
													"id": 2469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2467,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "11916:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2468,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "11925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "11916:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2470,
												"nodeType": "ExpressionStatement",
												"src": "11916:16:3"
											}
										]
									},
									"id": 2472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNameSymbol",
									"nameLocation": "11794:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "11832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11818:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11818:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "11861:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "11847:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11847:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11808:66:3"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11884:0:3"
									},
									"scope": 2473,
									"src": "11785:154:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2474,
							"src": "1866:10076:3",
							"usedErrors": [
								1423,
								1425,
								1590,
								1592,
								1594,
								1596,
								1598,
								1600
							],
							"usedEvents": [
								1421,
								1548,
								1556,
								1564,
								1572,
								1580,
								1588
							]
						}
					],
					"src": "38:11905:3"
				},
				"id": 3
			},
			"src/Void.sol": {
				"ast": {
					"absolutePath": "src/Void.sol",
					"exportedSymbols": {
						"ERC404": [
							2473
						],
						"ERC721Receiver": [
							1537
						],
						"Math": [
							1308
						],
						"Ownable": [
							1518
						],
						"SignedMath": [
							1413
						],
						"Strings": [
							254
						],
						"Void": [
							2696
						]
					},
					"id": 2697,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2475,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "38:23:4"
						},
						{
							"absolutePath": "src/ERC404.sol",
							"file": "./ERC404.sol",
							"id": 2476,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 2474,
							"src": "63:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2697,
							"sourceUnit": 255,
							"src": "86:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2478,
										"name": "ERC404",
										"nameLocations": [
											"156:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2473,
										"src": "156:6:4"
									},
									"id": 2479,
									"nodeType": "InheritanceSpecifier",
									"src": "156:6:4"
								}
							],
							"canonicalName": "Void",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2696,
							"linearizedBaseContracts": [
								2696,
								2473,
								1518
							],
							"name": "Void",
							"nameLocation": "148:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f28ca1dd",
									"id": 2481,
									"mutability": "mutable",
									"name": "dataURI",
									"nameLocation": "183:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "169:21:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2480,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "169:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d547cfb7",
									"id": 2483,
									"mutability": "mutable",
									"name": "baseTokenURI",
									"nameLocation": "210:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 2696,
									"src": "196:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2482,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "196:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "299:87:4",
										"statements": [
											{
												"expression": {
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2495,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "309:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2497,
														"indexExpression": {
															"id": 2496,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "319:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "309:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000"
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130303030",
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "329:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "337:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "343:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "337:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "329:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000"
														}
													},
													"src": "309:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "309:36:4"
											},
											{
												"expression": {
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2505,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "355:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2507,
														"indexExpression": {
															"id": 2506,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "365:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "355:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "375:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "355:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "355:24:4"
											}
										]
									},
									"id": 2512,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "566f6964",
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "264:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_13b6146cb05e4d67e18c2dfe4cd5b9c0d3c9bdac3a6825bb78fb2d95a1e7c33e",
														"typeString": "literal_string \"Void\""
													},
													"value": "Void"
												},
												{
													"hexValue": "564f4944",
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "272:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_efbf28cfef90f6e66848f14d2584142b5f56588b00ccf09d42715526cfec66c8",
														"typeString": "literal_string \"VOID\""
													},
													"value": "VOID"
												},
												{
													"hexValue": "3138",
													"id": 2490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "280:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												{
													"hexValue": "3130303030",
													"id": 2491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "284:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10000_by_1",
														"typeString": "int_const 10000"
													},
													"value": "10000"
												},
												{
													"id": 2492,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2485,
													"src": "291:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2493,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2487,
												"name": "ERC404",
												"nameLocations": [
													"257:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2473,
												"src": "257:6:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "257:41:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "249:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "241:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:16:4"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:0:4"
									},
									"scope": 2696,
									"src": "229:157:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "429:135:4",
										"statements": [
											{
												"assignments": [
													2518
												],
												"declarations": [
													{
														"constant": false,
														"id": 2518,
														"mutability": "mutable",
														"name": "yeeting",
														"nameLocation": "444:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "439:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2517,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "439:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2526,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "471:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "463:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "463:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "463:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2514,
															"src": "475:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2519,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "454:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "454:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "439:43:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2527,
														"name": "yeeting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "496:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "507:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "496:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2535,
												"nodeType": "IfStatement",
												"src": "492:66:4",
												"trueBody": {
													"id": 2534,
													"nodeType": "Block",
													"src": "512:46:4",
													"statements": [
														{
															"expression": {
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2530,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "526:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2531,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "541:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "526:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2533,
															"nodeType": "ExpressionStatement",
															"src": "526:21:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "664dfa01",
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "yeet",
									"nameLocation": "401:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "414:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "406:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:16:4"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "429:0:4"
									},
									"scope": 2696,
									"src": "392:172:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2548,
										"nodeType": "Block",
										"src": "631:35:4",
										"statements": [
											{
												"expression": {
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2544,
														"name": "dataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2481,
														"src": "641:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2545,
														"name": "_dataURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2539,
														"src": "651:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "641:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2547,
												"nodeType": "ExpressionStatement",
												"src": "641:18:4"
											}
										]
									},
									"functionSelector": "18d217c3",
									"id": 2549,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2541,
												"name": "onlyOwner",
												"nameLocations": [
													"621:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "621:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "621:9:4"
										}
									],
									"name": "setDataURI",
									"nameLocation": "579:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "_dataURI",
												"nameLocation": "604:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "590:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:24:4"
									},
									"returnParameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:4"
									},
									"scope": 2696,
									"src": "570:96:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "735:41:4",
										"statements": [
											{
												"expression": {
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2556,
														"name": "baseTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2483,
														"src": "745:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2557,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "760:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "745:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2559,
												"nodeType": "ExpressionStatement",
												"src": "745:24:4"
											}
										]
									},
									"functionSelector": "e0df5b6f",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2554,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2553,
												"name": "onlyOwner",
												"nameLocations": [
													"725:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "725:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "725:9:4"
										}
									],
									"name": "setTokenURI",
									"nameLocation": "681:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "707:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "693:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:25:4"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:4"
									},
									"scope": 2696,
									"src": "672:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "866:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2571,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2563,
															"src": "891:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2572,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "898:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2570,
														"name": "_setNameSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2472,
														"src": "876:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "876:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2574,
												"nodeType": "ExpressionStatement",
												"src": "876:30:4"
											}
										]
									},
									"functionSelector": "504334c2",
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2568,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2567,
												"name": "onlyOwner",
												"nameLocations": [
													"856:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1439,
												"src": "856:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "856:9:4"
										}
									],
									"name": "setNameSymbol",
									"nameLocation": "791:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "805:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "840:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "826:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "826:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:44:4"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:0:4"
									},
									"scope": 2696,
									"src": "782:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1749
									],
									"body": {
										"id": 2694,
										"nodeType": "Block",
										"src": "994:747:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2586,
																	"name": "baseTokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2483,
																	"src": "1014:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1008:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2584,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1008:5:4",
																	"typeDescriptions": {}
																}
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1008:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1028:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1008:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1037:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1008:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2692,
													"nodeType": "Block",
													"src": "1127:608:4",
													"statements": [
														{
															"assignments": [
																2603
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2603,
																	"mutability": "mutable",
																	"name": "URI",
																	"nameLocation": "1155:3:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2692,
																	"src": "1141:17:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 2602,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1141:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2604,
															"nodeType": "VariableDeclarationStatement",
															"src": "1141:17:4"
														},
														{
															"assignments": [
																2606
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2606,
																	"mutability": "mutable",
																	"name": "seed",
																	"nameLocation": "1178:4:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 2692,
																	"src": "1172:10:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2605,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1172:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2619,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 2614,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2578,
																								"src": "1225:2:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 2612,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "1208:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 2613,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "1212:12:4",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "1208:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 2615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1208:20:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 2611,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "1198:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 2616,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1198:31:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1191:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes1_$",
																				"typeString": "type(bytes1)"
																			},
																			"typeName": {
																				"id": 2609,
																				"name": "bytes1",
																				"nodeType": "ElementaryTypeName",
																				"src": "1191:6:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1191:39:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	],
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1185:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 2607,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1185:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1172:59:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2620,
																	"name": "seed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2606,
																	"src": "1249:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1257:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "1249:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2633,
																		"name": "seed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2606,
																		"src": "1342:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "313630",
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1350:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	"src": "1342:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2646,
																			"name": "seed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2606,
																			"src": "1435:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "323130",
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1443:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_210_by_1",
																				"typeString": "int_const 210"
																			},
																			"value": "210"
																		},
																		"src": "1435:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 2661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2659,
																				"name": "seed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2606,
																				"src": "1528:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "323430",
																				"id": 2660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1536:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_240_by_1",
																					"typeString": "int_const 240"
																				},
																				"value": "240"
																			},
																			"src": "1528:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 2674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2672,
																					"name": "seed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2606,
																					"src": "1621:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1629:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "1621:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2685,
																			"nodeType": "IfStatement",
																			"src": "1617:88:4",
																			"trueBody": {
																				"id": 2684,
																				"nodeType": "Block",
																				"src": "1634:71:4",
																				"statements": [
																					{
																						"expression": {
																							"id": 2682,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 2675,
																								"name": "URI",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2603,
																								"src": "1652:3:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"arguments": [
																									{
																										"id": 2679,
																										"name": "dataURI",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2481,
																										"src": "1672:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_string_storage",
																											"typeString": "string storage ref"
																										}
																									},
																									{
																										"hexValue": "352e6a736f6e",
																										"id": 2680,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "1680:8:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_6eea9a6de4c3985cf54063d4714fcf07fe5ed5060a46a71d2f0602caeb80fc5b",
																											"typeString": "literal_string \"5.json\""
																										},
																										"value": "5.json"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_string_storage",
																											"typeString": "string storage ref"
																										},
																										{
																											"typeIdentifier": "t_stringliteral_6eea9a6de4c3985cf54063d4714fcf07fe5ed5060a46a71d2f0602caeb80fc5b",
																											"typeString": "literal_string \"5.json\""
																										}
																									],
																									"expression": {
																										"id": 2677,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "1658:6:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																											"typeString": "type(string storage pointer)"
																										},
																										"typeName": {
																											"id": 2676,
																											"name": "string",
																											"nodeType": "ElementaryTypeName",
																											"src": "1658:6:4",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 2678,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "1665:6:4",
																									"memberName": "concat",
																									"nodeType": "MemberAccess",
																									"src": "1658:13:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																										"typeString": "function () pure returns (string memory)"
																									}
																								},
																								"id": 2681,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1658:31:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							},
																							"src": "1652:37:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"id": 2683,
																						"nodeType": "ExpressionStatement",
																						"src": "1652:37:4"
																					}
																				]
																			}
																		},
																		"id": 2686,
																		"nodeType": "IfStatement",
																		"src": "1524:181:4",
																		"trueBody": {
																			"id": 2671,
																			"nodeType": "Block",
																			"src": "1541:70:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 2669,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2662,
																							"name": "URI",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2603,
																							"src": "1559:3:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 2666,
																									"name": "dataURI",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2481,
																									"src": "1579:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_string_storage",
																										"typeString": "string storage ref"
																									}
																								},
																								{
																									"hexValue": "342e6a736f6e",
																									"id": 2667,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "string",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1587:8:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_stringliteral_4a775ad1648cf6d79df915218def47122b33dabdc3d5ddc487404303cca0dce7",
																										"typeString": "literal_string \"4.json\""
																									},
																									"value": "4.json"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_string_storage",
																										"typeString": "string storage ref"
																									},
																									{
																										"typeIdentifier": "t_stringliteral_4a775ad1648cf6d79df915218def47122b33dabdc3d5ddc487404303cca0dce7",
																										"typeString": "literal_string \"4.json\""
																									}
																								],
																								"expression": {
																									"id": 2664,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "1565:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																										"typeString": "type(string storage pointer)"
																									},
																									"typeName": {
																										"id": 2663,
																										"name": "string",
																										"nodeType": "ElementaryTypeName",
																										"src": "1565:6:4",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2665,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1572:6:4",
																								"memberName": "concat",
																								"nodeType": "MemberAccess",
																								"src": "1565:13:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																									"typeString": "function () pure returns (string memory)"
																								}
																							},
																							"id": 2668,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1565:31:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						},
																						"src": "1559:37:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"id": 2670,
																					"nodeType": "ExpressionStatement",
																					"src": "1559:37:4"
																				}
																			]
																		}
																	},
																	"id": 2687,
																	"nodeType": "IfStatement",
																	"src": "1431:274:4",
																	"trueBody": {
																		"id": 2658,
																		"nodeType": "Block",
																		"src": "1448:70:4",
																		"statements": [
																			{
																				"expression": {
																					"id": 2656,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2649,
																						"name": "URI",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2603,
																						"src": "1466:3:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2653,
																								"name": "dataURI",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2481,
																								"src": "1486:7:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_storage",
																									"typeString": "string storage ref"
																								}
																							},
																							{
																								"hexValue": "332e6a736f6e",
																								"id": 2654,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "1494:8:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_4d10d82a4c5ff6a5ff8664b03b6e2674a8d81db062548496b7bdf37c6efa6356",
																									"typeString": "literal_string \"3.json\""
																								},
																								"value": "3.json"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_string_storage",
																									"typeString": "string storage ref"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_4d10d82a4c5ff6a5ff8664b03b6e2674a8d81db062548496b7bdf37c6efa6356",
																									"typeString": "literal_string \"3.json\""
																								}
																							],
																							"expression": {
																								"id": 2651,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "1472:6:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																									"typeString": "type(string storage pointer)"
																								},
																								"typeName": {
																									"id": 2650,
																									"name": "string",
																									"nodeType": "ElementaryTypeName",
																									"src": "1472:6:4",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2652,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1479:6:4",
																							"memberName": "concat",
																							"nodeType": "MemberAccess",
																							"src": "1472:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																								"typeString": "function () pure returns (string memory)"
																							}
																						},
																						"id": 2655,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1472:31:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					"src": "1466:37:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"id": 2657,
																				"nodeType": "ExpressionStatement",
																				"src": "1466:37:4"
																			}
																		]
																	}
																},
																"id": 2688,
																"nodeType": "IfStatement",
																"src": "1338:367:4",
																"trueBody": {
																	"id": 2645,
																	"nodeType": "Block",
																	"src": "1355:70:4",
																	"statements": [
																		{
																			"expression": {
																				"id": 2643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2636,
																					"name": "URI",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2603,
																					"src": "1373:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 2640,
																							"name": "dataURI",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2481,
																							"src": "1393:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_storage",
																								"typeString": "string storage ref"
																							}
																						},
																						{
																							"hexValue": "322e6a736f6e",
																							"id": 2641,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1401:8:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_2c4eda4dfa144a2959617abf213b5014ed152a3f3c4521d49251b95896013803",
																								"typeString": "literal_string \"2.json\""
																							},
																							"value": "2.json"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_storage",
																								"typeString": "string storage ref"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_2c4eda4dfa144a2959617abf213b5014ed152a3f3c4521d49251b95896013803",
																								"typeString": "literal_string \"2.json\""
																							}
																						],
																						"expression": {
																							"id": 2638,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1379:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							},
																							"typeName": {
																								"id": 2637,
																								"name": "string",
																								"nodeType": "ElementaryTypeName",
																								"src": "1379:6:4",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2639,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1386:6:4",
																						"memberName": "concat",
																						"nodeType": "MemberAccess",
																						"src": "1379:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () pure returns (string memory)"
																						}
																					},
																					"id": 2642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1379:31:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				"src": "1373:37:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"id": 2644,
																			"nodeType": "ExpressionStatement",
																			"src": "1373:37:4"
																		}
																	]
																}
															},
															"id": 2689,
															"nodeType": "IfStatement",
															"src": "1245:460:4",
															"trueBody": {
																"id": 2632,
																"nodeType": "Block",
																"src": "1262:70:4",
																"statements": [
																	{
																		"expression": {
																			"id": 2630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2623,
																				"name": "URI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2603,
																				"src": "1280:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2627,
																						"name": "dataURI",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2481,
																						"src": "1300:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					},
																					{
																						"hexValue": "312e6a736f6e",
																						"id": 2628,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1308:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_29147069a2d0d7be183503cb9cdcc9c1230470bb5e311286e796d07c1a047f6f",
																							"typeString": "literal_string \"1.json\""
																						},
																						"value": "1.json"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_29147069a2d0d7be183503cb9cdcc9c1230470bb5e311286e796d07c1a047f6f",
																							"typeString": "literal_string \"1.json\""
																						}
																					],
																					"expression": {
																						"id": 2625,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1286:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 2624,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "1286:6:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2626,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1293:6:4",
																					"memberName": "concat",
																					"nodeType": "MemberAccess",
																					"src": "1286:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																						"typeString": "function () pure returns (string memory)"
																					}
																				},
																				"id": 2629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1286:31:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"src": "1280:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 2631,
																		"nodeType": "ExpressionStatement",
																		"src": "1280:37:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2690,
																"name": "URI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "1721:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2583,
															"id": 2691,
															"nodeType": "Return",
															"src": "1714:10:4"
														}
													]
												},
												"id": 2693,
												"nodeType": "IfStatement",
												"src": "1004:731:4",
												"trueBody": {
													"id": 2601,
													"nodeType": "Block",
													"src": "1040:81:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2594,
																		"name": "baseTokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2483,
																		"src": "1075:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2597,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2578,
																				"src": "1106:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2595,
																				"name": "Strings",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "1089:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Strings_$254_$",
																					"typeString": "type(library Strings)"
																				}
																			},
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1097:8:4",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 67,
																			"src": "1089:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1089:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1061:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2591,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1061:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1068:6:4",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1061:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 2599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1061:49:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2583,
															"id": 2600,
															"nodeType": "Return",
															"src": "1054:56:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "928:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "961:8:4"
									},
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "945:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "937:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "936:12:4"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2695,
												"src": "979:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2581,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "979:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:4"
									},
									"scope": 2696,
									"src": "919:822:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2697,
							"src": "139:1604:4",
							"usedErrors": [
								1423,
								1425,
								1590,
								1592,
								1594,
								1596,
								1598,
								1600
							],
							"usedEvents": [
								1421,
								1548,
								1556,
								1564,
								1572,
								1580,
								1588
							]
						}
					],
					"src": "38:1705:4"
				},
				"id": 4
			}
		}
	}
}